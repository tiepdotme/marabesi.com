<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marabesi</title>
    <description>Trying to inspire people through software development. Here you will find posts related to web development and software engineering.
</description>
    <link>https://marabesi.com/</link>
    <atom:link href="https://marabesi.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 13 Nov 2020 22:56:33 +0000</pubDate>
    <lastBuildDate>Fri, 13 Nov 2020 22:56:33 +0000</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>Git release bot - PART 1</title>
        <description>&lt;p&gt;Releasing software to the final users is challenging regardless of the programming
language of choice. For web apps it requires a web server, for compiled apps
it requires a way for distribute the binary and for each one extra steps
are needed, in the end the release is just the final step of a long process.&lt;/p&gt;

&lt;p&gt;In the old days, applications where deployed via SFTP and required to move file by file
in the server, later on git, was used to make the changes a bit easier, without the need
to upload file by file then the devops and continuous integration/delivery
came to support the agile practices.&lt;/p&gt;

&lt;p&gt;Gitbot comes to continue the continuous integration/deploy in the development
process based on conventional commits and semantic version. Gitbot is an attempt
to make the boring task to change files (package.json or composer.json) versions
for each relased an automated process.&lt;/p&gt;

&lt;h2 id=&quot;the-problem-with-releases&quot;&gt;The problem with releases&lt;/h2&gt;

&lt;p&gt;To release a version of a software, usually there is a boring task of updating
specific files with the version to be released. For example, a team may want to update
the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file (version property) with the release they are tagging,
for documentation purpose. Then, before a release the developer in charge of the
release must remember to follow the rules of updating the file, and after that
generate a git tag.&lt;/p&gt;

&lt;p&gt;In the scenario described the major issue is to relay on the developer
to always remember to update the file, which is fine, but what if the release
requires to update two, or even three files? There is the human aspect of it
as well, we are humans and we are error prone, which we can sometimes,
forget to do things. In this case, the developer can also forget to update the
files before the release, and then if it happens, the developer should
follow a specific flow to change the file (or files) and release again.&lt;/p&gt;

&lt;h2 id=&quot;gitbot-concept&quot;&gt;Gitbot concept&lt;/h2&gt;

&lt;p&gt;The gitbot project is based in two major conventions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Conventional commits &lt;a class=&quot;citation&quot; href=&quot;#convetional_commits&quot;&gt;[1]&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Semantic version &lt;a class=&quot;citation&quot; href=&quot;#semantic_version&quot;&gt;[2]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In practice gitbot integrates with a git repository and watches through webhook for pushes into
a specific branch (or branches) which can be configured through the web interface.
Once a push is made gitbot receives the commit (or commits) content, and then
analyze the commit title for one specific match:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chore: tagged version x.x.x
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As a first approach the version pattern is constrained to use numeric versions,
only, (this is a limitation added just for speed up the prof of concept),
for example, the following version is valid:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chore: tagged version 10.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Therefore, the following version is not:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;chore: tagged version 10.2.0-rc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once Gitbot detects the match, it will automatically push the changes to the
files with the specific version. The following flow chart describes the flow that is executed starting from the git repository (Gitlab).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2020-07-19-git-release-bot-part-1/flowchart.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2020-07-19-git-release-bot-part-1/flowchart.png&quot; alt=&quot;Git bot flow chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Currently Gitbot implementation
&lt;a class=&quot;citation&quot; href=&quot;#gitbot_github&quot;&gt;[3]&lt;/a&gt;
supports Gitlab only, but it’s core was designed to support other git providers,
such as github or bitbucket.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;convetional_commits&quot;&gt;[1]C. commits, “Conventional Commits - A specification for adding human and machine readable meaning to commit messages,” 2020 [Online]. Available at: &lt;a href=&quot;https://www.conventionalcommits.org/en/v1.0.0&quot; target=&quot;_blank&quot;&gt;https://www.conventionalcommits.org/en/v1.0.0&lt;/a&gt;. [Accessed: 17-Aug-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;semantic_version&quot;&gt;[2]T. Preston-Werner, “Semantic Versioning 2.0.0,” 2020 [Online]. Available at: &lt;a href=&quot;https://semver.org&quot; target=&quot;_blank&quot;&gt;https://semver.org&lt;/a&gt;. [Accessed: 17-Aug-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;gitbot_github&quot;&gt;[3]M. Marabesi, “Git bot release,” 2020 [Online]. Available at: &lt;a href=&quot;https://github.com/marabesi/git-bot-release&quot; target=&quot;_blank&quot;&gt;https://github.com/marabesi/git-bot-release&lt;/a&gt;. [Accessed: 17-Aug-2020]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Sun, 19 Jul 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/devops/2020/07/19/git-release-bot-part-1.html</link>
        <guid isPermaLink="true">https://marabesi.com/devops/2020/07/19/git-release-bot-part-1.html</guid>
        
        <category>version,</category>
        
        <category>file,</category>
        
        <category>gitbot,</category>
        
        <category>release,</category>
        
        <category>git,</category>
        
        <category>commit,</category>
        
        <category>update,</category>
        
        <category>developer</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>Lambda (AWS) - first impressions</title>
        <description>&lt;p&gt;Lambda has been a hot topic for a while, the proposal is hold in three main
subjects (but not limited to): pay for what you execute only, scalability and composition
(compose with different services such as, AWS s3, Kinesis, IoT etc).
Lambda has changed how users think about cloud computing, giving the end user
the power to chose and to pay for what is indeed executed.&lt;/p&gt;

&lt;p&gt;Out of the box, AWS supports different programming languages such as: nodejs,
python, java, ruby, c#, go and powershell &lt;a class=&quot;citation&quot; href=&quot;#lambda_supported_programming_languages&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Unfortunately PHP is not supported as a default language, but, bref is a open source project
that gives PHP projects the layers needed to run on lambda.&lt;/p&gt;

&lt;p&gt;Even though lambda is the trend, usually the question that comes to mind is what are
the use cases for lambda, the next section tries to throw some light on this topic
based on my experience and also on the references throughout this post.&lt;/p&gt;

&lt;h2 id=&quot;use-case-for-export-data&quot;&gt;Use case, for export data&lt;/h2&gt;

&lt;p&gt;Usually the standard setup to export a data from a given database is to build an application
(it can be an API or a monolith) that receives the request from the user. The
request contains the metadata needed for exporting the data, for example, the
time range wanted, which data, and probably more meta information.&lt;/p&gt;

&lt;p&gt;The request is made, once the application receives the request, it dispatches an
asynchronous job in the backend to process the data. The async task is important
for two reasons:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The data can take time to load/export, which in turn would make the user waiting for a long period of time.&lt;/li&gt;
  &lt;li&gt;Usually requests for servers have built-in timeout to avoid time consuming requests.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So far we have been discussing the challenges to implement a simple export data feature.
Which can be accomplished by any modern language. Let’s give a concrete tech stack for our problem, we
are going to export data using PHP, MySQL and rabbitMq.&lt;/p&gt;

&lt;p&gt;For this scenario, the overall architecture looks like the following:&lt;/p&gt;

&lt;!-- place image here, first arquicture overview --&gt;

&lt;p&gt;For this given scenario, the feature would work, therefore, we can name a few scalability issues.
For each user a job is dispatched into the queue, and for each message, the worker picks up one
process it and then once it is done, the worker picks the next in the queue. Which for an application,
the has more than once user would have a negative impact. The following image depicts the described
scenario.&lt;/p&gt;

&lt;!-- place the image that illustrates the issue --&gt;

&lt;p&gt;The only way to scale the service up and remove this limitation is to spawn more workers, which would require
extra work from the operations.&lt;/p&gt;

&lt;p&gt;Lambda comes in, to remove this burden of scalability issue, lambda makes it automatically, the followings
image depicts the new architecture using lambda.&lt;/p&gt;

&lt;!-- describe here when it can help with lambda --&gt;

&lt;h2 id=&quot;cons&quot;&gt;Cons&lt;/h2&gt;

&lt;p&gt;Even though lambda is a solution that helps teams to delivery scalable software the down side is that
the technology is highly coupled to a specific vendor, for example, AWS has lambda, Azure has azure functions
and those are not interchangeable, for each once of them there are specific implementations.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;lambda_supported_programming_languages&quot;&gt;[1]AWS, “AWS Lambda FAQs, What languages does AWS Lambda support?,” 2020 [Online]. Available at: &lt;a href=&quot;https://aws.amazon.com/lambda/faqs&quot; target=&quot;_blank&quot;&gt;https://aws.amazon.com/lambda/faqs&lt;/a&gt;. [Accessed: 23-Sep-2020]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Tue, 07 Jul 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/web/2020/07/07/lambda-first-impressions.html</link>
        <guid isPermaLink="true">https://marabesi.com/web/2020/07/07/lambda-first-impressions.html</guid>
        
        <category>lambda,</category>
        
        <category>Lambda,</category>
        
        <category>data,</category>
        
        <category>aws,</category>
        
        <category>AWS,</category>
        
        <category>user,</category>
        
        <category>export,</category>
        
        <category>request,</category>
        
        <category>time,</category>
        
        <category>scalability,</category>
        
        <category>web,</category>
        
        <category>application,</category>
        
        <category>PHP</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>ReactJs patterns - A study based on google search</title>
        <description>&lt;p&gt;ReactJS is among one of the most used javascript library according to GitHub it is
one of the mos popular started repository. Given its popularity it is expected
that the community around it will start to develop techniques, guides and tutorials
around patterns.&lt;/p&gt;

&lt;p&gt;Inspired by the software systematic review literature paper
&lt;a class=&quot;citation&quot; href=&quot;#tamburri2020success&quot;&gt;[1]&lt;/a&gt;, that collects a broader
overview of the software engineering success and failure factors, this post has
the goal to answer the following questions:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Q1.&lt;/strong&gt; What is the most popular ReactJS pattern?&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Q2.&lt;/strong&gt; What are the themes that appears related to the patterns?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Opposed to the scientific method presented by the authors (the research was
conducted mining scientific bases, named: IEEE explorer, ACM digital library,
science direct, springer link, scopus and engineering village), this post is
a collection based on google search.&lt;/p&gt;

&lt;p&gt;Besides the questions to be answered in this post, the aim is also to be a source
to access when in doubt of which reactjs pattern to learn first and also a guide
to help beginners to have a picture of the patterns that developers most talk
about.&lt;/p&gt;

&lt;h2 id=&quot;table-of-contents&quot;&gt;Table of contents&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#finding-reactjs-patterns-articles&quot;&gt;Finding reactjs patterns articles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mining-results&quot;&gt;Mining results&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#analyzing-the-results&quot;&gt;Analyzing the results&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#discussion&quot;&gt;Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#related-work&quot;&gt;Related work&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#conclusion&quot;&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot;&gt;Appendix&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;finding-reactjs-patterns-articles&quot;&gt;Finding reactjs patterns articles&lt;/h2&gt;

&lt;p&gt;Google blocks the crawling on search, in this case the approach taken was
the google custom search (https://stackoverflow.com/a/30041104/2258921). The custom
search (https://developers.google.com/custom-search/v1/using_rest) API allow
developers to use google search programatically, and works as google search,
the difference is that this integration allow calls programmatically.&lt;/p&gt;

&lt;p&gt;The first interaction with the API showed a particular behavior that this service
has, as pointed by &lt;a class=&quot;citation&quot; href=&quot;#google_employee_search_results&quot;&gt;[2]&lt;/a&gt;,
the total number in the result is not the real number, it is an approximation.&lt;/p&gt;

&lt;p&gt;The search string used for explore the first researching question, was “reactjs patterns”.
Searching for this string in google.com, in the first page is shown 904 results.
Executing the same query through the programmable search gives 161 results,
and mining the results through the API, gives 96 results. This behavior
is expected as pointed by &lt;a class=&quot;citation&quot; href=&quot;#google_employee_search_results&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To mine the results a javascript file was developed, the script executes recursively
based on the number of pages that google returns till the last page of results
for a given search string. In total 96 links were found and saved to a XLS file &lt;a class=&quot;citation&quot; href=&quot;#google_search_results&quot;&gt;[3]&lt;/a&gt;
for further analysis described in the next section.&lt;/p&gt;

&lt;h2 id=&quot;mining-results&quot;&gt;Mining results&lt;/h2&gt;

&lt;p&gt;A manual analysis of the results was made in the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Removed results that does not have reactjs patterns discussions, such as explaining a
pattern or listing a pattern.&lt;/li&gt;
  &lt;li&gt;Classify each search result into a category.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For 1, a manual approach was taken to go through each item in the search result
to apply the exclusion criteria. As result 14 items were removed &lt;a class=&quot;citation&quot; href=&quot;#google_search_results&quot;&gt;[3]&lt;/a&gt; (the removed
content can be found in the tab “mined”).&lt;/p&gt;

&lt;p&gt;For 2, the following categories were created to group the search results: book,
course, meetup, post, question, slides, video. The categories were generated
based on a manual review of each item.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Total&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;post&lt;/td&gt;
      &lt;td&gt;66&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;course&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;book&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;question&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;video&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;meetup&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;slides&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The category &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;post&lt;/code&gt; is the most popular, followed by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;course&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;book&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;question&lt;/code&gt; and
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;video&lt;/code&gt; have the same number of items (2) and in the last two spots are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;meetup&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slides&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;analyzing-the-results&quot;&gt;Analyzing the results&lt;/h2&gt;

&lt;p&gt;This section dives into the results found, presents a brief explanation of each
item in the list. Therefore, this section does not cover the categories &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;question&lt;/code&gt;,
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;meetup&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;video&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;slides&lt;/code&gt; as they present less than three items.&lt;/p&gt;

&lt;h3 id=&quot;posts&quot;&gt;Posts&lt;/h3&gt;

&lt;p&gt;The post category is the most popular with 66, as a first exploration the posts
were read, and for each of them a pattern name was manually assigned, based on the content
of the post. Most of them have more the one pattern associated with it, for
example, the first post, in the list covered 22 patterns.&lt;/p&gt;

&lt;p&gt;This process was repeated for each post in the list. Once the classification was done,
the word cloud &lt;a class=&quot;citation&quot; href=&quot;#word_cloud&quot;&gt;[4]&lt;/a&gt;
visualization was generated (the process is described in the next sentence).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/artifacts/posts/2020-06-22-reactjs-patterns-a-study-based-on-google-search/word-cloud&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2020-06-22-reactjs-patterns-a-study-based-on-google-search/word_cloud.png&quot; alt=&quot;Word cloud generated based on the classification&quot; title=&quot;Word cloud generated based on the classification, click to see the visualization&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The raw classification was processed using the following steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Similar words were normalized, the word “component” and “components” were normalized
to the word without s (singular form), resulting in “component”&lt;/li&gt;
  &lt;li&gt;Words with capital letter were normalized to use the lower case.&lt;/li&gt;
  &lt;li&gt;Different words used with common mean were normalized, for example, the higher order component
is commonly used as HoC, the shorter version was used.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The word cloud depicts the translation between the most cited patterns used in
the dataset. The most cited pattern is Component, followed by props taking into
consideration just a single word.&lt;/p&gt;

&lt;h2 id=&quot;discussion&quot;&gt;Discussion&lt;/h2&gt;

&lt;p&gt;This section dive deeper in the results depicted in the previous section, the
first sub section focus on &lt;strong&gt;Q1&lt;/strong&gt; and the second section focuses on &lt;strong&gt;Q2&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&quot;q1&quot;&gt;Q1&lt;/h3&gt;

&lt;p&gt;For &lt;strong&gt;Q1&lt;/strong&gt;, based on the pure pattern classification the results point to the most popular pattern being the “component”,
followed by “props” which are the foundation of ReactJs, as everything is a component, and communication happens via props. A first hypothesis into this result is the repetition of those two patterns to explain more complex ones, for developers that are starting into the reactjs, components and props are the first principles to understand.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/artifacts/posts/2020-06-22-reactjs-patterns-a-study-based-on-google-search/lollipop&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2020-06-22-reactjs-patterns-a-study-based-on-google-search/lollipop.png&quot; alt=&quot;lollipop graph&quot; title=&quot;lollipop graph, top 10, click to see the visualization&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;In addition to that complex patterns such as hooks and higher order components appear surrounding the component and prop pattern. Those are the patterns which requires from the developer a previous understanding of props and components as they are more complex, which in turn, can lead to less content related to those patterns.&lt;/p&gt;

&lt;h3 id=&quot;q2&quot;&gt;Q2&lt;/h3&gt;

&lt;p&gt;For &lt;strong&gt;Q2&lt;/strong&gt; the surrounding elements are the focus, so for example, terms like
best practices and design were found and are related to reactjs patterns.&lt;/p&gt;

&lt;!-- Code reuse, separate of concerns, readability, easy to maintain,--&gt;
&lt;p&gt;As such, &lt;a class=&quot;citation&quot; href=&quot;#post_clean_code_dirty_code&quot;&gt;[5]&lt;/a&gt;,
entitled “Clean Code vs. Dirty Code: React Best Practices”, enumerates 14 sections
about best practices. Those sections are related to code standards, javascript
features, naming variables and also about industry standard to follow when coding
like DRY.&lt;/p&gt;

&lt;h2 id=&quot;related-work&quot;&gt;Related work&lt;/h2&gt;

&lt;p&gt;This section dives in the content of each post mined and group them in the
different patterns found. It is possible for the same post to appear in different
sections, as the content might explore more than one at time.&lt;/p&gt;

&lt;h3 id=&quot;container-component&quot;&gt;Container component&lt;/h3&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;
uses the Jason Bonta’s definition of the container component: the container component fetches data, and then
renders it’s corresponding sub component. That’s it. &lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt; and &lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_design_patterns_container_view&quot;&gt;[8]&lt;/a&gt; agrees on
the same definition as &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;
and adds that, the container component is the place to connect to redux.&lt;/p&gt;

&lt;p&gt;The following code (adapted from &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;) depicts
the container component using class component. &lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_patterns&quot;&gt;[9]&lt;/a&gt;
also offers a code example.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CommentList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;-&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CommentListContainer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setComments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]])&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/my-comments.json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setComments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[])&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CommentList&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_implementing_the_container_pattern_using_react_hooks&quot;&gt;[10]&lt;/a&gt;
elaborates on the container component with hooks along side with a to-do list app that implements the pattern. Also the definition
followed was the same as &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;, it
seems that there is a consensus that Jason Bonta defined the container component pattern
and developers point to him. &lt;a class=&quot;citation&quot; href=&quot;#post_introduction_to_react_design_patterns&quot;&gt;[11]&lt;/a&gt;
rates the container component as a pattern that provides: separation of concerns, it
is reusable and it is testable.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_the_react_redux_container_pattern&quot;&gt;[12]&lt;/a&gt; expands on
the idea that container component is awere of redux, the same
argument made by &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;, but in
this case, the author gives “the internet” the credit to agree on that. &lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt; has somehow
a not so clean definition about container component, also the text mix HoC with
presentational components and other patterns.&lt;/p&gt;

&lt;h3 id=&quot;conditional-rendering&quot;&gt;Conditional rendering&lt;/h3&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt;
gives his opinions on the conditional rendering pattern and also states that
it is a natural step for developers to separate logic from the actual return code (the code
given as example is a ternary if). As an alternative to the conditional
rendering, the author suggests to use the JSX alternative with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;. &lt;a class=&quot;citation&quot; href=&quot;#post_react_conditional_rendering&quot;&gt;[15]&lt;/a&gt;
expands on the JSX alternatives for conditional rendering.&lt;/p&gt;

&lt;h3 id=&quot;compound-components&quot;&gt;Compound Components&lt;/h3&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; and
&lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt;
share the same definition, the compound components are components that are distinct, but does not work without
the other, they make sense together only. Furthermore, &lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; mentions the HTML
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;option&lt;/code&gt; as an example of compound components. &lt;a class=&quot;citation&quot; href=&quot;#post_seven_patterns_by_example&quot;&gt;[18]&lt;/a&gt; uses
the compount component pattern to build a radio group component, which the user can select only one option
between the available options.&lt;/p&gt;

&lt;h3 id=&quot;decorated-component&quot;&gt;Decorated component&lt;/h3&gt;

&lt;p&gt;The decorated component is a pattern that does not not appear often,
&lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_testable_react_components&quot;&gt;[19]&lt;/a&gt;
demonstrates the decorated component as a way to decouple components, or even
to enhance component features, Redux uses the decorated component pattern
to enhance the component props.&lt;/p&gt;

&lt;p&gt;Therefore, the decorated pattern can be used as a way to decouple the component
that fetch data with the one that actually uses the data. &lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt; states that
the decorated pattern is the same as HoC.&lt;/p&gt;

&lt;h3 id=&quot;higher-order-component&quot;&gt;Higher-Order-Component&lt;/h3&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt; and
&lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt;
agree on the definition that HoC, in a sense that HoC are decorators. &lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; though, has an
argument that the HoC name is misnormer, which is based on his own thoughts.&lt;/p&gt;

&lt;p&gt;A HoC takes a reactjs component enhances it and then returns the new enhanced
component to be used &lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_patterns&quot;&gt;[9]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_patterns_reactjs&quot;&gt;[20]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_reactjs_in_patterns&quot;&gt;[21]&lt;/a&gt; 
&lt;a class=&quot;citation&quot; href=&quot;#post_higher_order_components&quot;&gt;[22]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_react_component_types_a_complete_overview&quot;&gt;[23]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns_react_and_ramda&quot;&gt;[24]&lt;/a&gt; has a different
definition, which states that the HoC receives a component as an argument and returns
another component. This definition is weider than the previous one. Often the
HoC receives a component and enhance the same component functionality, and returns
the same camponent with added behavior, from &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns_react_and_ramda&quot;&gt;[24]&lt;/a&gt;
would be possible to receive A and then return B.&lt;/p&gt;

&lt;p&gt;Therefore, &lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_data_fetching_in_react&quot;&gt;[25]&lt;/a&gt;
states that HoC is responsible to fetch data and then propagate to child components. This definition is an addition
to the previous agreed definition, but does not restrict the pattern to be used as data fetch only. &lt;a class=&quot;citation&quot; href=&quot;#post_5_react_data_fetching&quot;&gt;[26]&lt;/a&gt; adds that
the HoC is used to fetch data and also split data fetching from data presentation.
For the first time, the HoC is compared as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;container pattern&lt;/code&gt; and not the 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decorated component pattern&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_how_advanced_react_patterns_changed_with_hooks&quot;&gt;[27]&lt;/a&gt;
explores the HoC in the new era of react hooks. &lt;a class=&quot;citation&quot; href=&quot;#post_patterns_style_composition&quot;&gt;[28]&lt;/a&gt; has no definition statement, though the content is followed with HoC
code examples.&lt;/p&gt;

&lt;h3 id=&quot;render-props--render-callback&quot;&gt;Render Props / Render callback&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render props&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;render callback pattern&lt;/code&gt; is used to render a given component
based on a function callback &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_patterns_reactjs&quot;&gt;[20]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_introduction_to_react_design_patterns&quot;&gt;[11]&lt;/a&gt;, or
as &lt;a class=&quot;citation&quot; href=&quot;#post_how_to_master_advanced_react_design_patterns&quot;&gt;[29]&lt;/a&gt; states,
instead of rendering the children (which is as common technique in reactjs), this pattern
renders the prop. Even though &lt;a class=&quot;citation&quot; href=&quot;#post_how_to_master_advanced_react_design_patterns&quot;&gt;[29]&lt;/a&gt; states that the render prop renders the prop, instead of the children, &lt;a class=&quot;citation&quot; href=&quot;#post_how_advanced_react_patterns_changed_with_hooks&quot;&gt;[27]&lt;/a&gt;,&lt;a class=&quot;citation&quot; href=&quot;#post_5_react_data_fetching&quot;&gt;[26]&lt;/a&gt; and &lt;a class=&quot;citation&quot; href=&quot;#post_common_i18n_patterns_in_react&quot;&gt;[30]&lt;/a&gt; describes the render prop
using the children explicitly.&lt;/p&gt;

&lt;p&gt;Furthermore &lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt;
states that the pattern render props and HoC are interchangeable. The term render callback is clearer in the intention
of the pattern, but the term, render props got more adoption from the
community &lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns_render_callback&quot;&gt;[31]&lt;/a&gt;.
On the other hand &lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_patterns&quot;&gt;[9]&lt;/a&gt;,
states that there is discution between the effectiveness of the pattern.&lt;/p&gt;

&lt;!-- ### Prop Collections and Getters

&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; --&gt;

&lt;!-- ### State Initializers

&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; --&gt;

&lt;!-- ### State reducer

&lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt;

&lt;a class=&quot;citation&quot; href=&quot;#post_react_state_reducer_pattern&quot;&gt;[32]&lt;/a&gt; --&gt;

&lt;!-- ### Stateful

&lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt; --&gt;

&lt;!-- ### Stateless

&lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt;

&lt;a class=&quot;citation&quot; href=&quot;#post_patterns_style_composition&quot;&gt;[28]&lt;/a&gt; --&gt;

&lt;!-- ### Controlled Components

&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt;

&lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt; --&gt;

&lt;h3 id=&quot;provider--context&quot;&gt;Provider / Context&lt;/h3&gt;

&lt;p&gt;The provider pattern is used in libraries such as react-redux and react-router. The idea  behind the provider pattern is to avoid passing
props for each component in the three, instead, the pattern makes,
the prop available for all the tree that uses the provider regardless
of the tree depth &lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt;. The
provider pattern is an answer for the problem called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;props-drilling&lt;/code&gt; &lt;a class=&quot;citation&quot; href=&quot;#post_provider_pattern_in_react_using_react_context_api&quot;&gt;[33]&lt;/a&gt;
&lt;a class=&quot;citation&quot; href=&quot;#post_8_no_flux_strategies_for_react&quot;&gt;[34]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The provider pattern is often related to reactjs context &lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt; &lt;a class=&quot;citation&quot; href=&quot;#post_provider_pattern_in_react_using_react_context_api&quot;&gt;[33]&lt;/a&gt; as
this is the feature that comes out of the box with reactjs.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_four_patterns_for_global_state_with_react_hooks&quot;&gt;[35]&lt;/a&gt; says that
if the component needs to share more than two levels deep, the recommended approach is to use reactjs context. &lt;a class=&quot;citation&quot; href=&quot;#post_angularjs_patterns_in_react&quot;&gt;[36]&lt;/a&gt; uses
the provider/context pattern to implement a translation engine.&lt;/p&gt;

&lt;h3 id=&quot;hooks&quot;&gt;Hooks&lt;/h3&gt;

&lt;p&gt;Hooks are the highlight feature introduced in reactjs 16.8, mainly
focused in sharing logic between components and no class syntax, instead,
a functional approach is the preferred way&lt;a class=&quot;citation&quot; href=&quot;#reactjs_hooks_release&quot;&gt;[37]&lt;/a&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_hooks_design_patterns_creating_components_without_class&quot;&gt;[38]&lt;/a&gt;.
&lt;a class=&quot;citation&quot; href=&quot;#post_best_practices_with_react_hooks&quot;&gt;[39]&lt;/a&gt; gives a
introduction followed with reactjs hooks best practices, the material
is recommended to any level of developer that wants to understand hooks,
or for any developer that already knows hooks, it can be  a refresher. &lt;a class=&quot;citation&quot; href=&quot;#post_reusable_code_in_react&quot;&gt;[40]&lt;/a&gt; also states that hooks replace the mixins pattern for sharing code.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_how_advanced_react_patterns_changed_with_hooks&quot;&gt;[27]&lt;/a&gt; depicts
the difference between class components and functional components with
hooks and th benefits of using it. &lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_data_fetching_in_react&quot;&gt;[25]&lt;/a&gt; and &lt;a class=&quot;citation&quot; href=&quot;#post_5_react_data_fetching&quot;&gt;[26]&lt;/a&gt;
compares fetching data between the class approach and the functional approach with hooks, however
&lt;a class=&quot;citation&quot; href=&quot;#post_implementing_the_container_pattern_using_react_hooks&quot;&gt;[10]&lt;/a&gt; refactor
the container pattern using the class style with hooks.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_the_facade_pattern_and_applying_to_react_hooks&quot;&gt;[41]&lt;/a&gt; integrates
the facade design pattern into a javascript implementation, and then
combines the pattern with reactjs hooks. &lt;a class=&quot;citation&quot; href=&quot;#post_production_level_patterns_for_react_hooks&quot;&gt;[42]&lt;/a&gt; builds
a to-do app using hooks and uses a folder name called models to store
custom hooks, and tries to relate this structure with the MVC pattern.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_hooks_rebirth_of_state_management&quot;&gt;[43]&lt;/a&gt; and &lt;a class=&quot;citation&quot; href=&quot;#post_a_state_management_pattern_for_ionic_react&quot;&gt;[44]&lt;/a&gt;
focus on the state management. &lt;a class=&quot;citation&quot; href=&quot;#post_react_hooks_rebirth_of_state_management&quot;&gt;[43]&lt;/a&gt; dives
in mocking the redux implementation using hooks. The approach used
is interesting for learning purposes. Therefore, the implementation
for both authors are simplifications over a more complex implementation
of redux. The benefits of implementing those state managements by hand
comes with a drawback. Redux on the other hand is more complex, but
it is a standard for state management, having a wide community that
created different libraries to work with it (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;redux-offline&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Finally, &lt;a class=&quot;citation&quot; href=&quot;#post_bloc_pattern_with_react_hooks&quot;&gt;[45]&lt;/a&gt; converts
the BLoC pattern to be used with reactjs. The BLoC pattern was created
to share code between flutter and angular dart.&lt;/p&gt;

&lt;!-- &lt;a class=&quot;citation&quot; href=&quot;#post_discovering_patterns_with_react_hooks&quot;&gt;[46]&lt;/a&gt; down   --&gt;

&lt;!-- &lt;a class=&quot;citation&quot; href=&quot;#post_friday_frontend_new_react_pattern&quot;&gt;[47]&lt;/a&gt; --&gt;

&lt;!-- ### Controller view

&lt;a class=&quot;citation&quot; href=&quot;#post_the_reactjs_controller_view_pattern&quot;&gt;[48]&lt;/a&gt; --&gt;

&lt;!-- ### Adapter

&lt;a class=&quot;citation&quot; href=&quot;#post_using_the_adapter_design_pattern_with_react&quot;&gt;[49]&lt;/a&gt; --&gt;

&lt;!-- ### Dependency injection

&lt;a class=&quot;citation&quot; href=&quot;#post_dependency_injection&quot;&gt;[50]&lt;/a&gt; --&gt;

&lt;!-- ### Event listeners

&lt;a class=&quot;citation&quot; href=&quot;#post_global_listener_patterns_in_react&quot;&gt;[51]&lt;/a&gt; --&gt;

&lt;h3 id=&quot;redux&quot;&gt;Redux&lt;/h3&gt;

&lt;p&gt;The redux pattern is an implementation of FLUX, the state management
pattern created by Facebook to handle global state &lt;a class=&quot;citation&quot; href=&quot;#flux_facebook_pattern&quot;&gt;[52]&lt;/a&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_getting_to_know_the_redux_pattern&quot;&gt;[53]&lt;/a&gt;.
&lt;a class=&quot;citation&quot; href=&quot;#post_redux_design_patterns_reduxsauce&quot;&gt;[54]&lt;/a&gt; provides
an introduction to redux and its main components, namely: Action, Reducer and Store.&lt;/p&gt;

&lt;!-- ### MVVM

&lt;a class=&quot;citation&quot; href=&quot;#post_level_up_react_architecture&quot;&gt;[55]&lt;/a&gt;  --&gt;

&lt;!-- ### BLoC

&lt;a class=&quot;citation&quot; href=&quot;#post_bloc_pattern_with_react_hooks&quot;&gt;[45]&lt;/a&gt;  --&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;ReactJs is among the most used UI libraries, as a result it has a lot of
content created by the community and by Facebook (which is the company behind
rectJS). The proposed study showed the most used reactjs patterns as well as
the themes that surround the patterns. As it tuns out, the most popular patterns
are components and props, which are the reactjs foundation and not advanced
patterns for experienced reactjs developers. On the other hand, patterns
like Higher order components, hooks and container component requires some previous
knowledge to be used effectively, but those patterns that require
more experience are the ones less popular as well.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;tamburri2020success&quot;&gt;[1]D. A. Tamburri &lt;i&gt;et al.&lt;/i&gt;, “Success and Failure in Software Engineering: a Followup Systematic Literature Review,” 2020. &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;google_employee_search_results&quot;&gt;[2]D. (G. Employee), “Нow can I get 2500 results in one request in Google Search API?,” 2020 [Online]. Available at: &lt;a href=&quot;https://support.google.com/programmable-search/thread/55399640?hl=en&quot; target=&quot;_blank&quot;&gt;https://support.google.com/programmable-search/thread/55399640?hl=en&lt;/a&gt;. [Accessed: 25-Jun-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;google_search_results&quot;&gt;[3]M. Marabesi, “ReactJs patterns - A study based on google search,” 2020 [Online]. Available at: &lt;a href=&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vQvRdZOhkjolPlZ2td_3ocWJJwNoqvqInC-pAuECNDNMAEyjYa2nPZ6LLSwkR-Vrw/pubhtml&quot; target=&quot;_blank&quot;&gt;https://docs.google.com/spreadsheets/d/e/2PACX-1vQvRdZOhkjolPlZ2td_3ocWJJwNoqvqInC-pAuECNDNMAEyjYa2nPZ6LLSwkR-Vrw/pubhtml&lt;/a&gt;. [Accessed: 05-Aug-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;word_cloud&quot;&gt;[4]A. Mueller, “word_cloud,” 2020 [Online]. Available at: &lt;a href=&quot;https://github.com/amueller/word_cloud&quot; target=&quot;_blank&quot;&gt;https://github.com/amueller/word_cloud&lt;/a&gt;. [Accessed: 05-Aug-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_clean_code_dirty_code&quot;&gt;[5]D. West, “Clean Code vs. Dirty Code: React Best Practices - American ...,” 2017 [Online]. Available at: https://americanexpress.io/clean-code-dirty-code. [Accessed: 16-Nov-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_patterns&quot;&gt;[6]M. Chan, “React Patterns on GitHub,” 2020 [Online]. Available at: &lt;a href=&quot;https://reactpatterns.com&quot; target=&quot;_blank&quot;&gt;https://reactpatterns.com&lt;/a&gt;. [Accessed: 11-Jul-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_component_patterns&quot;&gt;[7]G. Matheus, “React Component Patterns - Level Up Coding,” 2017 [Online]. Available at: &lt;a href=&quot;https://levelup.gitconnected.com/react-component-patterns-ab1f09be2c82&quot; target=&quot;_blank&quot;&gt;https://levelup.gitconnected.com/react-component-patterns-ab1f09be2c82&lt;/a&gt;. [Accessed: 26-Oct-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_simple_react_design_patterns_container_view&quot;&gt;[8]C. Yick, “Simple React Design Patterns: Container/View - serendipidata,” 2019 [Online]. Available at: &lt;a href=&quot;https://www.serendipidata.com/posts/react-design-patterns-container-view&quot; target=&quot;_blank&quot;&gt;https://www.serendipidata.com/posts/react-design-patterns-container-view&lt;/a&gt;. [Accessed: 15-Feb-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_simple_react_patterns&quot;&gt;[9]L. Reis, “Simple React Patterns,” 2017 [Online]. Available at: &lt;a href=&quot;https://lucasmreis.github.io/blog/simple-react-patterns&quot; target=&quot;_blank&quot;&gt;https://lucasmreis.github.io/blog/simple-react-patterns&lt;/a&gt;. [Accessed: 08-Oct-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_implementing_the_container_pattern_using_react_hooks&quot;&gt;[10]S. Recio, “Implementing the Container Pattern using React Hooks,” 2019 [Online]. Available at: &lt;a href=&quot;https://blog.bitsrc.io/implementing-the-container-pattern-using-react-hooks-f490a8492d05&quot; target=&quot;_blank&quot;&gt;https://blog.bitsrc.io/implementing-the-container-pattern-using-react-hooks-f490a8492d05&lt;/a&gt;. [Accessed: 31-Dec-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_introduction_to_react_design_patterns&quot;&gt;[11]B. Williams, “Introduction to React Design Patterns | DrupalCon,” 2018 [Online]. Available at: &lt;a href=&quot;https://events.drupal.org/nashville2018/sessions/intro-react-design-patterns&quot; target=&quot;_blank&quot;&gt;https://events.drupal.org/nashville2018/sessions/intro-react-design-patterns&lt;/a&gt;. [Accessed: 11-Apr-2018]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_the_react_redux_container_pattern&quot;&gt;[12]S. DeBenedetto, “The React + Redux Container Pattern,” 2016 [Online]. Available at: &lt;a href=&quot;https://www.thegreatcodeadventure.com/the-react-plus-redux-container-pattern/&quot; target=&quot;_blank&quot;&gt;https://www.thegreatcodeadventure.com/the-react-plus-redux-container-pattern/&lt;/a&gt;. [Accessed: 16-Nov-2016]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_2019_reactjs_best_practices&quot;&gt;[13]B. Kulbida, “2019 ReactJS Best Practices,” 2019 [Online]. Available at: &lt;a href=&quot;https://medium.com/@konstankino/2019-reactjs-best-practices-design-patterns-516e1c3ca06a&quot; target=&quot;_blank&quot;&gt;https://medium.com/@konstankino/2019-reactjs-best-practices-design-patterns-516e1c3ca06a&lt;/a&gt;. [Accessed: 09-Mar-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_evolving_patterns_in_react&quot;&gt;[14]A. Moldovan, “Evolving Patterns in React,” 2018 [Online]. Available at: &lt;a href=&quot;https://www.freecodecamp.org/news/evolving-patterns-in-react-116140e5fe8f&quot; target=&quot;_blank&quot;&gt;https://www.freecodecamp.org/news/evolving-patterns-in-react-116140e5fe8f&lt;/a&gt;. [Accessed: 04-Feb-2018]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_conditional_rendering&quot;&gt;[15]C. Rippon, “React Conditional Rendering Patterns | Building SPAs,” 2018 [Online]. Available at: &lt;a href=&quot;https://www.carlrippon.com/react-conditional-rendering-patterns&quot; target=&quot;_blank&quot;&gt;https://www.carlrippon.com/react-conditional-rendering-patterns&lt;/a&gt;. [Accessed: 17-Apr-2018]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_advanced_react_component_patterns&quot;&gt;[16]K. C. Dodds, “Advanced React Component Patterns,” 2017 [Online]. Available at: &lt;a href=&quot;https://kentcdodds.com/blog/advanced-react-component-patterns&quot; target=&quot;_blank&quot;&gt;https://kentcdodds.com/blog/advanced-react-component-patterns&lt;/a&gt;. [Accessed: 05-Dec-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_five_ways_to_advanced_react_patterns&quot;&gt;[17]Y. Aabed, “Five Ways to Advanced React Patterns - DEV,” 2019 [Online]. Available at: &lt;a href=&quot;https://dev.to/yazanaabed/five-ways-to-advanced-react-patterns-2bai&quot; target=&quot;_blank&quot;&gt;https://dev.to/yazanaabed/five-ways-to-advanced-react-patterns-2bai&lt;/a&gt;. [Accessed: 02-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_seven_patterns_by_example&quot;&gt;[18]T. Deekens, “Seven patterns by example: The many ways to type=’radio’ in React,” 2017 [Online]. Available at: &lt;a href=&quot;https://techblog.commercetools.com/seven-patterns-by-example-the-many-ways-to-type-radio-in-react-bfe14322bb6f&quot; target=&quot;_blank&quot;&gt;https://techblog.commercetools.com/seven-patterns-by-example-the-many-ways-to-type-radio-in-react-bfe14322bb6f&lt;/a&gt;. [Accessed: 20-Dec-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_patterns_for_testable_react_components&quot;&gt;[19]Zemuldo, “Zemuldo Blog - Patterns For Testable React Components,” 2019 [Online]. Available at: &lt;a href=&quot;https://zemuldo.com/blog/patterns-for-testable-react-components-5e0a5b01bb17500012abfe11&quot; target=&quot;_blank&quot;&gt;https://zemuldo.com/blog/patterns-for-testable-react-components-5e0a5b01bb17500012abfe11&lt;/a&gt;. [Accessed: 30-Dec-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_advanced_patterns_reactjs&quot;&gt;[20]L. Maldonado, “Advanced Patterns in React,” 2019 [Online]. Available at: &lt;a href=&quot;https://www.telerik.com/blogs/advanced-patterns-in-react&quot; target=&quot;_blank&quot;&gt;https://www.telerik.com/blogs/advanced-patterns-in-react&lt;/a&gt;. [Accessed: 09-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_reactjs_in_patterns&quot;&gt;[21]Krasimir, “React.js in patterns,” 2016 [Online]. Available at: &lt;a href=&quot;https://krasimirtsonev.com/blog/article/react-js-in-design-patterns&quot; target=&quot;_blank&quot;&gt;https://krasimirtsonev.com/blog/article/react-js-in-design-patterns&lt;/a&gt;. [Accessed: 20-Jul-2016]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_higher_order_components&quot;&gt;[22]J. Franklin, “Higher-order Components: A React Application Design Pattern ...,” 2017 [Online]. Available at: &lt;a href=&quot;https://www.sitepoint.com/react-higher-order-components&quot; target=&quot;_blank&quot;&gt;https://www.sitepoint.com/react-higher-order-components&lt;/a&gt;. [Accessed: 08-Sep-2017]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_component_types_a_complete_overview&quot;&gt;[23]R. O. B. I. N. WIERUCH, “React Component Types: A complete Overview - RWieruch,” 2019 [Online]. Available at: &lt;a href=&quot;https://www.robinwieruch.de/react-component-types&quot; target=&quot;_blank&quot;&gt;https://www.robinwieruch.de/react-component-types&lt;/a&gt;. [Accessed: 12-Mar-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_patterns_react_and_ramda&quot;&gt;[24]T. Konrády, “React patterns | React and Ramda patterns,” 2018 [Online]. Available at: &lt;a href=&quot;https://tommmyy.github.io/ramda-react-redux-patterns/pages/react-ramda.html&quot; target=&quot;_blank&quot;&gt;https://tommmyy.github.io/ramda-react-redux-patterns/pages/react-ramda.html&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_patterns_for_data_fetching_in_react&quot;&gt;[25]G. Sayfan, “Patterns for data fetching in React - LogRocket Blog,” 2019 [Online]. Available at: &lt;a href=&quot;https://blog.logrocket.com/patterns-for-data-fetching-in-react-981ced7e5c56&quot; target=&quot;_blank&quot;&gt;https://blog.logrocket.com/patterns-for-data-fetching-in-react-981ced7e5c56&lt;/a&gt;. [Accessed: 24-Mar-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_5_react_data_fetching&quot;&gt;[26]A. Mansour, “5 React Data-Fetching Patterns - Nordschool,” 2019 [Online]. Available at: &lt;a href=&quot;https://nordschool.com/react-data-fetching&quot; target=&quot;_blank&quot;&gt;https://nordschool.com/react-data-fetching&lt;/a&gt;. [Accessed: 23-Oct-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_how_advanced_react_patterns_changed_with_hooks&quot;&gt;[27]N. Kulas, “How advanced React patterns changed with hooks | Sunscrapers,” 2019 [Online]. Available at: &lt;a href=&quot;https://sunscrapers.com/blog/how-advanced-react-patterns-changed-with-hooks&quot; target=&quot;_blank&quot;&gt;https://sunscrapers.com/blog/how-advanced-react-patterns-changed-with-hooks&lt;/a&gt;. [Accessed: 01-Jul-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_patterns_style_composition&quot;&gt;[28]B. Jackson, “Patterns for Style Composition in React | Jxnblk,” 2016 [Online]. Available at: &lt;a href=&quot;https://jxnblk.com/blog/patterns-for-style-composition-in-react&quot; target=&quot;_blank&quot;&gt;https://jxnblk.com/blog/patterns-for-style-composition-in-react&lt;/a&gt;. [Accessed: 13-Aug-2016]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_how_to_master_advanced_react_design_patterns&quot;&gt;[29]S. D. Hutch, “How To Master Advanced React Design Patterns — Render Props,” 2018 [Online]. Available at: &lt;a href=&quot;https://itnext.io/using-advanced-design-patterns-to-create-flexible-and-reusable-react-components-part-3-render-d7517dfe72bc&quot; target=&quot;_blank&quot;&gt;https://itnext.io/using-advanced-design-patterns-to-create-flexible-and-reusable-react-components-part-3-render-d7517dfe72bc&lt;/a&gt;. [Accessed: 17-Apr-2018]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_common_i18n_patterns_in_react&quot;&gt;[30]T. Ehrlich, “Common i18n patterns in React — LinguiJS documentation,” 2018 [Online]. Available at: &lt;a href=&quot;https://lingui.js.org/tutorials/react-patterns.html&quot; target=&quot;_blank&quot;&gt;https://lingui.js.org/tutorials/react-patterns.html&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_patterns_render_callback&quot;&gt;[31]L. G. Crespo, “React Patterns - Render Callback | Lenny’s Blog,” 2020 [Online]. Available at: &lt;a href=&quot;https://leoasis.github.io/posts/2017/03/27/react-patterns-render-callback&quot; target=&quot;_blank&quot;&gt;https://leoasis.github.io/posts/2017/03/27/react-patterns-render-callback&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_state_reducer_pattern&quot;&gt;[32]Matt, “React’s State Reducer Pattern - DSC Engineering,” 2019 [Online]. Available at: &lt;a href=&quot;https://engineering.dollarshaveclub.com/reacts-state-reducer-pattern-f66e82a82697&quot; target=&quot;_blank&quot;&gt;https://engineering.dollarshaveclub.com/reacts-state-reducer-pattern-f66e82a82697&lt;/a&gt;. [Accessed: 19-Sep-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_provider_pattern_in_react_using_react_context_api&quot;&gt;[33]G. Thakur, “Provider Pattern in React using React Context API,” 2019 [Online]. Available at: &lt;a href=&quot;https://blog.flexiple.com/provider-pattern-with-react-context-api&quot; target=&quot;_blank&quot;&gt;https://blog.flexiple.com/provider-pattern-with-react-context-api&lt;/a&gt;. [Accessed: 02-Feb-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_8_no_flux_strategies_for_react&quot;&gt;[34]A. Farmer, “8 no-Flux strategies for React component communication,” 2020 [Online]. Available at: &lt;a href=&quot;https://www.javascriptstuff.com/component-communication/&quot; target=&quot;_blank&quot;&gt;https://www.javascriptstuff.com/component-communication/&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_four_patterns_for_global_state_with_react_hooks&quot;&gt;[35]D. A. I. S. H. I. KATO, “Four patterns for global state with React hooks: Context or Redux ...,” 2019 [Online]. Available at: &lt;a href=&quot;https://blog.axlight.com/posts/four-patterns-for-global-state-with-react-hooks-context-or-redux&quot; target=&quot;_blank&quot;&gt;https://blog.axlight.com/posts/four-patterns-for-global-state-with-react-hooks-context-or-redux&lt;/a&gt;. [Accessed: 27-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_angularjs_patterns_in_react&quot;&gt;[36]G. Babiars, “AngularJS Patterns in React | Greg Babiars’s Blog,” 2019 [Online]. Available at: &lt;a href=&quot;https://gregbabiars.com/angular-patterns-in-react/&quot; target=&quot;_blank&quot;&gt;https://gregbabiars.com/angular-patterns-in-react/&lt;/a&gt;. [Accessed: 29-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;reactjs_hooks_release&quot;&gt;[37]reactjs.org, “Introducing Hooks,” 2020 [Online]. Available at: &lt;a href=&quot;https://reactjs.org/docs/hooks-intro.html&quot; target=&quot;_blank&quot;&gt;https://reactjs.org/docs/hooks-intro.html&lt;/a&gt;. [Accessed: 26-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_hooks_design_patterns_creating_components_without_class&quot;&gt;[38]C. Wilson, “React hooks design patterns and creating components without class,” 2019 [Online]. Available at: &lt;a href=&quot;https://www.educative.io/blog/react-hooks-components-and-design-patterns&quot; target=&quot;_blank&quot;&gt;https://www.educative.io/blog/react-hooks-components-and-design-patterns&lt;/a&gt;. [Accessed: 18-Jul-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_best_practices_with_react_hooks&quot;&gt;[39]D. Adeneye, “Best Practices With React Hooks — Smashing Magazine,” 2020 [Online]. Available at: &lt;a href=&quot;https://www.smashingmagazine.com/2020/04/react-hooks-best-practices&quot; target=&quot;_blank&quot;&gt;https://www.smashingmagazine.com/2020/04/react-hooks-best-practices&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_reusable_code_in_react&quot;&gt;[40]B. McCormick, “Reusable Code In React: Inheritance, Composition, Decorators and ...,” 2020 [Online]. Available at: &lt;a href=&quot;https://benmccormick.org/2019/02/11/reusable-react&quot; target=&quot;_blank&quot;&gt;https://benmccormick.org/2019/02/11/reusable-react&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_the_facade_pattern_and_applying_to_react_hooks&quot;&gt;[41]M. Wanago, “The Facade pattern and applying it to React Hooks,” 2019 [Online]. Available at: &lt;a href=&quot;https://wanago.io/2019/12/09/javascript-design-patterns-facade-react-hooks&quot; target=&quot;_blank&quot;&gt;https://wanago.io/2019/12/09/javascript-design-patterns-facade-react-hooks&lt;/a&gt;. [Accessed: 09-Dec-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_production_level_patterns_for_react_hooks&quot;&gt;[42]A. Burdette, “Production-Level Patterns for React Hooks  | FullStack Labs” [Online]. Available at: &lt;a href=&quot;https://www.fullstacklabs.co/blog/production-level-patterns-for-react-hooks&quot; target=&quot;_blank&quot;&gt;https://www.fullstacklabs.co/blog/production-level-patterns-for-react-hooks&lt;/a&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_react_hooks_rebirth_of_state_management&quot;&gt;[43]T. Linsley, “React Hooks, the rebirth of State Management and beyond.,” 2020 [Online]. Available at: &lt;a href=&quot;https://blog.usejournal.com/react-hooks-the-rebirth-of-state-management-and-beyond-7d84f6026d87&quot; target=&quot;_blank&quot;&gt;https://blog.usejournal.com/react-hooks-the-rebirth-of-state-management-and-beyond-7d84f6026d87&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_a_state_management_pattern_for_ionic_react&quot;&gt;[44]M. Lynch, “A state management pattern for Ionic React with React Hooks | The ...,” 2020 [Online]. Available at: &lt;a href=&quot;https://ionicframework.com/blog/a-state-management-pattern-for-ionic-react-with-react-hooks&quot; target=&quot;_blank&quot;&gt;https://ionicframework.com/blog/a-state-management-pattern-for-ionic-react-with-react-hooks&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_bloc_pattern_with_react_hooks&quot;&gt;[45]Martin, “BLoC Pattern with React Hooks — magarcia,” 2020 [Online]. Available at: &lt;a href=&quot;https://magarcia.io/2019/02/18/bloc-pattern-with-react-hooks&quot; target=&quot;_blank&quot;&gt;https://magarcia.io/2019/02/18/bloc-pattern-with-react-hooks&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_discovering_patterns_with_react_hooks&quot;&gt;[46]M. Pekala, “Discovering patterns with React hooks,” 2019 [Online]. Available at: &lt;a href=&quot;https://ponyfoo.com/articles/discovering-patterns-with-react-hooks&quot; target=&quot;_blank&quot;&gt;https://ponyfoo.com/articles/discovering-patterns-with-react-hooks&lt;/a&gt;. [Accessed: 13-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_friday_frontend_new_react_pattern&quot;&gt;[47]K. Ball, “Friday Frontend: New React Patterns,” 2019 [Online]. Available at: &lt;a href=&quot;https://zendev.com/2019/05/17/new-react-patterns-edition.html&quot; target=&quot;_blank&quot;&gt;https://zendev.com/2019/05/17/new-react-patterns-edition.html&lt;/a&gt;. [Accessed: 17-Apr-2019]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_the_reactjs_controller_view_pattern&quot;&gt;[48]A. Ray, “The ReactJS Controller View Pattern,” 2015 [Online]. Available at: &lt;a href=&quot;http://blog.andrewray.me/the-reactjs-controller-view-pattern&quot; target=&quot;_blank&quot;&gt;http://blog.andrewray.me/the-reactjs-controller-view-pattern&lt;/a&gt;. [Accessed: 07-Jul-2015]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_using_the_adapter_design_pattern_with_react&quot;&gt;[49]S. G. Team, “Using the Adapter Design Pattern With React | SendGrid,” 2018 [Online]. Available at: &lt;a href=&quot;https://sendgrid.com/blog/using-the-adapter-design-pattern-with-react&quot; target=&quot;_blank&quot;&gt;https://sendgrid.com/blog/using-the-adapter-design-pattern-with-react&lt;/a&gt;. [Accessed: 26-Jun-2018]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_dependency_injection&quot;&gt;[50]K. Tsonev, “Dependency injection · React in patterns,” 2020 [Online]. Available at: &lt;a href=&quot;https://krasimir.gitbooks.io/react-in-patterns/chapter-10&quot; target=&quot;_blank&quot;&gt;https://krasimir.gitbooks.io/react-in-patterns/chapter-10&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_global_listener_patterns_in_react&quot;&gt;[51]T. Sallai, “Global listener patterns in React - Advanced Web Machinery,” 2016 [Online]. Available at: &lt;a href=&quot;https://advancedweb.hu/global-listener-patterns-in-react/&quot; target=&quot;_blank&quot;&gt;https://advancedweb.hu/global-listener-patterns-in-react/&lt;/a&gt;. [Accessed: 05-Jan-2016]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;flux_facebook_pattern&quot;&gt;[52]Facebook, “Flux - Application architecture for building user interfaces,” 2020 [Online]. Available at: &lt;a href=&quot;https://facebook.github.io/flux&quot; target=&quot;_blank&quot;&gt;https://facebook.github.io/flux&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_getting_to_know_the_redux_pattern&quot;&gt;[53]G. Fink, “Getting to Know the Redux Pattern | DotNetCurry,” 2020 [Online]. Available at: &lt;a href=&quot;https://www.dotnetcurry.com/reactjs/1356/redux-pattern-tutorial&quot; target=&quot;_blank&quot;&gt;https://www.dotnetcurry.com/reactjs/1356/redux-pattern-tutorial&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_redux_design_patterns_reduxsauce&quot;&gt;[54]P. J. Frias, “Redux design patterns &amp;amp; Reduxsauce,” 2020 [Online]. Available at: &lt;a href=&quot;https://blog.smartlogic.io/redux-design-patterns-reduxsauce&quot; target=&quot;_blank&quot;&gt;https://blog.smartlogic.io/redux-design-patterns-reduxsauce&lt;/a&gt;. [Accessed: 27-Sep-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;post_level_up_react_architecture&quot;&gt;[55]D. Vincijanovic, “Level up your React architecture with MVVM - COBE,” 2018 [Online]. Available at: &lt;a href=&quot;https://medium.cobeisfresh.com/level-up-your-react-architecture-with-mvvm-a471979e3f21&quot; target=&quot;_blank&quot;&gt;https://medium.cobeisfresh.com/level-up-your-react-architecture-with-mvvm-a471979e3f21&lt;/a&gt;. [Accessed: 30-Aug-2018]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;h2 id=&quot;appendix&quot;&gt;Appendix&lt;/h2&gt;

&lt;p&gt;This section presents extra resources created during the development of this
content.&lt;/p&gt;

&lt;h3 id=&quot;mined-content&quot;&gt;Mined content&lt;/h3&gt;

&lt;p&gt;On the Title column, the original title from the source was preserved and on the right a short abstract was provided to illustrate what the source content is about.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Title&lt;/th&gt;
      &lt;th&gt;Abstract&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;React Patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns&quot;&gt;[6]&lt;/a&gt; provides a list with patterns used in reactjs, the list has a title and a brief description as well as the code snippet that represents the described pattern. The list works as a friendly guide for developers that need a way to quickly check how to compose a specific pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Design Principles – React&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_design_principles_react&quot;&gt;[56]&lt;/a&gt; is a collection of the ReactJs design principles that together composes the philosophy and key concepts implemented in ReactJs. Those are used as a guide fo ReactJs evolution and changes for the community around it.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2019 ReactJS Best Practices - Bogdan Kulbida - Medium&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt; presents a best practices guide related to component creation, named: stateful components, stateless components, Higher order components and container components. For each pattern listed, the author goes in details for each one of them. The communication pattern between react components is also cited (known as data/props down, actions/events up).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Advanced React Component Patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt; describes the patterns used in his course, named: compound components, Higher order components, render props, prop collection and getters, state initializers, controlled components an provider. The list just gives a brief description of what is covered in the course and not much detail is given, which might be difficult to understand without a proper context, the author also assumes that the reader already has previous knowledge in React (as the title says it is an advanced reactjs patterns).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Five Ways to Advanced React Patterns - DEV&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_five_ways_to_advanced_react_patterns&quot;&gt;[17]&lt;/a&gt; covers the same patterns as &lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_component_patterns&quot;&gt;[16]&lt;/a&gt;, not all of them though, and also adds the pattern state reducer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;How To Master Advanced React Design Patterns — Render Props&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_how_to_master_advanced_react_design_patterns&quot;&gt;[29]&lt;/a&gt; in covers exclusively the render props pattern, this post is part of a series of reactjs patterns that each post covers a single pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Simple React Patterns | Lucas Reis’ Blog&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_patterns&quot;&gt;[9]&lt;/a&gt; gives code snippets for different reactjs patterns, named as “everyday patterns”, such as: container or view pattern (not to be confused by compound pattern), higher order component , render props and the provider pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Advanced Patterns in React&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_patterns_reactjs&quot;&gt;[20]&lt;/a&gt; dedicates the post to two specific reactjs patterns: higher order components  and render props.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React.js in patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_reactjs_in_patterns&quot;&gt;[21]&lt;/a&gt; the author starts by the communication flow that reactjs uses as a foundation as well as the children props, basically setting up a common ground, then the pattern higher order component is introduced.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React Component Patterns - Level Up Coding&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt; mentions for the first time in this list stateless and stateful components shows up, those patterns are often used to separate concerns between components. Besides that, the container, higher order component, render callback are presented. The author focus was to summarize his experience about those patterns.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Evolving Patterns in React&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt; starts with patterns that are considered to be simple, such as conditional rendering, passing down props (&lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt; also mentions the passing props), in the follow up the author mentions the destructuring pattern, which is a javascript functionality and not a reactjs pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React Conditional Rendering Patterns | Building SPAs&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_conditional_rendering&quot;&gt;[15]&lt;/a&gt; focus on the rendering patterns used in reactjs. Those patterns are directly connected to JSX, as reactjs uses JSX to render the component.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Patterns for Style Composition in React | Jxnblk&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_patterns_style_composition&quot;&gt;[28]&lt;/a&gt; describes the patterns the he used to keep things organized, the goal as mentioned was to (but not limited to): create a well defined visual design, increase maintainability of visual styles and create reusable components. For that, the author used: stateless components (which is also discussed by &lt;a class=&quot;citation&quot; href=&quot;#post_react_component_patterns&quot;&gt;[7]&lt;/a&gt;), styles module, style functions, npm modules, base component and higher order components. Those patterns listed, were used focused on the visual part.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Simple React Design Patterns: Container/View - serendipidata&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_simple_react_design_patterns_container_view&quot;&gt;[8]&lt;/a&gt; expose his thoughts on the container/view pattern rather than explain how the pattern works. The author gives his opinions and use cases for the pattern, also the author assumes that the read has already some experience with reactjs and knows the vocabulary of the patterns, such as higher order components.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Higher-order Components: A React Application Design Pattern …&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_higher_order_components&quot;&gt;[22]&lt;/a&gt; focus on the higher order components pattern, the author starts with the basic idea of pure functions as a base for the reader to understand the pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Patterns for data fetching in React - LogRocket Blog&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_data_fetching_in_react&quot;&gt;[25]&lt;/a&gt;  explore the different patterns to use when fetching data from a server using reactjs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10 React mini-patterns | Hacker Noon&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_10_react_mini_patterns&quot;&gt;[57]&lt;/a&gt; explore different approaches and use cases for using react, the pattern passing props down (this same pattern was explored by &lt;a class=&quot;citation&quot; href=&quot;#post_2019_reactjs_best_practices&quot;&gt;[13]&lt;/a&gt;, &lt;a class=&quot;citation&quot; href=&quot;#post_evolving_patterns_in_react&quot;&gt;[14]&lt;/a&gt;) is the only reactjs pattern that is mentioned by the author.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5 React Data-Fetching Patterns - Nordschool&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_5_react_data_fetching&quot;&gt;[26]&lt;/a&gt; is a shorter version of &lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_data_fetching_in_react&quot;&gt;[25]&lt;/a&gt; and a more detailed one taking care of diving the fetching patterns with a reactjs pattern.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Facade pattern and applying it to React Hooks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_the_facade_pattern_and_applying_to_react_hooks&quot;&gt;[41]&lt;/a&gt;  explores the idea of the facade pattern and the hooks pattern, mixing those together to abstract the third parties libraries to the application. The main idea of the author is to explore the facade with reactjs hooks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React hooks design patterns and creating components without class&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_hooks_design_patterns_creating_components_without_class&quot;&gt;[38]&lt;/a&gt; gives a brief explanation about the hooks, its functional approach and a comparison between class components and functional components.  The author states that the reactjs patterns known by the class standard are shifting to hooks in a functional approach, and reactjs hooks is the future of react.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Common i18n patterns in React — LinguiJS documentation&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_common_i18n_patterns_in_react&quot;&gt;[30]&lt;/a&gt; is all about i18n in reactjs. Due the different ways to render a translation string, the examples given uses the component approach and the render prop.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Implementing the Container Pattern using React Hooks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_implementing_the_container_pattern_using_react_hooks&quot;&gt;[10]&lt;/a&gt; implements the container pattern using hooks, a to-do app like is used as an example for the usage of the container pattern. Besides that, the interesting part is that the author uses class components and functional components in the code examples.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Introduction to React Design Patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_introduction_to_react_design_patterns&quot;&gt;[11]&lt;/a&gt; explores the container pattern and render props, also the flux pattern is introduced in the talk.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;How advanced React patterns changed with hooks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_how_advanced_react_patterns_changed_with_hooks&quot;&gt;[27]&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Four patterns for global state with React hooks: Context or Redux&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_four_patterns_for_global_state_with_react_hooks&quot;&gt;[35]&lt;/a&gt; shares his thoughts on global states in reactjs components, in the following order: prop passing, context and redux. Which for global state context and redux are popular solutions, therefore, passing props is a local state and not a global solution for that.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Zemuldo Blog - Patterns For Testable React Components&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_patterns_for_testable_react_components&quot;&gt;[19]&lt;/a&gt; introduces a pattern named decorated components to make testing easier in react components. In fact, this is the first pattern mentioned with testing.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Discovering patterns with React hooks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_discovering_patterns_with_react_hooks&quot;&gt;[46]&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The ReactJS Controller View Pattern&lt;/td&gt;
      &lt;td&gt;The controller view pattern introduced by &lt;a class=&quot;citation&quot; href=&quot;#post_the_reactjs_controller_view_pattern&quot;&gt;[48]&lt;/a&gt; is used to delegates the responsibility of handling the state change to a single component.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Seven patterns by example: The many ways to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;type=&quot;radio&quot;&lt;/code&gt; in React&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_seven_patterns_by_example&quot;&gt;[18]&lt;/a&gt; focuses on the radios input type and based on the HTML input, the author starts to compose the reactjs patterns around it.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The React + Redux Container Pattern&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_the_react_redux_container_pattern&quot;&gt;[12]&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React Component Types: A complete Overview - RWieruch&lt;/td&gt;
      &lt;td&gt;The complete guide of a reactjs component by &lt;a class=&quot;citation&quot; href=&quot;#post_react_component_types_a_complete_overview&quot;&gt;[23]&lt;/a&gt; goes from the create react class style (the first approach of the library), using mixins as a way to share code between components, ES6 classes and higher order components. In the second part the functional approach is introduced (as this is the latest and recommended way to write reactjs code). All in all, the complete guide shows the reactjs evolution through time and how new javascript features improved the library style of code and gave different approaches to solve common problems.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Production-Level Patterns for React Hooks | FullStack Labs&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_production_level_patterns_for_react_hooks&quot;&gt;[42]&lt;/a&gt; introduces the idea of effects instead of life cycle events (as reactjs used to be before hooks), in his approach the to-do app is used to re-factor the code from a class component to a functional component that uses hooks to share logic and separate concerns.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A Model View Controller Pattern for React - Test Double | Our Blog&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_a_model_view_controller_pattern&quot;&gt;[58]&lt;/a&gt; uses the same idea as &lt;a class=&quot;citation&quot; href=&quot;#post_production_level_patterns_for_react_hooks&quot;&gt;[42]&lt;/a&gt; to use MVC in reactjs. The difference here is that &lt;a class=&quot;citation&quot; href=&quot;#post_a_model_view_controller_pattern&quot;&gt;[58]&lt;/a&gt; goes in detail about why MVC.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Provider Pattern in React using React Context API&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_provider_pattern_in_react_using_react_context_api&quot;&gt;[33]&lt;/a&gt; gives an introduction to the provider pattern. The author explains the concept of the provider pattern and why it exists (prop-drilling).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Using the Adapter Design Pattern With React | SendGrid&lt;/td&gt;
      &lt;td&gt;The pattern adapter in reactjs presented by &lt;a class=&quot;citation&quot; href=&quot;#post_using_the_adapter_design_pattern_with_react&quot;&gt;[49]&lt;/a&gt; introduces a pattern that aims to decouple the source data from the presentational layer. As the author states “Eventually, I decided that having the view so tightly coupled to the API was a poor decision.”, therefore, using the adapter pattern, offers the following benefits: reduced coupling, easier maintenance, the view layer focused on only the presentational aspect, updates to changes in the API becomes easier as there will be only one place to change.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Dependency injection · React in patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_dependency_injection&quot;&gt;[50]&lt;/a&gt; uses the dependency injection term to describe how reactjs pass props between components, in this sense, the dependency in a component is what in injected by the consumer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AngularJS Patterns in React | Greg Babiars’s Blog&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_angularjs_patterns_in_react&quot;&gt;[36]&lt;/a&gt; translates angular features, such as filters, directives, themes and slots, to its corresponding code in reactjs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Global listener patterns in React - Advanced Web Machinery&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_global_listener_patterns_in_react&quot;&gt;[51]&lt;/a&gt; provides patterns used in react to listen and remove listeners to global events. The first example uses the state to keep track of the listeners and also to  remove them once the reacjs component has been unmounted, as pointed by the author, this approach requires three reactjs life cycle methods , otherwise it might produce undesirable behavior. An alternative to that is a simpler approach that relies on the window object to register and remove the listener.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Level up your React architecture with MVVM - COBE&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_level_up_react_architecture&quot;&gt;[55]&lt;/a&gt; introduces the MVVM pattern using reactjs, the pattern consists of separating the controller of updating the view with the responsible to control the update. This is the first time the MVVM appears in this list, which can open for further questions about the MVVM on reactjs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React patterns | React and Ramda patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns_react_and_ramda&quot;&gt;[24]&lt;/a&gt; expoes code snippets to bring the functional approach to reacjs, ramda is a javascrpt functional library. The reactjs is focusing on functional approaches as well (hooks for example), but the approach is different, given the fact that reacjs wasn’t created with functional from scratch.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Friday Frontend: New React Patterns&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_friday_frontend_new_react_pattern&quot;&gt;[47]&lt;/a&gt; is a collection shared by the author with different tips around the reactjs ecosystem, it doesn’t focus on any specific subject, but it refers links to patterns such as hooks and recursive reactjs components.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React’s State Reducer Pattern - DSC Engineering&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_state_reducer_pattern&quot;&gt;[32]&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;The Unstated React Service Pattern - HMH Engineering&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_the_unstated_react_service_patttern&quot;&gt;[59]&lt;/a&gt; describes the context pattern as an alternative to redux, mobx and apollo link state. The presented alternative is to use stated to manage the global state in reactjs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Best Practices With React Hooks — Smashing Magazine&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_best_practices_with_react_hooks&quot;&gt;[39]&lt;/a&gt; dives into the details of reactjs hooks,  for a beginner point of view and also for an intermediate developer that already knows hooks but wants to level up the understanding of the subject (section “hooks best practices”).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;15 React Best Practices You Need to Follow in 2020&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_15_react_best_practices_you_need_to_follow_in_2019&quot;&gt;[60]&lt;/a&gt; gathered 15 best practices that reactjs developers should follow, therefore, in those practices no specific pattern was mentioned.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React Patterns - Render Callback | Lenny’s Blog&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_patterns_render_callback&quot;&gt;[31]&lt;/a&gt; presents the callback render as an alternative to render props, which has the same intent, the difference relies in the callback itself. Whereas the render props renders a given prop, the callback renders a function that is invoked before rendering.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Redux design patterns &amp;amp; Redux sauce&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_redux_design_patterns_reduxsauce&quot;&gt;[54]&lt;/a&gt; is a source around the redux and redux sauce and how the author used the flux pattern implementation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;React Hooks, the rebirth of State Management and beyond.&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_react_hooks_rebirth_of_state_management&quot;&gt;[43]&lt;/a&gt; presents his experiments with reactjs hooks its usage with state management.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8 no-Flux strategies for React component communication&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_8_no_flux_strategies_for_react&quot;&gt;[34]&lt;/a&gt; shows 8 different strategies to communicate data between reactjs. Even though the alternative claims to be an alternative to flux (the implementation most known is redux). Those alternatives are: props, instance methods, callback functions, event bubbling, parent component, observer pattern, global variables and context.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;BLoC Pattern with React Hooks — magarcia&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_bloc_pattern_with_react_hooks&quot;&gt;[45]&lt;/a&gt; BLoC stands for Business Logic Component. The focus of BLoC is to remain environment and platform independent, use exclusively observables and also contains business logic. The pattern was created to support angular dart and flutter, but the author suggests that it can be applicable to reactjs as well.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Getting to Know the Redux Pattern | DotNetCurry&lt;/td&gt;
      &lt;td&gt;(missing reference)  offers an approach to the redux pattern introducing the flux (which is the pattern definition - one way data flow) and also exposes a few examples in how to use it as a pure library (no reactjs). The content presented is a base to developers that want to understand how redux works and where it come from.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Clean Code vs. Dirty Code: React Best Practices - American …&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_clean_code_dirty_code&quot;&gt;[5]&lt;/a&gt; introduces the idea behind clean code and also its counter parts “dirty code”. The content is a set of best practices guide instead of a clear pattern implementation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ReactJS - GeeksforGeeks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_geeks_for_geeks&quot;&gt;[61]&lt;/a&gt; is a material created for beginners, it gives the foundation of reactjs, how it works, what it is, the naming and conventions. The material is recommended as a first approach to the reactjs ecosystem.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Reusable Code In React: Inheritance, Composition, Decorators and …&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_reusable_code_in_react&quot;&gt;[40]&lt;/a&gt; goes around the oriented object programming style for sharing code, such as inheritance, composition and decorators. Besides that the mixins pattern is taken as a “deprecated” way for sharing code in favor of hooks.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Killing Switch Statements in React with the Strategy Pattern&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_killing_switch_statements&quot;&gt;[62]&lt;/a&gt; presents an alternative to switch statements, as mentioned by the author, the switch statement in this case was a smell and with maintainability  issues.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A state management pattern for Ionic React with React Hooks&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_a_state_management_pattern_for_ionic_react&quot;&gt;[44]&lt;/a&gt; uses reactjs hooks to replicate the redux library behavior.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Advanced React Concepts | React Resources&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_advanced_react_concepts&quot;&gt;[63]&lt;/a&gt; is a collection of reactjs resources about advanced usage of reactjs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Reactjs application development tips | Reactive&lt;/td&gt;
      &lt;td&gt;&lt;a class=&quot;citation&quot; href=&quot;#post_reactjs_application_development_tips&quot;&gt;[64]&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Mon, 22 Jun 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/web/2020/06/22/reactjs-patterns-a-study-based-on-google-search.html</link>
        <guid isPermaLink="true">https://marabesi.com/web/2020/06/22/reactjs-patterns-a-study-based-on-google-search.html</guid>
        
        <category>React,</category>
        
        <category>patterns,</category>
        
        <category>pattern,</category>
        
        <category>Pattern,</category>
        
        <category>https,</category>
        
        <category>reactjs,</category>
        
        <category>search,</category>
        
        <category>google,</category>
        
        <category>study,</category>
        
        <category>study based,</category>
        
        <category>react,</category>
        
        <category>results,</category>
        
        <category>web,</category>
        
        <category>reactjs patterns,</category>
        
        <category>component,</category>
        
        <category>components,</category>
        
        <category>Online,</category>
        
        <category>hooks,</category>
        
        <category>props,</category>
        
        <category>render</category>
        
        
        <category>web</category>
        
      </item>
    
      <item>
        <title>Getting started with testing (PHP and javascript) - PART 1</title>
        <description>&lt;p&gt;Testing has its place in the development phase, often related as unit
testing since the programmer write test cases for the smallest part of the
code, such as a method of a class or a function. Therefore, to reach a level
of confidence and write tests as a routine during the development cycle
is a challenge for many programmers.&lt;/p&gt;

&lt;p&gt;The aim here is to give a guide line to get started with unit testing, and
to reach a level of confidence to improve the development cycle, thus the
programmer productivity.&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;The first step to star get into the unit testing, is to chose a programming
language that you are comfortable with.&lt;/p&gt;

&lt;p&gt;The foundation is the same, as mentioned in the introduction, though, tools
for each programming language vary, meaning, each programming language
has its own tools and conventions to write unit tests (even tough the theory that
underlies it is the same).&lt;/p&gt;

&lt;p&gt;Make sure to have at least one year of experience in any programming language,
and at least developed an application of any kind. This may setup the
ground to ease the path of unit testing.&lt;/p&gt;

&lt;h3 id=&quot;programming-languages-tools-and-frameworks&quot;&gt;Programming languages, tools and frameworks&lt;/h3&gt;

&lt;p&gt;Tools for testing vary based on the programming language and on the framework
as well. For PHP for example, one of the most used libraries to write
unit tests is PHPUnit. For java is Junit and for javascript the libraries are
categorized in two: front end and backend.&lt;/p&gt;

&lt;p&gt;Javascript has more granularity compared to JUnit and PHPUnit, the ecosystem provides
libraries for assertion and libraries for running the tests, as opposed to PHPUnit
and JUnit that has this feature built-in. Though, it is possible to also find the same
behavior in the javascript ecosystem as well.&lt;/p&gt;

&lt;h2 id=&quot;foundation-on-testing&quot;&gt;Foundation on testing&lt;/h2&gt;

&lt;p&gt;As a beginner on the the testing subject, there are more questions than answers. Which is
fine and a good starting point. This section provides references for understanding the
foundation of testing, but not just the theory, the practice as well.&lt;/p&gt;

&lt;p&gt;The first recommended read of this section, if you are the developer that prefers to see the code
before reading the theory is: TDD by example &lt;a class=&quot;citation&quot; href=&quot;#tdd_by_example_kent_beck&quot;&gt;[1]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On the other hand if you prefer to digest more theory and then later on go deeper
into the practical aspect of it, then the suggested reading is:
Software Engineering Tenth edition by Ian Sommerville &lt;a class=&quot;citation&quot; href=&quot;#software_engineering_tenth_edition_ian_sommerville&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Whichever you picked first, once it is done, go to the next one before proceeding
to the next set of references.&lt;/p&gt;

&lt;p&gt;For a deep dive into the software testing, the recommended reading is
The Art of Software Testing &lt;a class=&quot;citation&quot; href=&quot;#the_art_of_software_testing&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;tdd_by_example_kent_beck&quot;&gt;[1]K. Beck, &lt;i&gt;TDD by example&lt;/i&gt;. Addison-Wesley Professional, 2000. &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;software_engineering_tenth_edition_ian_sommerville&quot;&gt;[2]I. Sommerville, &lt;i&gt;Software Engineering Tenth edition&lt;/i&gt;. Pearson Education Limited, 2015 [Online]. Available at: &lt;a href=&quot;https://www.amazon.es/Software-Engineering-Global-Ian-Sommerville/dp/1292096136&quot; target=&quot;_blank&quot;&gt;https://www.amazon.es/Software-Engineering-Global-Ian-Sommerville/dp/1292096136&lt;/a&gt;. [Accessed: 15-Jul-2015]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;the_art_of_software_testing&quot;&gt;[3]G. Myers, &lt;i&gt;The Art of Software Testing&lt;/i&gt;. Wiley, 1979. &lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Sat, 23 May 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/testing/2020/05/23/getting-started-with-testing-guide.html</link>
        <guid isPermaLink="true">https://marabesi.com/testing/2020/05/23/getting-started-with-testing-guide.html</guid>
        
        <category>testing,</category>
        
        <category>unit,</category>
        
        <category>programming,</category>
        
        <category>tests,</category>
        
        <category>tools,</category>
        
        <category>libraries,</category>
        
        <category>development,</category>
        
        <category>software,</category>
        
        <category>tools,</category>
        
        <category>theory</category>
        
        
        <category>testing</category>
        
      </item>
    
      <item>
        <title>Clean architecture</title>
        <description>&lt;p&gt;Separation of consern, isolating pieces of code that repeats and decoupling
responsabilities from differents parts of the code base seems to be a
common approach among experienced developers. Therefore, through the experience
comes the opinionated approach, some developers might decide to create
specific directories or others might use longer file names to express intent.&lt;/p&gt;

&lt;p&gt;I have published my own thoughts on that matter as well, and then I discovered
the clean architecture book &lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_book&quot;&gt;[1]&lt;/a&gt;,
which dives much deeper on that subject and also explores the pros of
having a architecture in place.&lt;/p&gt;

&lt;h2 id=&quot;architectural-styles-compared-to-the-clean-architecture&quot;&gt;Architectural styles compared to the clean architecture&lt;/h2&gt;

&lt;p&gt;As I first started my path through the clean architecture I often found asking myself: is
hexagonal architecture &lt;a class=&quot;citation&quot; href=&quot;#hexagonal_architecutre&quot;&gt;[2]&lt;/a&gt;
the same as clean architecutre?&lt;/p&gt;

&lt;p&gt;The clean architecture, shares decisions compared with the hexagonal architecture,
as &lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_article&quot;&gt;[3]&lt;/a&gt;
states that the clean architecture is an attempt to integrate the hexagonal
architecture and other as well, named:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Hexagonal architecture / Onion architecutre&lt;/li&gt;
  &lt;li&gt;Screaming architecture&lt;/li&gt;
  &lt;li&gt;DCI&lt;/li&gt;
  &lt;li&gt;BCE&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The clean architecture is an attempt to combine those styles together to produce
an output.&lt;/p&gt;

&lt;h2 id=&quot;clean-architecture-in-a-glance&quot;&gt;Clean architecture in a glance&lt;/h2&gt;

&lt;p&gt;Clean architecture focuses on the separation of concerns and also it takes
care of the evolution of the code, the evolution is one of key aspects of the
clean architecture as it has a dedicated section in the first chapter, “The Total Cost of Owning a Mess”,
&lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_book&quot;&gt;[1]&lt;/a&gt;
that depicts the fact that the productivity degrades as the time goes. Which
is caused by the lack of care with code and also the software maintainability.&lt;/p&gt;

&lt;p&gt;The following diagram taken from &lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_article&quot;&gt;[3]&lt;/a&gt;
depicts the clean architecture overview.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2020-05-22-clean-architecture/CleanArchitecture.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2020-05-22-clean-architecture/CleanArchitecture.jpg&quot; alt=&quot;Clean architecture diagram&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The structure I am following next is the same presented by &lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_article&quot;&gt;[3]&lt;/a&gt;,
so then I can follow some line of thought, besides that I also give my contribution
to each section.&lt;/p&gt;

&lt;h3 id=&quot;the-dependency-rule&quot;&gt;The dependency rule&lt;/h3&gt;

&lt;p&gt;The depdency rule follows basicaly the same principle as the layered architecture.
&lt;a class=&quot;citation&quot; href=&quot;#software_architectural_patterns&quot;&gt;[4]&lt;/a&gt;. Anything
in the inner circle should not know anything about the outer circle, the same principle
in the layered architecture, to keep layers following a same direction.&lt;/p&gt;

&lt;h3 id=&quot;entities&quot;&gt;Entities&lt;/h3&gt;

&lt;p&gt;Entities are the objects that represents the business.&lt;/p&gt;

&lt;h3 id=&quot;use-cases&quot;&gt;Use cases&lt;/h3&gt;

&lt;p&gt;Use cases are the business rule that the application executes. Here is the place
to add the business logic. In a comparison with MVC, the use case, is the place
as where the controller is.&lt;/p&gt;

&lt;h3 id=&quot;frameworks-and-adapters&quot;&gt;Frameworks and adapters&lt;/h3&gt;

&lt;p&gt;Opposed to what MVC frameworks impose in the architecture for web applications,
the clean architecture does not take the framework as something that is the core
of the application, instead the framework is something that is a “implementation
detail”, meaning that it is possible to change the framework choice if needed,
without impacting the use cases. The same way as the framework is a detail
the database is as well &lt;a class=&quot;citation&quot; href=&quot;#clean_architecture_article&quot;&gt;[3]&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;implementaion-details&quot;&gt;Implementaion details&lt;/h2&gt;

&lt;p&gt;The book comes with code examples to ilustrate the scenarios and also to make
statements on the point being made, therefore, there is no folder structure,
file name convention or waht so ever to “glue the pieces together”. This is a
point to improve, but not necessary in the book. I would argue that for any programmer
with a few years of experience, the concepts given are understandable, but
there are programmers like me that like some sort of guide lines so the
it is possible to compare implementations.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;citation&quot; href=&quot;#hands_dirty_on_clean_architecture&quot;&gt;[5]&lt;/a&gt;
provides a implemention of clean architecture using java. It goes along the
clean architecture definitions and depicts folder structure, files, boundaries,
abstractions and also reinforce definitions on the use cases.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;clean_architecture_book&quot;&gt;[1]R. C. Martin, “Clean Architecture A Craftsman’s Guide To Software Structure And Design,” 2017 [Online]. Available at: &lt;a href=&quot;https://archive.org/details/CleanArchitecture/page/n179/mode/2up&quot; target=&quot;_blank&quot;&gt;https://archive.org/details/CleanArchitecture/page/n179/mode/2up&lt;/a&gt;. [Accessed: 2020-Jun-11AD]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;hexagonal_architecutre&quot;&gt;[2]A. Cockburn, “Hexagonal architecture,” 2012 [Online]. Available at: &lt;a href=&quot;https://alistair.cockburn.us/hexagonal-architecture&quot; target=&quot;_blank&quot;&gt;https://alistair.cockburn.us/hexagonal-architecture&lt;/a&gt;. [Accessed: 13-Aug-2012]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;clean_architecture_article&quot;&gt;[3]R. C. Martin, “The Clean Architecture,” 2020 [Online]. Available at: &lt;a href=&quot;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&quot; target=&quot;_blank&quot;&gt;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&lt;/a&gt;. [Accessed: 07-Oct-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;software_architectural_patterns&quot;&gt;[4]R. Mark, &lt;i&gt;Software Architecture Patterns&lt;/i&gt;. O’Reilly Media, Inc, 2015. &lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;hands_dirty_on_clean_architecture&quot;&gt;[5]T. Hombergs, “Get Your Hands Dirty on Clean Architecture - A Hands-on Guide to Creating Clean Web Applications with Code Examples in Java,” 2020 [Online]. Available at: &lt;a href=&quot;https://leanpub.com/get-your-hands-dirty-on-clean-architecture&quot; target=&quot;_blank&quot;&gt;https://leanpub.com/get-your-hands-dirty-on-clean-architecture&lt;/a&gt;. [Accessed: 30-Jan-2020]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;

&lt;!-- 12 factors to consider when chosing frameworks https://www.zend.com/blog/php-frameworks-top-12-factors-consider
student summary: http://courses.cecs.anu.edu.au/courses/CSPROJECTS/19S2/reports/u6052043_report.pdf
another student summary: http://courses.cecs.anu.edu.au/courses/CSPROJECTS/19S1/reports/u6022913_report.pdf
https://www.youtube.com/watch?v=5OjqD-ow8GE GOTO 2018 - Modular Monoliths - Simon Brown --&gt;
</description>
        <pubDate>Fri, 15 May 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/architecture/2020/05/15/clean-architecture.html</link>
        <guid isPermaLink="true">https://marabesi.com/architecture/2020/05/15/clean-architecture.html</guid>
        
        <category>architecture,</category>
        
        <category>clean,</category>
        
        <category>hexagonal,</category>
        
        <category>code,</category>
        
        <category>approach,</category>
        
        <category>book,</category>
        
        <category>Screaming architecture,</category>
        
        <category>DCI,</category>
        
        <category>BCE</category>
        
        
        <category>architecture</category>
        
      </item>
    
      <item>
        <title>Tips for writting docker files</title>
        <description>&lt;p&gt;Docker has revolutionized how developers build and deploy applications.
Docker has support for different programming languages and runs natively on linux,
as opposed to virtual machines that mimics an entire operational system,
docker containers run on linux namespaces, removing the overhead
that virtual machines have, for example, the boot time. The virtual machine
needs time to boot, while docker is a service that starts in the operational
system.&lt;/p&gt;

&lt;p&gt;As opposed to the official best practices &lt;a class=&quot;citation&quot; href=&quot;#best_practices_docker_hub&quot;&gt;[1]&lt;/a&gt; on writting docker files,
the goal here is to share tips on approaches in how to write the docker files, this is not a
beginners guide in how docker works or how to use it.&lt;/p&gt;

&lt;h2 id=&quot;docker-images-and-services&quot;&gt;Docker images and services&lt;/h2&gt;

&lt;p&gt;In this section, the focus is to go through the tips around building
a docker image and the docker compose services.&lt;/p&gt;

&lt;h3 id=&quot;1-make-the-basic-setup-with-standard-image&quot;&gt;1. Make the basic setup with standard image&lt;/h3&gt;

&lt;p&gt;Starting to build docker images requires steps and previous knowledge on the
docker platform and ad least to understand a few commands such as RUN, COPY and
FROM. Based on those commands, the generated image can be big or small, it depends.&lt;/p&gt;

&lt;p&gt;Docker hub offers ready to use images without the need to build one, and they are
classified as (from the biggest to the smallest): standard image, slim and alphine.&lt;/p&gt;

&lt;p&gt;Dockerfile with standard image:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:12 &lt;span class=&quot;c&quot;&gt;# &amp;lt;--- standard image, and also the bigger compared to the next two version&lt;/span&gt;

WORKDIR /var/www/app

COPY package&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json ./

COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build

EXPOSE 5000

CMD npm run serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dockerfile with slim image:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:12-slim &lt;span class=&quot;c&quot;&gt;# &amp;lt;--- slim image, smaller, but also has less dependencies installed by default&lt;/span&gt;

WORKDIR /var/www/app

COPY package&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json ./

COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build

EXPOSE 5000

CMD npm run serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dockerfile with alphine image:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:12-slim &lt;span class=&quot;c&quot;&gt;# &amp;lt;--- slim image, the smallest, but also it has some drawbacks such as missing needed dependencies by the code&lt;/span&gt;

WORKDIR /var/www/app

COPY package&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json ./

COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build

EXPOSE 5000

CMD npm run serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usually the setup using the basic image is faster as it comes with almost everything
to run the program. on the other side though, the alphine version has almost
nothing to run the program, it has just the core, nothing else. Which in many 
cases will make the program to not run, depending on the dependencies.&lt;/p&gt;

&lt;h3 id=&quot;2-the-root-user&quot;&gt;2. The root user&lt;/h3&gt;

&lt;p&gt;The root user is the default user in which the container runs, which makes
easier the process to set up permissions to access files or to setup configurations.
Usually this is a bad practice to, the container should not run with the root
user due security issues &lt;a class=&quot;citation&quot; href=&quot;#best_practices_nodejs_dockercon&quot;&gt;[2]&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Though for the process to set up the docker image this can be a bit harder,
given the fact that setting up a different user with less permission can
difficult the image setup.&lt;/p&gt;

&lt;p&gt;If no user is given (as for example, the last 3 dockerfiles shown in the previous section),
docker will build it using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;, which of course has security issues. To fix this issue
docker offers the flag &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM node:12-slim

USER node &lt;span class=&quot;c&quot;&gt;# &amp;lt;!--- specify the user for docker to build and run the image&lt;/span&gt;

WORKDIR /var/www/app

COPY package&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.json ./

COPY &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

RUN npm &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run build

EXPOSE 5000

CMD npm run serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tip relies on the same approach as the previous one, first, make it work
with the root user, then start to trick around permissions with a specific user.&lt;/p&gt;

&lt;h3 id=&quot;3-separate-concerns-avoid-building-different-services-into-one-image&quot;&gt;3. Separate concerns, avoid building different services into one image&lt;/h3&gt;

&lt;p&gt;As a best practice the recommended way to build containers is: one container equals
to one process. Which can avoid problems when it comes to managing them.&lt;/p&gt;

&lt;h3 id=&quot;4-setup-docker-file-first-and-then-move-to-docker-compose-if-needed&quot;&gt;4. setup docker file first, and then move to docker compose (if needed)&lt;/h3&gt;

&lt;p&gt;Usually, docker compose is the next step when building services to use with docker,
though developers tend to skip the first step which is to understand how the
image works and then move on to compose.&lt;/p&gt;

&lt;h3 id=&quot;5-networking-and-sharing-hosts&quot;&gt;5. Networking and sharing hosts&lt;/h3&gt;

&lt;p&gt;Docker creates its own network interface, which in turn containers communicate
between each other. Therefore, there are scenarios in which this behavior
is not desired. For example, a database. As the database holds state (the data)
usually it is used an external provider (RDS, mongodb atlas etc).&lt;/p&gt;

&lt;p&gt;By default the container can’t access external ports, which in turn will
block the database connection. There are two possible options for that, using
a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;network&lt;/code&gt; flag or using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add-host&lt;/code&gt; flag.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# using --network flag&lt;/span&gt;
docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;host nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is a side effect using the network flag, which will ignore the docker
network created automatically by docker and the container will run as if
it were in the host. Impacting the port that the application run and therefore
prevents the possibility of blue-green
deployments &lt;a class=&quot;citation&quot; href=&quot;#docker_blue_green_no_down_time&quot;&gt;[3]&lt;/a&gt;,
which requires two instances of the same app running, each on its specific port.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;add-host&lt;/code&gt; gives the flexibility needed to overcome the port issue. The
flag maps a specific host to a IP, the following example maps the localhost
to be the host.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# using --add-host flag&lt;/span&gt;
docker run &lt;span class=&quot;nt&quot;&gt;--rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--add-host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;localhost:192.168.1.102 nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;docker-compose&quot;&gt;Docker compose&lt;/h2&gt;

&lt;p&gt;This section focus on the docker compose only.&lt;/p&gt;

&lt;h3 id=&quot;6-different-docker-compose-files-for-different-environments&quot;&gt;6. Different docker compose files for different environments&lt;/h3&gt;

&lt;p&gt;Docker compose files are used to compose the container orchestration, therefore
sometimes it is needed to use different behavior based on the environment
that the application is one. For example, in development mode, the database
container might be needed, but in production it might not be the case.&lt;/p&gt;

&lt;p&gt;For that, it is possible to create different docker compose files for each
environment. For example, for development, staging and production we might have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;development: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose-dev.yml&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;staging and production: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose-deploy.yml&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is also possible to share code among each docker file, which might make
sense to create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; as the base for the two files previously
mentioned.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;best_practices_docker_hub&quot;&gt;[1]DockerHub, “Best practices for writing Dockerfiles” [Online]. Available at: &lt;a href=&quot;https://docs.docker.com/develop/develop-images/dockerfile_best-practices&quot; target=&quot;_blank&quot;&gt;https://docs.docker.com/develop/develop-images/dockerfile_best-practices&lt;/a&gt;. [Accessed: 23-May-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;best_practices_nodejs_dockercon&quot;&gt;[2]B. Fisher, “Docker and Node.js Best Practices from Bret Fisher at DockerCon,” 2019 [Online]. Available at: &lt;a href=&quot;http://www.youtube.com/watch?v=Zgx0o8QjJk4&quot; target=&quot;_blank&quot;&gt;http://www.youtube.com/watch?v=Zgx0o8QjJk4&lt;/a&gt;. [Accessed: 23-May-2020]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;docker_blue_green_no_down_time&quot;&gt;[3]Marcus, “How to do Zero Downtime Deployments of Docker Containers,” 2019 [Online]. Available at: &lt;a href=&quot;https://coderbook.com/@marcus/how-to-do-zero-downtime-deployments-of-docker-containers&quot; target=&quot;_blank&quot;&gt;https://coderbook.com/@marcus/how-to-do-zero-downtime-deployments-of-docker-containers&lt;/a&gt;. [Accessed: 2020-Jun-11AD]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Fri, 15 May 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/devops/2020/05/15/tips-for-writting-docker-files.html</link>
        <guid isPermaLink="true">https://marabesi.com/devops/2020/05/15/tips-for-writting-docker-files.html</guid>
        
        <category>docker,</category>
        
        <category>Docker,</category>
        
        <category>image,</category>
        
        <category>user,</category>
        
        <category>build,</category>
        
        <category>root,</category>
        
        <category>network,</category>
        
        <category>setup,</category>
        
        <category>compose,</category>
        
        <category>container,</category>
        
        <category>files,</category>
        
        <category>program</category>
        
        
        <category>devops</category>
        
      </item>
    
      <item>
        <title>PHP import checker - VScode extension to support PHP developers</title>
        <description>&lt;p&gt;Vscode is one of the most used editors for web development
&lt;a class=&quot;citation&quot; href=&quot;#pypl_ide_index&quot;&gt;[1]&lt;/a&gt;,
which supports various programming languages, including PHP.
As its goal is not to be a full featured PHP IDE, it lacks a few characteristics
that help PHP developers to be more productive. In that list, we can name one:
the lack of checking if an imported class is being used or not.&lt;/p&gt;

&lt;p&gt;On the other hand, PHPStorm &lt;a class=&quot;citation&quot; href=&quot;#phpstorm_jetbrains&quot;&gt;[2]&lt;/a&gt;
has the ability to check imports being used built-in - This is a long discussion
between editors x IDE’s.&lt;/p&gt;

&lt;p&gt;PHP import checker &lt;a class=&quot;citation&quot; href=&quot;#php_import_checker&quot;&gt;[3]&lt;/a&gt; fills
this gap, which offers PHP developers feedback of unused classes that have been
imported into the file.&lt;/p&gt;

&lt;h2 id=&quot;installing-the-extension&quot;&gt;Installing the extension&lt;/h2&gt;

&lt;p&gt;Once installed Vscode, the steps to install PHP import checker are the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Lunch Vscode&lt;/li&gt;
  &lt;li&gt;Access the extension menu&lt;/li&gt;
  &lt;li&gt;Search for PHP import checker&lt;/li&gt;
  &lt;li&gt;Hit the button install&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;php-import-checker-features&quot;&gt;PHP import checker features&lt;/h2&gt;

&lt;p&gt;The extension is enabled by default, once installed it will start to look
for unused classes in PHP files only. The first feature that the extension provides
is a command to run the import checker manually.&lt;/p&gt;

&lt;p&gt;The extension runs on PHP files only and by default it will run and scan
the imported classes once the file is saved. Though, there are cases in which
the developer might want to run the scan manually, for that a command is
available. The command can be executed typing “check php import” in the
command palette &lt;a class=&quot;citation&quot; href=&quot;#command_palette_vscode&quot;&gt;[4]&lt;/a&gt;
(as depicted by the following gi).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/marabesi/php-import-checker/blob/master/demo.gif?raw=true&quot; alt=&quot;Unused class highlight in red, the default color&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By default, the extension uses a red color to highlight the unused classes in the
file. The color can be changed through the directive &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php.import.highlight&lt;/code&gt;. The
directive accepts a JSON with the key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;color&lt;/code&gt;. The color should be in the hex
format. The JSON settings can be accessed through the command palette as well
&lt;a class=&quot;citation&quot; href=&quot;#workspace_settings_vscode&quot;&gt;[5]&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;php.import.highlight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;color&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;color&lt;/code&gt; key inside the directive &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;php.import.hightligh&lt;/code&gt; was used to provide
a flexible way if needed in the future. This way is possible to add more options
without side effects or need to change previous directives.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://github.com/marabesi/php-import-checker/blob/master/demo-color.gif?raw=true&quot; alt=&quot;Changing the highlight color from white to yellow&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The highlight color can improve the fitness of the extension with different themes
that developers might use, if the theme used by the developer has a red background
it would be harder to note the highlight that the extension adds to the imported
class.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;PHP import checker is an extension that aims to help PHP developers to write better
code, letting the developer know when an unused import is in the file. The extension
is simple and provides a command to run the checker manually and an option for the
developer to change the highlight color.&lt;/p&gt;

&lt;p&gt;Besides that the extension is open source and its being developed at Github. There
are edge cases that have been reported and are being tracked on the issues
section of the project.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;li&gt;&lt;span id=&quot;pypl_ide_index&quot;&gt;[1]P. Carbonnelle, “Top IDE index - The Top IDE Index is created by analyzing how often IDEs’ download page are searched on Google” [Online]. Available at: &lt;a href=&quot;https://pypl.github.io/IDE.html&quot; target=&quot;_blank&quot;&gt;https://pypl.github.io/IDE.html&lt;/a&gt;. [Accessed: 2020-Apr-12AD]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;phpstorm_jetbrains&quot;&gt;[2]Jetbrains, “The Lightning-Smart PHP IDE” [Online]. Available at: &lt;a href=&quot;https://www.jetbrains.com/phpstorm&quot; target=&quot;_blank&quot;&gt;https://www.jetbrains.com/phpstorm&lt;/a&gt;. [Accessed: 2020-Apr-12AD]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;php_import_checker&quot;&gt;[3]M. Marabesi, “PHP import checker - Visual Studio Code market place” [Online]. Available at: &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=marabesi.php-import-checker&quot; target=&quot;_blank&quot;&gt;https://marketplace.visualstudio.com/items?itemName=marabesi.php-import-checker&lt;/a&gt;. [Accessed: 2020-Apr-12AD]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;command_palette_vscode&quot;&gt;[4]Microsoft, “User interface, Command Palette” [Online]. Available at: &lt;a href=&quot;https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette&quot; target=&quot;_blank&quot;&gt;https://code.visualstudio.com/docs/getstarted/userinterface#_command-palette&lt;/a&gt;. [Accessed: 2020-Apr-12AD]&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span id=&quot;workspace_settings_vscode&quot;&gt;[5]Microsoft, “User and Workspace Settings” [Online]. Available at: &lt;a href=&quot;https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations&quot; target=&quot;_blank&quot;&gt;https://code.visualstudio.com/docs/getstarted/settings#_settings-file-locations&lt;/a&gt;. [Accessed: 2020-Apr-12AD]&lt;/span&gt;&lt;/li&gt;&lt;/ol&gt;
</description>
        <pubDate>Sun, 05 Apr 2020 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2020/04/05/php-import-checker-vscode-extension.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2020/04/05/php-import-checker-vscode-extension.html</guid>
        
        <category>PHP,</category>
        
        <category>color,</category>
        
        <category>command,</category>
        
        <category>highlight,</category>
        
        <category>developers,</category>
        
        <category>IDE,</category>
        
        <category>php,</category>
        
        <category>import,</category>
        
        <category>checker,</category>
        
        <category>visual,</category>
        
        <category>studio,</category>
        
        <category>code,</category>
        
        <category>market,</category>
        
        <category>place,</category>
        
        <category>extension</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Configuring reactjs and relay 2019 version</title>
        <description>&lt;p&gt;Recently GraphQL started to gain attention from the open source community
as a production ready platform focused on the communication between
client and server. One of the advantages of GraphQL over REST is how the
data is fetched from server to client, avoiding over fetching as well as
under fetching.&lt;/p&gt;

&lt;p&gt;Relay is an open source library that abstracts away the data fetching from
the developer and offers a render component to the developer. Though, to configure
relay and reactjs a few steps are needed. Even when following the official
realy documentation to get up and running with React, problems can pop up.&lt;/p&gt;

&lt;p&gt;The text follows with the reactjs set up using the create react app, then the
relay configuration is presented guided by the relay official documentation and
in conclusion the solution with the eject react app is presented.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Disclaimer: To follow along NodeJs 10.* is a must as well as NPM 6.*.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Disclaimer 2: The following of this text assumes that a graphql server up and running on localhost port 4002.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Disclaimer 3: The text assumes general knowledge in handling terminal commands.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;related-work&quot;&gt;Related work&lt;/h2&gt;

&lt;p&gt;Despite previous attempts to setup reactjs and relay without ejecting the create
react app &lt;strong&gt;[7][8]&lt;/strong&gt;, the approach to such options shows to not be effective
as, the application created by create react by does not understand the
configuration required for relay to work.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay.config.js&lt;/code&gt; pointed by &lt;strong&gt;[7]&lt;/strong&gt; demonstrates that the reactjs app
has difficulties to interpret the configuration file, leading to a broken
application state.&lt;/p&gt;

&lt;p&gt;In the same sense &lt;strong&gt;[8]&lt;/strong&gt; provides three different alternatives to setup relay
and reactjs, which the third options elaborates more on how to use relay
without ejecting. This approach as the previous one mentioned leads to a
broken state application.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-reactjs&quot;&gt;Setting up ReactJs&lt;/h2&gt;

&lt;p&gt;Create react app &lt;strong&gt;[1]&lt;/strong&gt; is a opinionated tool that comes with webpack configuration and
scripts abstracted away from the developer, providing good defaults. Creating
an app react based with create react app takes two steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Install create react app package (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm i -g create-react-app&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Executing the create react app (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create-react-app relay-app&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Once the command from step 2 is done the react app is available in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay-app&lt;/code&gt;
folder, make sure to move to that directory before proceeding  with the
command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd relay-app&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;With the based app setup, the next step is to install all libraries required
by relay to work.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm i get-graphql-schema relay-compiler babel-plugin-relay &lt;span class=&quot;nt&quot;&gt;--save-dev&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm i graphql react-relay &lt;span class=&quot;nt&quot;&gt;--save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-graphql-schema&lt;/code&gt; &lt;strong&gt;[2]&lt;/strong&gt; is a tool used for generating the graphql schema from a given
graphql server.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay-compiler&lt;/code&gt; &lt;strong&gt;[3]&lt;/strong&gt; is used to convert graphql literals into generated
files that live alongside your source files. This approach facilitates the
usage of relay into reactjs project, preventing developers to write those files
themselves. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;babel-plugin-relay&lt;/code&gt; is related as well, as it converts graphql to
runtime artifacts - without this plugin is not possible to run relay in the
browser.&lt;/p&gt;

&lt;p&gt;At this stage a check point would help to make sure that the dependencies
have been installed and they are working as expected. For that, in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;
file add the following scripts &lt;strong&gt;[4]&lt;/strong&gt;:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;scripts&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;export-schema&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;get-graphql-schema http://localhost:4002 &amp;gt; ./schema.graphql&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relay-compile&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relay-compiler --src=./src --schema=./schema.graphql --artifactDirectory=./src/__generated__&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;relay&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;npm run export-schema &amp;amp;&amp;amp; npm run relay-compile&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export-schema&lt;/code&gt; uses the library &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get-graphql-schema&lt;/code&gt; to fetch
the schema definitions the the graphql server exposed at localhost:4002. The
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schema.graphql&lt;/code&gt; file is needed for the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay-compiler&lt;/code&gt; package in order to
generate the query definitions.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay-compile&lt;/code&gt; generates the metadata used by relay to query the graphql server.
In this command the files and code generated are stored under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;src/__generated__&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay&lt;/code&gt; script is used as a shortcut to execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;export-schema&lt;/code&gt; and
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay-compile&lt;/code&gt; in sequence.&lt;/p&gt;

&lt;p&gt;Once the scripts have been added, the last step is to run the script &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;relay&lt;/code&gt;.
For that in the terminal run the following command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm run relay
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The output should be something like the following:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 relay /Projects/graph-ql/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npm run export-schema &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run relay-compile


&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 export-schema /Projects/graph-ql/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; get-graphql-schema http://localhost:4002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./schema.graphql
&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 relay-compile /Projects/graph-ql/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-compiler &lt;span class=&quot;nt&quot;&gt;--src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./src &lt;span class=&quot;nt&quot;&gt;--schema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./schema.graphql &lt;span class=&quot;nt&quot;&gt;--artifactDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./src/__generated__

HINT: pass &lt;span class=&quot;nt&quot;&gt;--watch&lt;/span&gt; to keep watching &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changes.

Writing js
Unchanged: 0 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last line should reflect the project lack of graphql files, as in the last
line it shows &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unchanged: 0 files&lt;/code&gt;, which in this case is the desired
behavior.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-relay-environment&quot;&gt;Setting up relay environment&lt;/h2&gt;

&lt;p&gt;Relay requires an environment setup to work properly &lt;strong&gt;[5]&lt;/strong&gt;. The environment
provided by the official documentation is the one used here. Copy the following
code and save it in a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;environment.js&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;RecordSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;relay-runtime&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetchQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Content-Type&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;application/json&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}),&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Network&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Store&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RecordSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()),&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, comes the relay component to interact with the graphql server. The component
used here is a react functional component that creates a list of products
(file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ProductList.js&lt;/code&gt;). The point of attention here is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;environment&lt;/code&gt; usage
defined previously, followed by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;query&lt;/code&gt; variable that holds the graphql query.
The graphql query is passed to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QueryRenderer&lt;/code&gt; &lt;strong&gt;[6]&lt;/strong&gt; relay component to fetch
the graphql data.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// ProductList.js&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;QueryRenderer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react-relay&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./environment&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;graphql&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`
query ProductListQuery {
  products {
    title
    image_link
  }
}`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductListQuery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;QueryRenderer&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RenderProductList&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;/&amp;gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RenderProductList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;props&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;products&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;Loading&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductListQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The ProductList component is based on the component provided by the relay official
documentation &lt;strong&gt;[6]&lt;/strong&gt;. To actually use the ProductList component one more step
is required: to invoke the component in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App.js&lt;/code&gt; file, as the following code does.&lt;/p&gt;

&lt;div class=&quot;language-jsx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;react&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ProductList&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./ProductList&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;./App.css&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;className&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ProductList&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the code is in place, the expected behavior is to it to work, as the
basic setup is completed. Unfortunately it doesn’t. Trying to run the code
with the setup made so far throws an exception.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;graphql: Unexpected invocation at runtime. Either the Babel transform was not set up, or it failed to identify this call site. Make sure it is being used verbatim as `graphql`.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-12-30-configuring-reactjs-and-relay-2019-version/relay_reactjs_babel_error.jpg&quot; alt=&quot;Error babel trying to execute relay without eject&quot; title=&quot;Error babel trying to execute relay without eject&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The alternative solution proposed is to eject the reactjs app created with the
create react app, the next section dives in details in how to achieve it.&lt;/p&gt;

&lt;h2 id=&quot;the-solution-ejecting-reactjs&quot;&gt;The solution ejecting reactjs&lt;/h2&gt;

&lt;p&gt;The solution for that is to eject the reactjs project running the command:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run eject&lt;/code&gt;. Followed by changing the babel configuration used.
The eject command reveals the magic behind the create react app, which results
in more configuration files in the root directory and more scripts/dependencies
in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;The next step is to create a new file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.babelrc&lt;/code&gt; in the root of the project
and add the following content:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;presets&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;react-app&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;plugins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
      &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;relay&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To prevent any babel configuration conflict, remove the section &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;babel&lt;/code&gt; inside
the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file, and then, run again the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run relay&lt;/code&gt; to
generate all required files by relay, this time time output should be something
like the following:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 relay /Projects/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; npm run export-schema &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; npm run relay-compile


&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 export-schema /Projects/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; get-graphql-schema http://localhost:4002 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; ./schema.graphql


&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-app@0.1.0 relay-compile /Projects/relay-app
&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; relay-compiler &lt;span class=&quot;nt&quot;&gt;--src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./src &lt;span class=&quot;nt&quot;&gt;--schema&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./schema.graphql &lt;span class=&quot;nt&quot;&gt;--artifactDirectory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;./src/__generated__

HINT: pass &lt;span class=&quot;nt&quot;&gt;--watch&lt;/span&gt; to keep watching &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;changes.

Writing js
Created:
 - ProductListQuery.graphql.js
Unchanged: 0 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Relay compiler is going to create one file, which is linked with the graphql query
in the ProductList component.&lt;/p&gt;

&lt;p&gt;At this point, starting the app with the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm run start&lt;/code&gt; should start the
reactjs app and realy should be up and running as well.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] Create React App - Set up a modern web app by running one command [Online]. Available: &lt;a href=&quot;https://create-react-app.dev&quot; title=&quot;Create React App - Set up a modern web app by running one command&quot; target=&quot;_blank&quot;&gt;https://create-react-app.dev&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[2] Fetch and print the GraphQL schema from a GraphQL HTTP endpoint [Online]. Available: &lt;a href=&quot;https://github.com/prisma-labs/get-graphql-schema&quot; title=&quot;Fetch and print the GraphQL schema from a GraphQL HTTP endpoint&quot; target=&quot;_blank&quot;&gt;https://github.com/prisma-labs/get-graphql-schema&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[3] Set up relay-compiler [Online]. Available: &lt;a href=&quot;https://relay.dev/docs/en/installation-and-setup#set-up-relay-compiler&quot; title=&quot;Set up relay-compiler&quot; target=&quot;_blank&quot;&gt;https://relay.dev/docs/en/installation-and-setup#set-up-relay-compiler&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[4] How npm handles the “scripts” field [Online]. Available: &lt;a href=&quot;https://docs.npmjs.com/misc/scripts&quot; title=&quot;How npm handles the scripts field&quot; target=&quot;_blank&quot;&gt;https://docs.npmjs.com/misc/scripts&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[5] Relay environment [Online]. Available: &lt;a href=&quot;https://relay.dev/docs/en/quick-start-guide#relay-environment&quot; title=&quot;Relay environment&quot; target=&quot;_blank&quot;&gt;https://relay.dev/docs/en/quick-start-guide#relay-environment&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[6] Rendering GraphQL Queries [Online]. Available: &lt;a href=&quot;https://relay.dev/docs/en/quick-start-guide#rendering-graphql-queries&quot; title=&quot;Rendering GraphQL Queries&quot; target=&quot;_blank&quot;&gt;https://relay.dev/docs/en/quick-start-guide#rendering-graphql-queries&lt;/a&gt;. [Accessed: 31 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[7] Set up Relay with a single config file [Online]. Available: &lt;a href=&quot;https://relay.dev/docs/en/installation-and-setup#set-up-relay-with-a-single-config-file&quot; title=&quot;Set up Relay with a single config file&quot; target=&quot;_blank&quot;&gt;https://relay.dev/docs/en/installation-and-setup#set-up-relay-with-a-single-config-file&lt;/a&gt;. [Accessed: 01 - Jan - 2020]&lt;/p&gt;

&lt;p&gt;[8] Using Create React App with Relay Modern [Online]. Available: &lt;a href=&quot;https://hackernoon.com/using-create-react-app-with-relay-modern-989c078fa892&quot; title=&quot;Using Create React App with Relay Modern&quot; target=&quot;_blank&quot;&gt;https://hackernoon.com/using-create-react-app-with-relay-modern-989c078fa892&lt;/a&gt;. [Accessed: 01 - Jan - 2020]&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Dec 2019 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/javascript/2019/12/30/configuring-reactjs-and-relay-2019-version.html</link>
        <guid isPermaLink="true">https://marabesi.com/javascript/2019/12/30/configuring-reactjs-and-relay-2019-version.html</guid>
        
        <category>web,</category>
        
        <category>js,</category>
        
        <category>app,</category>
        
        <category>schema,</category>
        
        <category>npm,</category>
        
        <category>reactjs,</category>
        
        <category>react,</category>
        
        <category>relay,</category>
        
        <category>graph,</category>
        
        <category>graphql,</category>
        
        <category>query,</category>
        
        <category>environment,</category>
        
        <category>component,</category>
        
        <category>compiler,</category>
        
        <category>web,</category>
        
        <category>js,</category>
        
        <category>eject reactjs,</category>
        
        <category>configuring relay js,</category>
        
        <category>A Step By Step Guide,</category>
        
        <category>relay-config npm,</category>
        
        <category>get-graphql-schema,</category>
        
        <category>relay-compiler,</category>
        
        <category>babel-plugin-relay,</category>
        
        <category>react-relay,</category>
        
        <category>getting started,</category>
        
        <category>howtographql</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>MySQL 5.7 on Ubuntu 19.04 and 19.10</title>
        <description>&lt;p&gt;Ubuntu 19.04/19.10 as default comes with MySQL 8.0 as it’s default version to work with.
Projects that need to use a 5.* version might run into problems in the downgrade
process. This post aims to guide the installation of MySQL 5.7 on ubuntu 19.04
and ubuntu 19.10.&lt;/p&gt;

&lt;p&gt;After trying to set up MySQL following different sources &lt;strong&gt;[1][2]&lt;/strong&gt; and fail over everyone,
an alternative might be the installation via .deb packages through the official
MySQL website, which is explored here.&lt;/p&gt;

&lt;h2 id=&quot;set-up&quot;&gt;Set up&lt;/h2&gt;

&lt;p&gt;For this approach two assumptions take place, named:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Ubuntu 19 is up and running&lt;/li&gt;
  &lt;li&gt;Expertise handling commands via terminal (shell)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lastly, if previous tries to install mysql 5.7 on ubuntu have been done, follow
the checklist:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Remove any MySQL installation via apt-get with the command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get remove --purge mysql-server mysql-client mysql-common -y&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Remove old MySQL configuration from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/mysql&lt;/code&gt; with the command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo rm -rf /etc/mysql&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Keep the apt in a clean state with the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get update --fix-missing&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;before-installation-check-list&quot;&gt;Before installation check list&lt;/h2&gt;

&lt;p&gt;Ubuntu 19 comes with MySQL 8 as the defaul version to be installed, to double check that
run the following command in the command line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt list | grep mysql-server&lt;/code&gt;,
the output should display the MySQL version current in use by apt.&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql-server-8.0/eoan-updates,eoan-security 8.0.18-0ubuntu0.19.10.1 amd64
mysql-server-core-8.0/eoan-updates,eoan-security 8.0.18-0ubuntu0.19.10.1 amd64
mysql-server/eoan-updates,eoan-security 8.0.18-0ubuntu0.19.10.1 all
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As expected, the version is 8. Even though previous references have shown how
to change the MySQL via apt &lt;strong&gt;[1][2]&lt;/strong&gt; in early versions of ubuntu, this approach in my
experienced was not effective on ubuntu 19.*.&lt;/p&gt;

&lt;p&gt;The explored solution might work on docker containers based on ubuntu 19.* as well.&lt;/p&gt;

&lt;h2 id=&quot;installing-mysql-via-deb-files&quot;&gt;Installing MySQL via .deb files&lt;/h2&gt;

&lt;p&gt;The first step is to download MySQL 5.7 from &lt;a href=&quot;https://www.cyberpratibha.com/how-to-install-mysql-in-ubuntu&quot;&gt;MySQL website&lt;/a&gt; &lt;strong&gt;[3]&lt;/strong&gt;,
chose the ubuntu version and hit the download button, in the next pase hit “No thanks, just start my download”. It should take a few minutes
to download the entire package.&lt;/p&gt;

&lt;p&gt;Disclaimer: this installation process requires a GUI, for terminal only installations
use the direct download solution to download the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.tar&lt;/code&gt; file:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-server_5.7.28-1ubuntu19.04_amd64.deb-bundle.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the download has been completed, the .tar file should be availble in the
downlods folder (or in the folder where the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; was executed), for any standard browser
installation the folder will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Downloads&lt;/code&gt;. - For now on this is the path
refered, for custom directories replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/Downlodas&lt;/code&gt; with the appropriated path.&lt;/p&gt;

&lt;p&gt;In the terminal change the directory to where the downloaded file is located,
with the command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Downloads
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once in the folder, unpack all the files with the tar &lt;strong&gt;[4]&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; mysql-server_5.7.28-1ubuntu19.04_amd64.deb-bundle.tar
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once the command has run, the extracted files list should contain the MySQL 5.7.*
deb files:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mysql-client_5.7.28-1ubuntu19.04_amd64.deb
mysql-common_5.7.28-1ubuntu19.04_amd64.deb
mysql-community-client_5.7.28-1ubuntu19.04_amd64.deb
mysql-community-server_5.7.28-1ubuntu19.04_amd64.deb
mysql-community-source_5.7.28-1ubuntu19.04_amd64.deb
mysql-server_5.7.28-1ubuntu19.04_amd64.deb
mysql-testsuite_5.7.28-1ubuntu19.04_amd64.deb
mysql-community-test_5.7.28-1ubuntu19.04_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To prevent uneeded issues, the test packages can be removed as they aren’t
required to install or run MySQL server. To remove those files run the
following command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rf&lt;/span&gt; mysql-testsuite_5.7.28-1ubuntu19.04_amd64.deb mysql-community-test_5.7.28-1ubuntu19.04_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The final command to execute the installation is:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dpkg &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; mysql-&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command will select all files that start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql-&lt;/code&gt; that has .deb extension
and will start the installation process.&lt;/p&gt;

&lt;p&gt;Once the command has completed execution, check MySQL server status with
the following command:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/init.d/mysql status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Which in turn, should output:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; MySQL Community Server 5.7.28 is started
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usually the MySQL service starts by default after the installation - if this is
not the case the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/init.d/mysql start&lt;/code&gt; can be used to start the
service.&lt;/p&gt;

&lt;h2 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h2&gt;

&lt;p&gt;Errors related due the lack of dependent packages, usually can be fixed
running the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt-get update --fix-missing&lt;/code&gt; after the
error message. Ubuntu will try to install the missing dependencies automatically.&lt;/p&gt;

&lt;h2 id=&quot;edit-may-19-2020&quot;&gt;EDIT: May 19 2020&lt;/h2&gt;

&lt;p&gt;Another approach to avoid the need to install MySQL on Ubuntu 19.04 or 19.10 is
to use the docker image - This solution applies to users that have the minimum
understanding of docker.&lt;/p&gt;

&lt;p&gt;The following command, runs MySQL 5.7 on por 3306, without the need to install
it:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker run &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; mysql-5-7 &lt;span class=&quot;nt&quot;&gt;--restart&lt;/span&gt; always &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 3306:3306 &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;my-secret-pw &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; mysql:5.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Docker will create a MySQL container running on port 3306 with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; user and
the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secret&lt;/code&gt; password.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] How To Install MySQL 5.7 on Ubuntu 16.04 [Online]. Available: &lt;a href=&quot;https://www.fosstechnix.com/install-mysql5-on-ubuntu&quot; target=&quot;_blank&quot;&gt;https://www.fosstechnix.com/install-mysql5-on-ubuntu&lt;/a&gt;. [Accessed: 26 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[2]  How to Install MySQL 5.7 on Ubuntu 16.04 LTS [Online]. Available: &lt;a href=&quot;https://tecadmin.net/install-mysql-5-on-ubuntu&quot; target=&quot;_blank&quot;&gt;https://tecadmin.net/install-mysql-5-on-ubuntu&lt;/a&gt;. [Accessed: 26 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[3] MySQL Community Downloads [Online]. Available: &lt;a href=&quot;https://dev.mysql.com/downloads/mysql/5.7.html&quot; target=&quot;_blank&quot;&gt;https://dev.mysql.com/downloads/mysql/5.7.html&lt;/a&gt;. [Accessed: 26 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[4] How to open a tar file in Unix or Linux [Online]. Available: &lt;a href=&quot;https://www.pendrivelinux.com/how-to-open-a-tar-file-in-unix-or-linux&quot; target=&quot;_blank&quot;&gt;https://www.pendrivelinux.com/how-to-open-a-tar-file-in-unix-or-linux&lt;/a&gt;. [Accessed: 26 - Dec - 2019]&lt;/p&gt;

&lt;p&gt;[5] MySQL Docker official image [Online]. Available: &lt;a href=&quot;https://hub.docker.com/_/mysql&quot; target=&quot;_blank&quot;&gt;https://hub.docker.com/_/mysql&lt;/a&gt;. [Accessed: 19 - May - 2020]&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Dec 2019 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/mysql/2019/12/23/mysql-5.7-on-ubuntu-19.html</link>
        <guid isPermaLink="true">https://marabesi.com/mysql/2019/12/23/mysql-5.7-on-ubuntu-19.html</guid>
        
        <category>web,</category>
        
        <category>ubuntu,</category>
        
        <category>Ubuntu,</category>
        
        <category>version,</category>
        
        <category>ubuntu 19,</category>
        
        <category>ubuntu 19.10,</category>
        
        <category>MySQL,</category>
        
        <category>mysql,</category>
        
        <category>command,</category>
        
        <category>amd,</category>
        
        <category>mysql 5.7,</category>
        
        <category>mysql 5.7.*,</category>
        
        <category>tar,</category>
        
        <category>deb,</category>
        
        <category>server,</category>
        
        <category>installation,</category>
        
        <category>apt,</category>
        
        <category>linux,</category>
        
        <category>shell,</category>
        
        <category>mysql-server,</category>
        
        <category>mysql-community-server,</category>
        
        <category>mysql-core,</category>
        
        <category>download</category>
        
        
        <category>mysql</category>
        
      </item>
    
      <item>
        <title>e2e testing with Cypress, ReactJs and Firebase</title>
        <description>&lt;p&gt;Cypress is a e2e testing tool that interacts with chrome based browsers (and electron) to
execute its test suite &lt;strong&gt;[1]&lt;/strong&gt;. E2e testing is known by its complexity, and often it is
related to the top in the test pyramid &lt;strong&gt;[2]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The complexity comes from the amount of work and setup to do before performing the
test itself. To put in context, unit test usually is the easiest in the spectrum,
whereas the developer write test methods to cover a class behavior. The setup
to be done is the smallest.&lt;/p&gt;

&lt;p&gt;The havy setup is due the interaction between components, in a e2e testing, everything
is working the “production” way. Often this behavior is not desired, for that
Cypress provides a mock library. For example, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cy.route&lt;/code&gt; is used to mock
network requests. Using the network mock, prevents the need to setup a entire
backend to interact with the web app &lt;strong&gt;[3]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;firebase&quot;&gt;Firebase&lt;/h2&gt;

&lt;p&gt;Firebase is a library maintained by Google, which has many products inside it.
In specific the real time database (or more recent firestore) is a Firebase
product that allows developers to write real time applications.&lt;/p&gt;

&lt;p&gt;It has a vast library that integrates with many programming languages, the firebase
app has support for iOS, Android and Web (javascript) &lt;strong&gt;[4]&lt;/strong&gt;. The server side supports more technologies &lt;strong&gt;[5]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;cypress-and-firebase&quot;&gt;Cypress and Firebase&lt;/h2&gt;

&lt;p&gt;Web applications that uses Firebase as a service to provide real time database
integration have a challenge beyond the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cy.route&lt;/code&gt; that Cypress provides.
Firebase uses a specific protocol to communicate with its server, which is not a
ajax requests. In this sense, using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cy.route&lt;/code&gt; is not effective, as it is
based on ajax requests only.&lt;/p&gt;

&lt;h2 id=&quot;proposed-solution-redux-and-reactjs&quot;&gt;Proposed solution: redux and ReactJs&lt;/h2&gt;

&lt;p&gt;The first alternative is Redux &lt;strong&gt;[6]&lt;/strong&gt;. Redux provides a pattern to abstract the
data of the application from the UI. In this sense, acting in the data part
reflects the UI due its separation of concerns. Redux is a implementation of
Flux a pattern, a one way flow to mutate data &lt;strong&gt;[7]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This solution, depend on the redux understanding. In other words, redux is a must.
Applications that use Firebase and ReactJs only, can’t benefit. If that is the
case there are solutions that try to tackle this case &lt;strong&gt;[8][9]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To follow on the ReactJs and the redux solution, the app must follow two
basic rules:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Calls to the firebase API must be inside reducers&lt;/li&gt;
  &lt;li&gt;The app must depend on the redux state only&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The next step is to expose the redux store through the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window&lt;/code&gt; object. This step
is required, so Cypress can access the store and commit actions to change the
state as needed &lt;strong&gt;[12]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This solution is interesting, as it isolates the dependency from Firebase. It
is like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cy.route&lt;/code&gt; in this sense. Testable is a project that follows this approach
&lt;strong&gt;[11]&lt;/strong&gt;. To understand the big picture of the implementation is recommended
to check the &lt;a href=&quot;https://github.com/marabesi/testable/blob/master/webapp/src/reducers/userReducer.js&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;userReducer.js&lt;/code&gt;&lt;/a&gt;,
this file follows the first rule. In addition to the the file &lt;a href=&quot;https://github.com/marabesi/testable/blob/master/webapp/src/index.js&quot; target=&quot;_blank&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt;&lt;/a&gt; exposes the store to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window&lt;/code&gt; object, as described before.&lt;/p&gt;

&lt;p&gt;The second rule can be checked in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pages&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;components&lt;/code&gt; directory, as
all of them should’t dispatch Firebase interactions.&lt;/p&gt;

&lt;p&gt;Interesting enough, exposing the store to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window&lt;/code&gt; object might fit other
libraries/frameworks as well. This approach is not related to ReactJs + Redux only,
but to any Flux implementation. As an example, Vuex can also benefit from this approach.&lt;/p&gt;

&lt;h2 id=&quot;related-work&quot;&gt;Related work&lt;/h2&gt;

&lt;p&gt;Previous work have shown that the solution proposed in the previous sections is
effective to remove the dependency from Firebase. Indeed, &lt;strong&gt;[10]&lt;/strong&gt; has a step by
step tutorial in how to achieve that.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] [Online]. Available: &lt;a href=&quot;https://docs.cypress.io/guides/core-concepts/launching-browsers.html#Browsers&quot; target=&quot;_blank&quot;&gt;https://docs.cypress.io/guides/core-concepts/launching-browsers.html#Browsers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] Ham Vocke, ‘The Practical Test Pyramid’, 2018. [Online]. Available: &lt;a href=&quot;https://martinfowler.com/articles/practical-test-pyramid.html&quot; target=&quot;_blank&quot;&gt;https://martinfowler.com/articles/practical-test-pyramid.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] [Online]. Available: &lt;a href=&quot;https://docs.cypress.io/guides/guides/network-requests.html#Testing-Strategies&quot; target=&quot;_blank&quot;&gt;https://docs.cypress.io/guides/guides/network-requests.html#Testing-Strategies&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[4] [Online]. Available: &lt;a href=&quot;https://firebase.google.com/docs/ios/setup&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/ios/setup&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[5] [Online]. Available: &lt;a href=&quot;https://firebase.google.com/docs/admin/setup#add_the_sdk&quot; target=&quot;_blank&quot;&gt;https://firebase.google.com/docs/admin/setup#add_the_sdk&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[6] [Online]. Available: &lt;a href=&quot;https://redux.js.org&quot; target=&quot;_blank&quot;&gt;https://redux.js.org&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[7] [Online]. Available: &lt;a href=&quot;https://facebook.github.io/flux/docs/in-depth-overview&quot; target=&quot;_blank&quot;&gt;https://facebook.github.io/flux/docs/in-depth-overview&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[8] [Online]. Available: &lt;a href=&quot;https://github.com/prescottprue/cypress-firebase&quot; target=&quot;_blank&quot;&gt;https://github.com/prescottprue/cypress-firebase&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[9] [Online]. Available: &lt;a href=&quot;https://github.com/cypress-io/cypress-example-recipes/issues/118&quot; target=&quot;_blank&quot;&gt;https://github.com/cypress-io/cypress-example-recipes/issues/118&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[10] [Online]. Available: &lt;a href=&quot;https://www.cypress.io/blog/2018/11/14/testing-redux-store/#drive-using-the-dom&quot; target=&quot;_blank&quot;&gt;https://www.cypress.io/blog/2018/11/14/testing-redux-store/#drive-using-the-dom&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[11] [Online]. Available: &lt;a href=&quot;https://github.com/marabesi/testable/tree/master/webapp&quot; target=&quot;_blank&quot;&gt;https://github.com/marabesi/testable/tree/master/webapp&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;

&lt;p&gt;[12] [Online]. Available: &lt;a href=&quot;https://stackoverflow.com/a/52590453/2258921&quot; target=&quot;_blank&quot;&gt;https://stackoverflow.com/a/52590453/2258921&lt;/a&gt;. [Accessed: 31 - Oct - 2019]&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Oct 2019 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/test/2019/10/13/cypress-and-firebase-reactjs-app.html</link>
        <guid isPermaLink="true">https://marabesi.com/test/2019/10/13/cypress-and-firebase-reactjs-app.html</guid>
        
        <category>web,</category>
        
        <category>js,</category>
        
        <category>redux,</category>
        
        <category>javascript,</category>
        
        <category>reactjs,</category>
        
        <category>ReactJs,</category>
        
        <category>e2e,</category>
        
        <category>cypress,</category>
        
        <category>Cypress,</category>
        
        <category>testing,</category>
        
        <category>test,</category>
        
        <category>solution,</category>
        
        <category>docs,</category>
        
        <category>firebase,</category>
        
        <category>Firebase,</category>
        
        <category>Online,</category>
        
        <category>github,</category>
        
        <category>sdk,</category>
        
        <category>https,</category>
        
        <category>store,</category>
        
        <category>Redux</category>
        
        
        <category>test</category>
        
      </item>
    
      <item>
        <title>Introduction to OOP with PHP (Classes, Encapsulation, Inheritance)</title>
        <description>&lt;p&gt;The following content aims to introduce the concepts of OOP, complementing these
concepts the PHP language is used to demonstrate practical examples, but can be
written in any programming language.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Object-oriented programming is a paradigm used in programming to approximate
reality. In comparison to structured programming where each line of code
executes a statement, object-oriented programming is distinguished by
representing code in classes.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Classes: represents a prototype of an object. To create an object it is necessary to define a class beforehand.&lt;/li&gt;
  &lt;li&gt;Object is the concrete instance of a class, which has behaviors.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;The UML has a unique diagram for this type of approach, the class diagram. This diagram aims to represent how the interaction between classes is in a system&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of the advantages of using OOP instead of structured programming is code
reuse, also known as inheritance and polymorphism. On the other hand,
structured programming reuses code through functions and nothing else, which in
some scenarios makes it difficult to use the same logic. Such as a function
that needs to behave in a way based on a parameter. Typically this approach in
structured programming is addressed with a switch / case.&lt;/p&gt;

&lt;h2 id=&quot;classes&quot;&gt;Classes&lt;/h2&gt;

&lt;p&gt;A class can be represented by its behavior (methods) and attributes (variables).&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In structured programming, this type of abstraction is done in a different way.
For example in C is used struct to create a new data structure.&lt;/p&gt;

&lt;p&gt;Classes in particular have two behaviors, the constructors and the destructors.
Constructors are used to define an initial state of an object, and destructors
are used to define the final behavior, and are executed before an object is
destroyed from memory.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;__destruct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: methods that begin with __ in your name have a special meaning in PHP.
These methods are known as magic methods, which have a certain behavior
depending on the type of method invoked.&lt;/p&gt;

&lt;h2 id=&quot;encapsulation&quot;&gt;Encapsulation&lt;/h2&gt;

&lt;p&gt;Encapsulation provides a process of allowing / denying access to behavior and
data that a given class has through the visibility modifiers.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: One of the first approaches of PHP (PHP 4) object orientation did not have implemented visibility. All attributes were public and accessible. (https://subscription.packtpub.com/book/web_development/9781847192561/1/ch01lvl1sec09/difference-of-oop-in-php4-and-php5)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*Note 2: With php 7.4, it is now possible to take properties of a class&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;PHP has three types of public, private, and protected visibility modifiers.
Modifiers are used in the attributes and methods of a class and classes that
inherit can modify the behavior of the parent class.&lt;/p&gt;

&lt;h2 id=&quot;inheritance&quot;&gt;Inheritance&lt;/h2&gt;

&lt;p&gt;Inheritance is known is the act of inheriting all behavior from one class to
another, with the possibility of changing some particular desired behavior.
The goal of inheritance is to reuse existing code.&lt;/p&gt;

&lt;p&gt;Following with the example of the person class, in an actual application, could
have the difference of type, such as for example physical or legal person.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegalPerson&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: In this example we could go a little further and put a Person base class
and create two other PersonPass and LegalPerson classes, so the cpf attribute
would not be unusable in the legal class.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Polymorphism refers to many forms, in the context of object orientation,
we apply polymorphism so that classes derived from other classes (inheritance)
have the same methods but different behaviors.&lt;/p&gt;

&lt;p&gt;This type of approach is used when programming for the parent class and not for
a particular implementation.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$age&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegalPerson&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;kd&quot;&gt;Class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NaturalPerson&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In a scenario where we want only the document value independent of the type of
person, polymorphism becomes important.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$naturalPerson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;NaturalPerson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'john'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3232323&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$legalPerson&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegalPerson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'maria'&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;999999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$persons&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$naturalPerson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;$legalPerson&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This scenario illustrates the concept of abstraction and polymorphism, the final
program, is concerned with the behaviors that exist in a person and not in
specific behaviors of legal person or individual.&lt;/p&gt;

&lt;h2 id=&quot;abstract-classes&quot;&gt;abstract classes&lt;/h2&gt;

&lt;p&gt;Abstract classes are used for this purpose, to create an abstraction based on
some behavior. In one sense of class hierarchy, the abstract class is used as
the basis for all others.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note: At this point it is necessary to think exclusively about the hierarchy and
how to use it, good programming practices, like testing, favor composition
rather than inheritance.&lt;/em&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Person&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With abstract class it is not possible to instantiate an object, since the
concrete class is allowed.&lt;/p&gt;

&lt;h2 id=&quot;final-classes&quot;&gt;final classes&lt;/h2&gt;

&lt;p&gt;On the other hand, sometimes it is possible that a scenario of blocking any type
of inheritance is imposed. For this the final classes were there, declaring a 
class as final, it is not possible to extend it.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LegalPerson&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ol class=&quot;bibliography&quot;&gt;&lt;/ol&gt;
</description>
        <pubDate>Tue, 25 Jun 2019 05:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2019/06/25/intro-oop-php.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2019/06/25/intro-oop-php.html</guid>
        
        <category>class,</category>
        
        <category>programming,</category>
        
        <category>private,</category>
        
        <category>classes,</category>
        
        <category>Person,</category>
        
        <category>object,</category>
        
        <category>type,</category>
        
        <category>final,</category>
        
        <category>methods,</category>
        
        <category>code,</category>
        
        <category>inheritance,</category>
        
        <category>web,</category>
        
        <category>oop,</category>
        
        <category>php,</category>
        
        <category>PHP,</category>
        
        <category>behaviors,</category>
        
        <category>oop</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Strategies to test legacy code - PART 1</title>
        <description>&lt;p&gt;Often developers have to deal with code base without test, which might lead
to disconfort in maintaining the code base. In one hand there is the business
that needs a new feature or a bug fix ready for the users to use, and in
the other hand there is the developer without a guide to make sure that
the change in the code doesn’t make any side effect.&lt;/p&gt;

&lt;p&gt;To refactor is the ability to change the code, without affecting it’s
behavior &lt;strong&gt;[1]&lt;/strong&gt;. If the code is changed and it’s beahvior change, it is not
refactoring, it is changing code without confidence.&lt;/p&gt;

&lt;p&gt;The following content aims to define strategies to refactor existing
code without tests.&lt;/p&gt;

&lt;h1 id=&quot;acceptance-testing&quot;&gt;Acceptance testing&lt;/h1&gt;

&lt;p&gt;The acceptance testing is, compared to the unit test slower to run and depends
on the integration of many components, it is the test that simulates a user
interacting with the application.&lt;/p&gt;

&lt;p&gt;Often the acceptance testing (UI Tests) is used with a web driver, to open a browser and
start to reproduce the events that an user would have done &lt;strong&gt;[4]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The pyramid of test though, gave it a label of being slow and that depends
on integration to be possible to test.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://martinfowler.com/articles/practical-test-pyramid/testPyramid.png&quot; alt=&quot;Test pyramid. Font: https://martinfowler.com/articles/practical-test-pyramid.html&quot; title=&quot;Test pyramid. Font: https://martinfowler.com/articles/practical-test-pyramid.htm&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are at least two reasons for
acceptance test be considered slow, the first is the need to use a web drive,
which creates a real browser environment to execute the test. The second is
related to the first, wich requires for each test to reset the browser instance.&lt;/p&gt;

&lt;p&gt;The recommended approach is to have a few acceptance tests as possible.&lt;/p&gt;

&lt;h1 id=&quot;unit-test&quot;&gt;Unit test&lt;/h1&gt;

&lt;p&gt;The unit test is the test that tests the smallest part in the code, often
referred as a function. The unit tests is the test written by the developer
along the production code, following the pyramid test &lt;strong&gt;[2]&lt;/strong&gt;, the unit test
is the type of test that should have the higher amount in the suite.&lt;/p&gt;

&lt;p&gt;Unit test are fast to run and gives fast feedback to the developer while
writing the program. The opposite of acceptance testing.&lt;/p&gt;

&lt;h1 id=&quot;defining-a-strategy&quot;&gt;Defining a strategy&lt;/h1&gt;

&lt;p&gt;The first strategy to approach testing in legacy systems is to start by writing
acceptance testing via web driver.&lt;/p&gt;

&lt;p&gt;The flow is to get confidence in as many scenarios as possible, in a way that
is possible to refactor the code with confidence. In PHP for instance, is possible
to use codeception. is recommended to follow the TDD metodology even with
acceptance test, the flow would be resumed in:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Write acceptance test&lt;/li&gt;
  &lt;li&gt;Refactor the code to be possible to add unit test&lt;/li&gt;
  &lt;li&gt;Execute the acceptance test&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The pro is to have a few testes which gives the developer confidence in
refactoring in as many scenarios as possible, in the other hand acceptance test
is slow to execute. Even a small change would take a few minutes to execute the
suite.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-01-14-strategies-to-test-legacy-code/strategies-1.png&quot; alt=&quot;TDD applied to acceptance&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;iterating-over-the-strategy&quot;&gt;Iterating over the strategy&lt;/h1&gt;

&lt;p&gt;Having acceptance test in place is a start to start improving the test strategy.
As mentioned before acceptance test is slow to execute, in addition it should
be a few as possible in the test suite.&lt;/p&gt;

&lt;p&gt;The acceptance test in the scenario gives the developer more conficen to start
refactoring, where the goal to achive is to increase the unit test based on the
acceptance test suite.&lt;/p&gt;

&lt;p&gt;For each acceptance test is recommended to start to substitute the acceptance
test with the unit test doing refactoring, the recommended approach would be:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Identify which classes are touched by the acceptance test&lt;/li&gt;
  &lt;li&gt;Pick one class and start to refactoring with the unit test
    &lt;ol&gt;
      &lt;li&gt;If the class does’t have a unit test, create a class for it&lt;/li&gt;
      &lt;li&gt;If the class already have a unit test class, start to write the test&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Repeat step 2 untill all acceptance tests is converted into unit test&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The last part is to remove specific cases in the acceptance testing suite, and
keep only the general ones, which covers the most basic flow.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2019-01-14-strategies-to-test-legacy-code/strategies-2.png&quot; alt=&quot;Iterating over the strategy&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is possible to keep with all the acceptance test suite in place as well,
just the execution approach would change from a developer point of view.&lt;/p&gt;

&lt;p&gt;Once the unit test suite is good enough to have confidence, the developer at
each change would execute the suite to have feedback on the change. Whereas in
the acceptance suite would be executed only once the refactor is done.&lt;/p&gt;

&lt;h1 id=&quot;edit-27-2019---madridjs-talk&quot;&gt;Edit 27, 2019 - MadridJs talk&lt;/h1&gt;

&lt;iframe src=&quot;//speakerdeck.com/player/bf58fda1a16f40bcbf881d6efbfa77c5&quot; width=&quot;100%&quot; height=&quot;399&quot; style=&quot;border:0; padding:0; margin:0; background:transparent;&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;allowfullscreen&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;references&quot;&gt;References&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;[1]&lt;/strong&gt; M. Fowler, Improving the Design of Existing Code(2nd Edition). 2018, p. 22.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[2]&lt;/strong&gt; M. Cohn, SUCCEEDING WITH AGILE. 2010, p. 312.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[3]&lt;/strong&gt; Ham Vocke, ‘The Practical Test Pyramid’, 2018. [Online]. Available: &lt;a href=&quot;https://martinfowler.com/articles/practical-test-pyramid.html&quot; target=&quot;_blank&quot;&gt;https://martinfowler.com/articles/practical-test-pyramid.html&lt;/a&gt;. [Accessed: 06 - Feb - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[4]&lt;/strong&gt; SeleniumHQ, ‘Selenium WebDriver’, 2018. [Online]. Available: &lt;a href=&quot;Selenium WebDriver&quot; target=&quot;blank&quot;&gt;https://www.seleniumhq.org/projects/webdriver&lt;/a&gt;. [Accessed: 06 - Feb - 2019]&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Jan 2019 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/javascript/2019/01/14/strategies-to-test-legacy-code.html</link>
        <guid isPermaLink="true">https://marabesi.com/javascript/2019/01/14/strategies-to-test-legacy-code.html</guid>
        
        <category>test,</category>
        
        <category>acceptance,</category>
        
        <category>code,</category>
        
        <category>unit,</category>
        
        <category>suite,</category>
        
        <category>change,</category>
        
        <category>testing,</category>
        
        <category>developer,</category>
        
        <category>class,</category>
        
        <category>refactoring,</category>
        
        <category>software,</category>
        
        <category>refactor,</category>
        
        <category>strategies,</category>
        
        <category>legacy code,</category>
        
        <category>acceptance test,</category>
        
        <category>confidence,</category>
        
        <category>strategy,</category>
        
        <category>slow,</category>
        
        <category>pyramid,</category>
        
        <category>unit test</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>Errors compiling PHP from source on a Raspberry Pi</title>
        <description>&lt;p&gt;The PHP version used is 7.2 directly from the git reository from github. Newer
version might not work as expected.&lt;/p&gt;

&lt;p&gt;The version used to compile is the
&lt;a href=&quot;https://www.raspberrypi.org/downloads/raspbian&quot; target=&quot;_blank&quot;&gt;Raspbian&lt;/a&gt; (Raspbian Stretch
with desktop and recommended software):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Version: November 2018&lt;/li&gt;
  &lt;li&gt;Release date: 2018-11-13&lt;/li&gt;
  &lt;li&gt;Kernel version: 4.14&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;getting-the-source-code&quot;&gt;Getting the source code&lt;/h2&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://github.com/php/php-src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Entering the cloned repository to start the compilation process&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd php-src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chage to the version 7.2&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git tag php-7.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following errors are sequential when trying to install PHP in a Raspberry Pi,
the errors show up in the following commands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;./buildconf&lt;/li&gt;
  &lt;li&gt;./configure&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;error-buildconf-autoconf-out-of-date&quot;&gt;Error (buildconf): autoconf out of date&lt;/h2&gt;

&lt;p&gt;Executed command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./buildconf&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;buildconf: checking installation...
buildconf: autoconf not found.
           You need autoconf version 2.68 or newer installed
           to build PHP from Git.
build/build.mk:36: fallo en las instrucciones para el objetivo 'buildmk.stamp'
make: *** [buildmk.stamp] Error 1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apt-get install autoconf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;success-output&quot;&gt;Success output&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;buildconf: checking installation...
buildconf: autoconf version 2.69 (ok)
rebuilding aclocal.m4
rebuilding configure
rebuilding main/php_config.h.in
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-configure-bison-out-of-date&quot;&gt;Error (configure): bison out of date&lt;/h2&gt;

&lt;p&gt;Executed command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;configure: WARNING: This bison version is not supported for regeneration of the Zend/PHP parsers (found: none, min: 204, excluded: ).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution-1&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install bison
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-configure-rec2c-not-installed&quot;&gt;Error (configure): rec2c not installed&lt;/h2&gt;

&lt;p&gt;Executed command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;checking for re2c... no
configure: error: You will need re2c 0.13.4 or later to generate PHP lexers.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution-2&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install re2c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-configure-libxml2-dev-dependecy-not-installed&quot;&gt;Error (configure): libxml2 dev dependecy not installed&lt;/h2&gt;

&lt;p&gt;Executed command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;checking libxml2 install dir... no
checking for xml2-config path...
configure: error: libxml2 not found. Please check your libxml2 installation.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution-3&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install libxml2-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;error-configure-sqlite3-dev-dependecy-not-installed&quot;&gt;Error (configure): sqlite3 dev dependecy not installed&lt;/h2&gt;

&lt;p&gt;Executed command: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./configure&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;checking for sqlite3 files in default path... not found
configure: error: Please reinstall the sqlite distribution from http://www.sqlite.org
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;solution-4&quot;&gt;Solution&lt;/h3&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install libsqlite3-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;success-output-1&quot;&gt;Success output&lt;/h3&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Generating files
configure: creating ./config.status
creating main/internal_functions.c
creating main/internal_functions_cli.c
+--------------------------------------------------------------------+
| License:                                                           |
| This software is subject to the PHP License, available in this     |
| distribution in the file LICENSE.  By continuing this installation |
| process, you are bound by the terms of this license agreement.     |
| If you do not agree with the terms of this license, you must abort |
| the installation process at this point.                            |
+--------------------------------------------------------------------+

Thank you for using PHP.

config.status: creating php7.spec
config.status: creating main/build-defs.h
config.status: creating scripts/phpize
config.status: creating scripts/man1/phpize.1
config.status: creating scripts/php-config
config.status: creating scripts/man1/php-config.1
config.status: creating sapi/cli/php.1
config.status: creating sapi/phpdbg/phpdbg.1
config.status: creating sapi/cgi/php-cgi.1
config.status: creating ext/phar/phar.1
config.status: creating ext/phar/phar.phar.1
config.status: creating main/php_config.h
config.status: executing default commands
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Sat, 12 Jan 2019 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/iot/raspberrypi/php/2019/01/12/errors-compiling-php-from-source-on-a-raspberry-pi.html</link>
        <guid isPermaLink="true">https://marabesi.com/iot/raspberrypi/php/2019/01/12/errors-compiling-php-from-source-on-a-raspberry-pi.html</guid>
        
        <category>config,</category>
        
        <category>creating,</category>
        
        <category>configure,</category>
        
        <category>version,</category>
        
        <category>buildconf,</category>
        
        <category>install,</category>
        
        <category>command,</category>
        
        <category>libxml,</category>
        
        <category>found,</category>
        
        <category>Solution,</category>
        
        <category>web,</category>
        
        <category>php,</category>
        
        <category>PHP,</category>
        
        <category>source,</category>
        
        <category>php-src,</category>
        
        <category>raspberry pi,</category>
        
        <category>rasp,</category>
        
        <category>compiling,</category>
        
        <category>common erros,</category>
        
        <category>errors,</category>
        
        <category>sqlite3,</category>
        
        <category>bison,</category>
        
        <category>rec2c,</category>
        
        <category>libxml2-dev</category>
        
        
        <category>IoT</category>
        
        <category>raspberrypi</category>
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Introduction to Service Worker</title>
        <description>&lt;p&gt;The following content is inspired by the udacity course with bits from &lt;a href=&quot;#03---references&quot;&gt;other
sources as well&lt;/a&gt;. The main goal is to identify what is a service worker
and what it can offer to incorporate a progressive web app.&lt;/p&gt;

&lt;h1 id=&quot;edit-may-14-2019---madridjs-talk&quot;&gt;Edit May 14, 2019 - MadridJs talk&lt;/h1&gt;

&lt;iframe src=&quot;//speakerdeck.com/player/ebcd7b3fea5744cf8e290a788f48bd68&quot; width=&quot;100%&quot; height=&quot;399&quot; style=&quot;border:0; padding:0; margin:0; background:transparent;&quot; frameborder=&quot;0&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;allowfullscreen&quot; mozallowfullscreen=&quot;true&quot; webkitallowfullscreen=&quot;true&quot;&gt;&lt;/iframe&gt;

&lt;h1 id=&quot;01---offline-and-lie-fi-problem&quot;&gt;01 - Offline and lie-fi problem&lt;/h1&gt;

&lt;p&gt;Service workers improves the user experience in the connectivity aspect.
In the offline, which is the case when the user has no connection at all to the 
internet and the lie-fi, which is a term related to bad connection and high 
latency &lt;strong&gt;[1]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, once is not worse than the other, they are in essence bad for user
experience. Offline means that the user will not receive new data and lie-fi
makes the user disapointed with responses that often tend to show 
the loading progress bar forever.&lt;/p&gt;

&lt;h1 id=&quot;02---service-workers&quot;&gt;02 - Service workers&lt;/h1&gt;

&lt;p&gt;A service worker is a script that sits between the request made by the browser
and the response received by the user &lt;strong&gt;[2][7]&lt;/strong&gt;, like a proxy server.&lt;/p&gt;

&lt;p&gt;The characteritcs that define a service woker are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A isolated script that can’t access the DOM.&lt;/li&gt;
  &lt;li&gt;Intercept requests and decides when to go over the network or send a cached version.&lt;/li&gt;
  &lt;li&gt;Has a defined life cycle, installing, waiting and active.&lt;/li&gt;
  &lt;li&gt;Must have HTTPs. Though, it is allowed to use without on localhost for
development purposes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The simplest service worker can be installed and cache assets to decrease the
bandwith usage. The first part is to define what should be cached,
as in the snippet 1.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//snippet 1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// defines the cache name, this name is going to appear in the dev tools&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// under Application &amp;gt; Cache Storage&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;marabesi.com_v1&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// what to cache, defined by URL, using / is going to cache everything&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assetsToCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// puts everything that maches the assetsToCache into the cache to use &lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// later.&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;install&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assetsToCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache&lt;/code&gt; API was introduced along the service worker
specification &lt;strong&gt;[4]&lt;/strong&gt;, and it is related with the snippets found in
the internet, which verify only if the brower has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serviceWorker&lt;/code&gt;
feature available &lt;strong&gt;[8][9][10]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Once the assets have beend cached, the service worker can start to serve the
cached content. The event &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fetch&lt;/code&gt; is fired when a request is made and the
service worker is active. This event decides to send the
cached content to the user or to go over the network and fetch the data,
as in the snippet 2.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// snippet 2&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// register a callback to respond to each fetch event&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// this event is fired when a request ismade by the browser&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;respondWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// verify if the request exists in the cache&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseToCache&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;responseToCache&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last piece is to register the service worker in the browser, so it can
start to do his job. The recommended is to follow the progressive enhancement approach &lt;strong&gt;[3]&lt;/strong&gt;,
checking if the browser that the user is using supports the service worker, if
not the service worker is ignored.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//snippet 3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// if the serviceWorker property exists in the browser&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// it supports the feature and then registers the script&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/service-worker.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As the approach described so far is an enhancement in the user experience it does 
lack the user control &lt;strong&gt;[5]&lt;/strong&gt;, and there is no way to remove the old cache
once a new verion is available.&lt;/p&gt;

&lt;p&gt;The only way to update the assets is to change the service worker code. The change
can be as small as to change the cache version. In the snippet 1, for instance,
the cache version is set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;marabesi.com_v1&lt;/code&gt;, changing it to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;marabesi.com_v2&lt;/code&gt;
would trigger an update event in the service worker and the content would be
fetched and refresh the cache with the new data.&lt;/p&gt;

&lt;p&gt;Therefore, the service worker does not show the new content automatically, to
show the new content cached by the new service worker, all instances of the
current one must be terminated &lt;strong&gt;[2][6]&lt;/strong&gt;. In this context terminated means, to close the
current page or navigate to a new URL and then come back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-12-02-introduction-to-service-worker/service_worker_flow.png&quot; alt=&quot;Service work lifecycle&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The steps to have a site available offline is done, but with that approach the
cache in the users browser would grow as every change made in the service worker.
To address that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;activate&lt;/code&gt; event is used to remove the old cache when a new
version is available, as in the snippet 4:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;//snippet 4&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;activate&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waitUntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Promise&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;cacheNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;startsWith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;marabesi.com_&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;cacheName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CACHE_NAME&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;caches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cacheName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To address this issue the service worker API offers methods to control it in a
sofisticaded manner. Giving to the user the ability to decide when to
update the local content with the new one. With that the approach used change, from
online first to offline first, starting serving the cached content and 
checking for updates in the background.&lt;/p&gt;

&lt;h1 id=&quot;letting-the-user-take-control&quot;&gt;Letting the user take control&lt;/h1&gt;

&lt;p&gt;To give the user the ability to decide when to replace the current
cached content with the new one, changes need to be made in the service worker
that we created in the previous section.&lt;/p&gt;

&lt;p&gt;So far we used the following events to register the service worker and cache
the assets:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;install&lt;/li&gt;
  &lt;li&gt;fetch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To interact with the user there are more events needed. The missing parts
of our service worker is to identify when an update is available and when
the new installed version is ready for use. The service worker API offer two
events to accomplish that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;updatefound&lt;/li&gt;
  &lt;li&gt;statechange&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those events are related to the service worker but they occurr in diferente objects.
The used script to interact with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;install&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fetch&lt;/code&gt; is the single javascript
file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service-worker.js&lt;/code&gt; (snippet 1).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-12-02-introduction-to-service-worker/service_worker_events.png&quot; alt=&quot;Service worker types of events&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The events &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;updatefound&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;statechange&lt;/code&gt;
are events related to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ServiceWorkerRegistration&lt;/code&gt; object, which is returned 
in the register method.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// snippet 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// setting up the button event and the event to send data from the current page&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// to the service worker&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// a button defined in the HTML&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;.update-button&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// sends a message with a json to the active service worker&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;updateButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;skip&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// setting up the service worker resgistration events&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceWorker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/service-worker.js&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;cm&quot;&gt;/**
         * @var registration ServiceWorkerRegistration
         */&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;updatefound&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;worker&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;registration&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;installing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                &lt;span class=&quot;nx&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;statechange&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;worker&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;installed&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;updateButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;classList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Besides that, the service worker does not have access to the DOM in the page which
makes the approach to interact with the user different. To communicate via 
the current web page to the user the service worker provider a message based
system.&lt;/p&gt;

&lt;p&gt;The main page (the page that has access to the DOM) send the desired message
through the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;postMessage&lt;/code&gt;, then the service worker listens to the
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; event.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// snippet 5&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// listening to data coming from postMessage&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;skipWaiting&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;skipWaiting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The snippet 5 is the last part to give the user the control when the update
should be applied. The following have been achieved:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The site data is cached in the service worker&lt;/li&gt;
  &lt;li&gt;The site is accessible in offline mode&lt;/li&gt;
  &lt;li&gt;The user has the control when to apply the update, but it happens automatically
once the user leaves the site and comes back&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;03---references&quot;&gt;03 - References&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;[1]&lt;/strong&gt; Michael Wales, ‘Offline Web Applications by Google’, 2016. [Online]. Available: &lt;a href=&quot;https://eu.udacity.com/course/offline-web-applications--ud899&quot; target=&quot;_blank&quot;&gt;https://eu.udacity.com/course/offline-web-applications–ud899&lt;/a&gt;. [Accessed: 20 - Dec - 2018]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[2]&lt;/strong&gt; Matt Gaunt, ‘Service Workers: An Introduction’, 2018. [Online]. Available: &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers&quot; target=&quot;_blank&quot;&gt;https://developers.google.com/web/fundamentals/primers/service-worker&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[3]&lt;/strong&gt; W3C, ‘Graceful degradation versus progressive enhancement’, 2015. [Online]. Available: &lt;a href=&quot;https://www.w3.org/wiki/Graceful_degradation_versus_progressive_enhancement&quot; target=&quot;_blank&quot;&gt;https://www.w3.org/wiki/Graceful_degradation_versus_progressive_enhancement&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[4]&lt;/strong&gt; W3C, ‘Service Workers 1 - 
W3C Working Draft, 2 November 2017’, 2017. [Online]. Available: &lt;a href=&quot;https://www.w3.org/TR/service-workers-1/#cache-objects&quot; target=&quot;_blank&quot;&gt;https://www.w3.org/TR/service-workers-1/#cache-objects&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[5]&lt;/strong&gt; Dean Hume, ‘How to display a “new version available” for a Progressive Web App’, 2018. [Online]. Available: &lt;a href=&quot;https://deanhume.com/displaying-a-new-version-available-progressive-web-app&quot; target=&quot;_blank&quot;&gt;https://deanhume.com/displaying-a-new-version-available-progressive-web-app&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[6]&lt;/strong&gt; Jake Archibald, ‘The Service Worker Lifecycle’, 2018. [Online]. Available: &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#aguardando&quot; target=&quot;_blank&quot;&gt;https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#aguardando&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[7]&lt;/strong&gt; T. Ater, Building Progressive Web Apps. 2017, p. 22.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[8]&lt;/strong&gt; Google, ‘Basic Service Worker Sample’, 2016. [Online]. Available: &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/basic/#container&quot; target=&quot;_blank&quot;&gt;https://googlechrome.github.io/samples/service-worker/basic/#container&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[9]&lt;/strong&gt; Mozilla, ‘ServiceWorker’, 2018. [Online]. Available: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker#Examples&quot; target=&quot;_blank&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorker#Examples&lt;/a&gt;. [Accessed: 18 - Jan - 2019]&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[10]&lt;/strong&gt; S. Amarasinghe, Service Worker Development Cookbook. 2016, p. 18.&lt;/p&gt;

&lt;!-- https://jakearchibald.com/2014/offline-cookbook/ --&gt;
</description>
        <pubDate>Sun, 02 Dec 2018 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/javascript/2018/12/02/introduction-to-service-worker.html</link>
        <guid isPermaLink="true">https://marabesi.com/javascript/2018/12/02/introduction-to-service-worker.html</guid>
        
        <category>worker,</category>
        
        <category>service,</category>
        
        <category>event,</category>
        
        <category>user,</category>
        
        <category>function,</category>
        
        <category>cached,</category>
        
        <category>content,</category>
        
        <category>Available,</category>
        
        <category>Accessed,</category>
        
        <category>web,</category>
        
        <category>js,</category>
        
        <category>javascript,</category>
        
        <category>pwa,</category>
        
        <category>service worker,</category>
        
        <category>chrome,</category>
        
        <category>google,</category>
        
        <category>HTML,</category>
        
        <category>cache,</category>
        
        <category>API,</category>
        
        <category>offline,</category>
        
        <category>udacity</category>
        
        
        <category>javascript</category>
        
      </item>
    
      <item>
        <title>SIM800L tracking your IoT device</title>
        <description>&lt;p&gt;After a while testing the &lt;a href=&quot;/post/raspberry/2018/02/07/setting-up-gps-neo6-sensor.html&quot;&gt;GPS NEO6&lt;/a&gt; I ordered a new guy
to play around with GSM connection and GPS at the same time. The sensor this time is the SIM800L, which basically
is an interface between the SIM card and the Arduino Uno (could be any board, not Arduino Uno only).&lt;/p&gt;

&lt;p&gt;The version used is the &lt;em&gt;Arduino Uno&lt;/em&gt;, so everytime you see Arduino in the text I am talking about the Uno version.&lt;/p&gt;

&lt;p&gt;For purpose of test I started using the Raspberry Pi (model B+) board but ended up with Arduino, the switch is given by the
facility of send the skecth out to the Arduino. While in the Raspberry Pi you should wait till the board is up
and running. Further tests can lead me back to the Pi, but for this post the examples will be on Arduino.&lt;/p&gt;

&lt;p&gt;What you is going to see in this post:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#sim800l&quot;&gt;The requirements to use SIM800L&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#wiring&quot;&gt;Setup the wiring&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#sketch-commands-at-101&quot;&gt;Test the serial connection with AT commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#enabling-gsm-location&quot;&gt;Locate(get lat and lnt) the SIM card with AT commands&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References for further reading&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sim800l&quot;&gt;SIM800L&lt;/h2&gt;

&lt;p&gt;The board used is the SIM800L without any specific breakboard or something like that. Newest versions of the SIM like
SIM900 comes with a antenna and a bigger board.&lt;/p&gt;

&lt;p&gt;Besides the board is needed to have a &lt;em&gt;micro SIM&lt;/em&gt; card. In my case I had to use an adapter to transfor the nano SIM I
have into the micro.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://c.mi.com/thread-46072-1-0.html&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2018-02-16-sim800l-tracking-your-iot-device/sim-type.jpeg&quot; alt=&quot;Font: Mi.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Fonte: Mi.com&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT&lt;/strong&gt;: Make sure to have a SIM card with 2G, 3G or 4G anabled (you can test it plugin the SIM card on yout phone
and try to access any web page), and have in hands the APN, the APN user and APN password.&lt;/p&gt;

&lt;h2 id=&quot;wiring&quot;&gt;Wiring&lt;/h2&gt;

&lt;p&gt;This sensor requires just 4 wires to start with, but there is a gap in the voltage that it operates. The following
table holds the pins where the wires should go to.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SIM800L&lt;/th&gt;
      &lt;th&gt;Arduino Uno&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;NET&lt;/td&gt;
      &lt;td&gt;Antenna connection&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VCC&lt;/td&gt;
      &lt;td&gt;5v&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RST&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RX&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TX&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GND&lt;/td&gt;
      &lt;td&gt;GNG&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;To make it easier to understand, the following image illustrates how the wiring should be done.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-02-16-sim800l-tracking-your-iot-device/sim800.png&quot; alt=&quot;SIM800L wiring&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;http://www.lelong.com.my/arduino-sim800l-gprs-gsm-tracking-module-antena-sim-slot-robotedu-183929865-2018-10-Sale-P.htm&quot; target=&quot;_blank&quot;&gt;SIM800L Font: Lelong.my&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;&lt;a href=&quot;http://www.nooelec.com/store/arduino-uno-r3.html&quot; target=&quot;_blank&quot;&gt;Arduino Uno Font: Nooelec&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are planning to use your device for a long time, it is good to mention that
there is an resistor to add and deliver the 4.2v instead of 5v. For that check this &lt;a href=&quot;https://github.com/cristiansteib/Sim800l&quot; target=&quot;_blank&quot;&gt;repo&lt;/a&gt;
and make sure to wire up using the resistor.&lt;/p&gt;

  &lt;p&gt;As this post has the goal to keep as simple as possible, I am not going to use the resitor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;sketch-commands-at-101&quot;&gt;Sketch (commands AT 101)&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;IMPORTANT 2&lt;/strong&gt;: Here I assume that you can compile and run a scketch into the Arduino,
if not, please find out how to to that and come back later.&lt;/p&gt;

&lt;p&gt;Before we go any deeper on the libraries available out there, the proposal here is to upload a simple
sketch to interact with the serial port. The reason behind it is that the SIM800L handles AT (&lt;a href=&quot;https://www.codeproject.com/Articles/85636/Introduction-to-AT-commands-and-its-uses&quot; target=&quot;_blank&quot;&gt;instructions
to command a modem&lt;/a&gt;)
commands into the SIM card, and in order to understand what is going on we need to
understand the AT commands first. The following sketch reads and writes to the serial port.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;SoftwareSerial.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SoftwareSerial&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;gsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Ready to receive commands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;gsm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once we have the sketch up and running in our Arduino, is time to understand the AT commands. The first thing
to send trhough the serial interface is the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AT&lt;/code&gt;. This is the most basic command
to see if the sensor is up and running, if everything is correct an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OK&lt;/code&gt; is printed back.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-02-16-sim800l-tracking-your-iot-device/arduino-serial.png&quot; alt=&quot;AT command&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The next step is to understand what is required to setup the GPRS mode in our SIM card. For that we are
going to rely a lot on the SIM800L official documentation
available &lt;a href=&quot;https://www.elecrow.com/download/SIM800%20Series_AT%20Command%20Manual_V1.09.pdf&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;enabling-gsm-location&quot;&gt;Enabling GSM location&lt;/h2&gt;

&lt;p&gt;By default the SIM cards doesn’t come with any configuration, we should setup manually for every action
we would like to do with it. To enable the tracking (that is our goal) we should do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Enable the GSM location mode&lt;/li&gt;
  &lt;li&gt;Authenticate with the APN&lt;/li&gt;
  &lt;li&gt;Request the data regarding the SIM location&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;To enable the GMS location mode is a matter of sending the correct &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AT&lt;/code&gt; command through the serial.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=3,1,&quot;CONTYPE&quot;,&quot;GPRS&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next step is to authenticate the APN, we do that in four steps, first setting the APN, followed
by the username, the password and finally activate the bearer. Each command should be executed
separately and before execute the next one, macke sure to get an &lt;strong&gt;OK&lt;/strong&gt; response from the serial.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is an website with the possible APNS around the world, if you don’t know which one
is yours, access this &lt;a href=&quot;https://www.hw-group.com/products/HWg-Ares/HWg-Ares_GSM_APN_en.html&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=3,1,&quot;APN&quot;,&quot;{here goes your APN}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the APN replace the text &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{here goes your APN}&lt;/code&gt; with your APN provider.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=3,1,&quot;USER&quot;,&quot;{here goes your username}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the USER replace the text &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{here goes your username}&lt;/code&gt; with your APN username (sometimes it
will be empty, so just leave as it is).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=3,1,&quot;PWD&quot;,&quot;{here goes your password}&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After the PWD replace the text &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;{here goes your password}&lt;/code&gt; with your password (sometimes it
will be empty, so just leave as it is).&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=1,1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By now the led sensor should start blinking more frequently than it used to, it indicates that
a connection has been stablished and now you can communicate freelly with the GSM network. To
guarantee that everything is working as expected, there is one command to retrieve the current
IP in use by the SIM card.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+SAPBR=2,1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command response should be something similar to the figure below, other than that or only &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0.0.0.0&lt;/code&gt; indicates
that something went wrong.&lt;/p&gt;

&lt;p&gt;Finally we are ready to request the latitude and longitude to know where our SIM card is in the world. As you may
have imagined it is done through an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AT&lt;/code&gt; command as well.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;AT+CIPGSMLOC=1,1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It should return an string containing the latitude, longitude, current date, and current time. The figure below
illustrates the response receive in the serial monitor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-02-16-sim800l-tracking-your-iot-device/current-location.png&quot; alt=&quot;Response from SIM800L after requireing the current location&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;edit-04032018&quot;&gt;Edit 04/03/2018&lt;/h2&gt;

&lt;p&gt;During a few tests with the SIM, it turns out that the accuracy in the latitude and longitude is not so good as expected.
Sometimes it gives the same location even with 10 meters of change.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/post/raspberry/2018/02/07/setting-up-gps-neo6-sensor.html&quot; target=&quot;_blank&quot;&gt;Tracking with GPS NEO 6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Subscriber_identity_module&quot; target=&quot;_blank&quot;&gt;SIM (Subscriber Identity Module)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://c.mi.com/thread-46072-1-0.html&quot; target=&quot;_blank&quot;&gt;SIM Card types&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Tutorial/SoftwareSerialExample&quot; target=&quot;_blank&quot;&gt;Arduino Serial&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.codeproject.com/Articles/85636/Introduction-to-AT-commands-and-its-uses&quot; target=&quot;_blank&quot;&gt;AT commands&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.elecrow.com/download/SIM800%20Series_AT%20Command%20Manual_V1.09.pdf&quot; target=&quot;_blank&quot;&gt;SIMCOM AT commands PDF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hw-group.com/products/HWg-Ares/HWg-Ares_GSM_APN_en.html&quot; target=&quot;_blank&quot;&gt;APN providers worldwide&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 16 Feb 2018 22:39:18 +0000</pubDate>
        <link>https://marabesi.com/posts/2018/02/16/sim800l-tracking-your-iot-device.html</link>
        <guid isPermaLink="true">https://marabesi.com/posts/2018/02/16/sim800l-tracking-your-iot-device.html</guid>
        
        <category>SIM,</category>
        
        <category>APN,</category>
        
        <category>web,</category>
        
        <category>arduino,</category>
        
        <category>Arduino,</category>
        
        <category>Uno,</category>
        
        <category>board,</category>
        
        <category>command,</category>
        
        <category>Command,</category>
        
        <category>sim800l,</category>
        
        <category>iot,</category>
        
        <category>tracking,</category>
        
        <category>serial,</category>
        
        <category>Serial,</category>
        
        <category>SAPBR,</category>
        
        <category>gps,</category>
        
        <category>gps neo6,</category>
        
        <category>at,</category>
        
        <category>at commands,</category>
        
        <category>password,</category>
        
        <category>location,</category>
        
        <category>gsm</category>
        
        
        <category>posts</category>
        
      </item>
    
      <item>
        <title>Setting up GPS NEO 6 sensor</title>
        <description>&lt;p&gt;Recently I have had the chance to set up a basic IoT project which consists of localization by GPS.
The decision was to work with the Raspberry board over the arduino based on the number os shields
that arduino would use.&lt;/p&gt;

&lt;p&gt;To get start with we would need a Wi-Fi(or GSM) shield, which on raspberry is just an adapter. The
second point was the MQTT protocol and the code maintenability. Whereas on arduino is just plain C,
with Raspberry we have more options. One could argue that we can use the standard firmata
to avoid using C, but just for clarity this wasn’t the crucial point.&lt;/p&gt;

&lt;p&gt;After deciding which board to use the time was to gather the GPS. As you might have guesses the GPS
NEO 6 was the chose one (most of NEO6 comes with an external antena, but here I used one
with a internal antena).&lt;/p&gt;

&lt;p&gt;In this post you will see the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Wiring up the components&lt;/li&gt;
  &lt;li&gt;How to configure the Raspberry Pi and read data from the GPS&lt;/li&gt;
  &lt;li&gt;Enable the UART mode in a specific GPIO&lt;/li&gt;
  &lt;li&gt;Gotchas, a few tricks and tips to help you mitigate problems&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;important---edit-0501&quot;&gt;IMPORTANT - EDIT 05/01&lt;/h2&gt;

&lt;p&gt;The antenna that comes with this sensor is really cheap and takes time to receive the signal from the satellites.
Make sure to be outside, and with a clear vision from the sky to improve your success of getting a signal.&lt;/p&gt;

&lt;p&gt;The sensor has a PPS indicator (green light), when blinking it indicates that the signal is comming and
therefore you are receiving the correct information. Otherwise the light will keep on, which means that
it is trying to connect.&lt;/p&gt;

&lt;h2 id=&quot;wiring-up&quot;&gt;Wiring up&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;: Before we start, the version of Raspberry Pi that I used is the model 2 B+, but it should
be really simple to adapt for any Pi version.&lt;/p&gt;

&lt;p&gt;The first thing to be in mind is the wiring, be careful while seeting up the wires RX and TX. I just made
a mistake that was plugin TX on TX and RX to RX. To avoid any further erros, the table below
show the pin name (from the GPS NEO 6) and where it should go on the Raspberry Pi.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;GPS NEO 6&lt;/th&gt;
      &lt;th&gt;Raspberry Pi&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RX   -&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;TX - GPIO 15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TX   -&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;RX - GPIO 16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VCC  -&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;3.3v or 5v&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GND  -&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;GND&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The table below was build looking at the &lt;a href=&quot;http://pi4j.com/pins/model-b-plus.html&quot; target=&quot;_blank&quot;&gt;pi4j&lt;/a&gt; project, which has an
image to better illustrate the pins. For now the figure below should do the work.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-02-07-setting-up-gps-neo6-sensor/wires.png&quot; alt=&quot;GPS NEO 6 wires&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you follow everything as described in the table and in the figure, you should see a green light on
the GPS NEO 6. This means that at least the power was plugged correctly. The next step
is to check the RX and TX connections which will send to use the data through the serial port.&lt;/p&gt;

&lt;p&gt;The first test doesn’t need any special software, we are going to connect using the cat command
directly to the serial port.&lt;/p&gt;

&lt;blockquote&gt;

  &lt;p&gt;&lt;em&gt;IMPORTANT&lt;/em&gt;: Before testing the signal from the sensor is needed to convert the GPIO from IN to
UART in order to do that we need the GPIO numbers that we connected our GPS, in our case
it is 15 and 16.&lt;/p&gt;

  &lt;p&gt;Next just type the following command to switch the GPIO mode:&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell gpio mode 15 ALT0; gpio mode 16 ALT0&lt;/code&gt;&lt;/p&gt;

  &lt;p&gt;Doing that will the work, but keep in mind that once you restart the Pi the default configuration
will be restored. The ideal step here is to add this command into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/rc.local&lt;/code&gt;, so
everytime the Pi restarts it will run this command automatically.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Access your Raspberry Pi through SSH or plugin an keyboard and monitor to get to the shell. Once
you are in, type the following command:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo cat&lt;/span&gt; /dev/serial0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything is correct you should see the following response:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.waveshare.com/wiki/UART_GPS_NEO-6M&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://www.waveshare.com/w/upload/b/bb/UART-GPS-NEO-6M-User-Manual-2.png&quot; alt=&quot;Font: Waveshare.com&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Font: Waveshare.com&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The serial port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/serial0&lt;/code&gt; is an alias to the real one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/dev/ttyAMA0&lt;/code&gt;. If for some reason your serial
port is not the same as this post, first find it and replace the serial with the correct one.&lt;/p&gt;

&lt;p&gt;Finally we have everything done to use the GPS daemon and client. If you have a look at the raw
logs from the serial port, the text has an pattern but is difficult to understand and difficult
to interact with (parse and use the data for an application). For that reason the project
&lt;a href=&quot;http://www.catb.org/gpsd&quot; target=&quot;_blank&quot;&gt;GPSD&lt;/a&gt; exists, which is a library to help to communicate with the GPS sensor (
not to mention the amazing interface between the sensor and the client).&lt;/p&gt;

&lt;p&gt;To use it, just run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; command as the following:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install gpsd gpsd-clients
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpsd&lt;/code&gt; is the deamon that runs in the backgroud to fill up the GPS client, without the deamon
is not possible to fetch the data that comes from the GPS. Even if you try to access the client
with the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cgps&lt;/code&gt; it will give you a error message.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pi@raspberrypi:~ &lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cgps
cgps: no gpsd running or network error: &lt;span class=&quot;nt&quot;&gt;-6&lt;/span&gt;, can&lt;span class=&quot;s1&quot;&gt;'t connect to host/port pair
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cgps&lt;/code&gt; is the client that comes from the package &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gpsd-clients&lt;/code&gt; that we’ve installed.&lt;/p&gt;

&lt;p&gt;To prevent the error we need to start the deamon passing as an argument the serial
port in which our GPS is connected to.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpsd /dev/serial0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cgps&lt;/code&gt; should work as a spected now. The picture below ilustrates the result
after invoking the command.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2018-02-07-setting-up-gps-neo6-sensor/cgps.png&quot; alt=&quot;cgps client response&quot; /&gt;&lt;/p&gt;

&lt;p&gt;obs: The response given by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cgps&lt;/code&gt; is a JSON, to understand the content of each key
check out the &lt;a href=&quot;http://www.catb.org/gpsd/gpsd_json.html&quot; target=&quot;_blank&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;gotchas&quot;&gt;Gotchas&lt;/h2&gt;

&lt;p&gt;In my experience the GPS NEO 6 takes a long time to start receiving signal from the satellites accross the earth.
It takes from 30 minutes to 2 hours, when it suposed to be less than 1 minute. Keep in mind that it can happen
to you as well but don’t worry, just wait and keep an eye in the logs.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.instructables.com/id/Raspberry-Pi-the-Neo-6M-GPS&quot; target=&quot;_blank&quot;&gt;RASPBERRY PI &amp;amp; THE NEO 6M GPS&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.catb.org/gpsd&quot; target=&quot;_blank&quot;&gt;gpsd — a GPS service daemon&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 07 Feb 2018 19:30:18 +0000</pubDate>
        <link>https://marabesi.com/post/raspberry/2018/02/07/setting-up-gps-neo6-sensor.html</link>
        <guid isPermaLink="true">https://marabesi.com/post/raspberry/2018/02/07/setting-up-gps-neo6-sensor.html</guid>
        
        <category>gps,</category>
        
        <category>GPS,</category>
        
        <category>NEO,</category>
        
        <category>command,</category>
        
        <category>neo 6,</category>
        
        <category>raspberry,</category>
        
        <category>Raspberry,</category>
        
        <category>pi,</category>
        
        <category>gpsd,</category>
        
        <category>cgps,</category>
        
        <category>sensor,</category>
        
        <category>serial,</category>
        
        <category>uart,</category>
        
        <category>gpio,</category>
        
        <category>GPIO,</category>
        
        <category>iot</category>
        
        
        <category>post</category>
        
        <category>raspberry</category>
        
      </item>
    
      <item>
        <title>30 days of VIM - One week after</title>
        <description>&lt;p&gt;It’s been one week since I adopted vim as my main editor, and this is the second
post about this journey. If you haven’t read the first post yet, click
&lt;a href=&quot;/thoughts/2018/01/22/30-days-of-vim.html&quot;&gt;here&lt;/a&gt; and be happy.&lt;/p&gt;

&lt;h2 id=&quot;first-impressions&quot;&gt;First impressions&lt;/h2&gt;

&lt;p&gt;I feel like I have the control over my editor and the navigation is REALLY fast with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;w&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;e&lt;/code&gt; letters.
The key challenge here (I believe, and I haven’t achieved yet) is to move the navigation from the key
arrows (up, down, left and right) to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;k&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;j&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;h&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l&lt;/code&gt;. As it seems to be weird at first the book
&lt;a href=&quot;https://pragprog.com/book/dnvim2/practical-vim-second-edition&quot; target=&quot;_blank&quot;&gt;Practical Vim&lt;/a&gt; from Drew Neil in it’s
chapter 8 says that using those keys improves the productivity as your hand won’t leave the home row.&lt;/p&gt;

&lt;p&gt;Besides Drew’s book, vimtutor, &lt;a href=&quot;https://vim-adventures.com&quot; target=&quot;_blank&quot;&gt;vim adventures&lt;/a&gt; and
&lt;a href=&quot;https://vim.swaroopch.com&quot; target=&quot;_blank&quot;&gt;A byte of vim&lt;/a&gt; encorages the same approach.&lt;/p&gt;

&lt;h2 id=&quot;searching&quot;&gt;Searching&lt;/h2&gt;

&lt;p&gt;As I can’t use the home row to navigate yet, to search a string in a file, I would say, is one of the
best things to use in vim (which I’ve been using a lot). VScode uses the combination of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD + F&lt;/code&gt;
on MAC, while Vim uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; followed by the desired string.&lt;/p&gt;

&lt;p&gt;In the normal mode, just press the key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; and type what you want, once finished type enter to confirm
the serach. Vim will send the cursor to the first ocurrence in the file. To go through the next occurence
just press &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;n&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The second type of search is a bit trickier compared to searching for a string in the current file.
Vim has different approachs to search a string through files and directories, for me,
&lt;a href=&quot;http://vim.wikia.com/wiki/Find_in_files_within_Vim&quot; target=&quot;_blank&quot;&gt;vimgrep&lt;/a&gt; is the one I ended up using the most.&lt;/p&gt;

&lt;p&gt;VScode turns it simpler than vim though, you just type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD + SHIFT + F&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;workspaces-and-vim-gui&quot;&gt;Workspaces and vim GUI&lt;/h2&gt;

&lt;p&gt;Vim runs directly from the terminal, just open a new window and that’s it. Though it can be a bit
limitating, so for every new project a new window is required. As I don’t like to have a bunch of
terminals openend I jus tried to find something that would fit for me.&lt;/p&gt;

&lt;p&gt;The first shot was to find a Mac GUI for vim. The projec &lt;a href=&quot;https://github.com/macvim-dev/macvim&quot; target=&quot;_blank&quot;&gt;Mac vim&lt;/a&gt;
is the most popular, with more than 3k stars but unfortunatelly I couldn’t stick with it.&lt;/p&gt;

&lt;p&gt;The second solution that I found is &lt;a href=&quot;https://github.com/tmux/tmux/wiki&quot; target=&quot;_blank&quot;&gt;TMUX&lt;/a&gt;, which I am using right now.
The good part is that I can divide my terminal in as many part as I want and create new windows
inside the existing one.&lt;/p&gt;

&lt;p&gt;Finally the &lt;a href=&quot;http://vim.wikia.com/wiki/Recording_keys_for_repeated_jobs&quot; target=&quot;_blank&quot;&gt;recording&lt;/a&gt; feature is amazing.
It allows you to record a sequence of commands to repeat it later.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;For now the biggest change is the workspace shift. Which on VScode I was used to just drag as many folders
as I want, save the workspace, and open it again later. The second thing I miss the most is the auto complete.
Vim has plugins to auto complete as you type, but at least in my case it was a bit slow, I decided to
go without it.&lt;/p&gt;

&lt;p&gt;It turns out that is a good way to test your knowledge in the language that you are familiar with, I haven’t
had any major problems. If I am not sure about a function in PHP for example, I just go to php.net, the same
applies to Javascript, I just go to the MDN documentation and find what I need.&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Jan 2018 22:30:18 +0000</pubDate>
        <link>https://marabesi.com/thoughts/2018/01/29/30-days-of-vim-1-week-after.html</link>
        <guid isPermaLink="true">https://marabesi.com/thoughts/2018/01/29/30-days-of-vim-1-week-after.html</guid>
        
        <category>Vim,</category>
        
        <category>week,</category>
        
        <category>find,</category>
        
        <category>VScode,</category>
        
        <category>book,</category>
        
        <category>vim,</category>
        
        <category>text editor,</category>
        
        <category>a byte of vim,</category>
        
        <category>vim adventures,</category>
        
        <category>practical vim</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>30 days of VIM</title>
        <description>&lt;p&gt;I’ve been looking at vim for quite a while, and now I decided to take it serious.
The goal of this series of posts is to write at least one tip that I learnerd along the way
using vim as my main editor.&lt;/p&gt;

&lt;p&gt;I started with netbeans, which was a good IDE to write PHP code and Java at the same time.
After that I switched to PHPStorm, which is a great IDE to code PHP (or should I say web code? -
PHPStorm gives an amazing support to write HTML and Javascript as well).&lt;/p&gt;

&lt;p&gt;Finally I moved to Vscode, I like to think of Vscode as the best of the PHPStorm combined
with a high customization editor. One of the bad sides of PHPStorm (and here I see as a lack of
options to all IDEs of JetBrains) is the lack of appearance customization.&lt;/p&gt;

&lt;h2 id=&quot;challenges&quot;&gt;Challenges&lt;/h2&gt;

&lt;p&gt;Vim is known mainly to improve productivity in the daily basis of a developer, but is also true
that the switch is not easy. Personally the biggest challenge is going to be to adapt in leaving
the mouse alone and do all by the keyboard.&lt;/p&gt;

&lt;p&gt;The second is the multi workspace that I am used to. Vscode has lauched it’s multi workspace since
the version &lt;a href=&quot;https://code.visualstudio.com/updates/v1_14#_preview-multi-root-workspaces&quot; target=&quot;_blank&quot;&gt;1.14 (Insiders build)&lt;/a&gt; and
&lt;a href=&quot;https://code.visualstudio.com/updates/v1_18#_support-for-multi-root-workspaces&quot; target=&quot;_blank&quot;&gt;1.8 (Stable build)&lt;/a&gt;,
which I rely a lot on.&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;Here I am going to mention only two, as this post is about getting started with vim (later posts will come
with even more resources).&lt;/p&gt;

&lt;p&gt;During this first research to use Vim, I found good resources and even puzzles which is played with vim, in order
to remember the key combination that perform a sort of action. If this is your style just check
&lt;a href=&quot;https://vimgolf.com&quot; target=&quot;_blank&quot;&gt;Vimgolf&lt;/a&gt;. People around the world post the quickest way of complete an action
with vim there.&lt;/p&gt;

&lt;p&gt;Besides puzzles, there is a wonderful site to getting started with vim configuration. Vim is also known
to be as customizable as it can be, which means to create our own key bindings, change the font color
and much more (it is very common to see others people &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.vimrc&lt;/code&gt; file). For that I found
&lt;a href=&quot;http://www.vim-bootstrap.com&quot; target=&quot;_blank&quot;&gt;Vim bootstrap&lt;/a&gt;. Which comes with a lot of pre defined configurations to help
you out, just chose which language you’re going to use and download the file.&lt;/p&gt;

</description>
        <pubDate>Mon, 22 Jan 2018 01:39:18 +0000</pubDate>
        <link>https://marabesi.com/thoughts/2018/01/22/30-days-of-vim.html</link>
        <guid isPermaLink="true">https://marabesi.com/thoughts/2018/01/22/30-days-of-vim.html</guid>
        
        <category>web,</category>
        
        <category>vim,</category>
        
        <category>Vim,</category>
        
        <category>PHPStorm</category>
        
        <category>code,</category>
        
        <category>Vscode,</category>
        
        <category>write,</category>
        
        <category>IDE,</category>
        
        <category>editor,</category>
        
        <category>PHP,</category>
        
        <category>text editor,</category>
        
        <category>vimgolf,</category>
        
        <category>phpstorm,</category>
        
        <category>vscode</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>Introduction to Easy CRUD - Laravel</title>
        <description>&lt;p&gt;Latelly I had the opportunity to implement a basic CMS in the project that I was
working on, unfortunatelly I had the change but not the time needed to achieve that.&lt;/p&gt;

&lt;p&gt;What I was looking for:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The package must operate Create, Read, Update and Delete operations&lt;/li&gt;
  &lt;li&gt;The package must have a dashboard&lt;/li&gt;
  &lt;li&gt;The package must use Laravel models&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Besides that the perfect project would be the one that I could use all the models and
the existing database tables of my project.&lt;/p&gt;

&lt;p&gt;Given the scenario I started to search packages that could have something like that, and
I found a few interesting ones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/appzcoder/crud-generator&quot; target=&quot;_blank&quot;&gt;CRUD Generator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/crocodic-studio/crudbooster&quot; target=&quot;_blank&quot;&gt;CRUD Booster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both are the most famous CRUD packages in the Laravel world. They are amazing and
have many features ready to use. But as it looks really good, for me it was too much and
both needs to handle with database migrations - probably it is something
to store user preferences or something like that.&lt;/p&gt;

&lt;p&gt;As I was testing those packages I notice that the steup was not so hard, actually 
it was simpler than I thought but I wasn’t able to use the database tables 
that I already had in my Laravel project.&lt;/p&gt;

&lt;h2 id=&quot;easy-crud&quot;&gt;Easy CRUD&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/marabesi/laravel-easy-crud&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2017-09-22-easy-crud/easycrud.png&quot; alt=&quot;Easy CRUD github&quot; title=&quot;Easy CRUD project preview&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Well, as I couldn’t find a project that fits my need I decided to start
Easy CRUD. Easy CRUD is a project that generates a dashboard and CRUD operations
to Laravel models.&lt;/p&gt;

&lt;p&gt;The cool thing is that you don’t need anything extra such as migrations, Easy
CRUD uses the existing Laravel project estructure.&lt;/p&gt;

&lt;p&gt;The focus of the project is to make easy handling existing data in your projects.
Nothing specific with business logic but rather, easily create, update and even 
delete existing data.&lt;/p&gt;

&lt;p&gt;Key Easy CRUD features:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Manage data without changing database structure&lt;/li&gt;
  &lt;li&gt;Use Laravel Models to perform CRUD operations&lt;/li&gt;
  &lt;li&gt;Middlewares are allowed to control access to Easy CRUD routes&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 21 Sep 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2017/09/21/easy-crud.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2017/09/21/easy-crud.html</guid>
        
        <category>laravel,</category>
        
        <category>crud,</category>
        
        <category>CRUD,</category>
        
        <category>project,</category>
        
        <category>Laravel,</category>
        
        <category>Easy,</category>
        
        <category>database,</category>
        
        <category>package,</category>
        
        <category>operations,</category>
        
        <category>models,</category>
        
        <category>data,</category>
        
        <category>migrations,</category>
        
        <category>php,</category>
        
        <category>easy crud,</category>
        
        <category>packages,</category>
        
        <category>packagist,</category>
        
        <category>php</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>PHPUnit coverage on vagrant</title>
        <description>&lt;p&gt;Vagrant is the official tool that Laravel supports in the development stage, 
which means that you can use vagrant and Homestead to create a simple and 
powerful environment.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/laravel/homestead&quot; target=&quot;_blank&quot;&gt;Homestead(a box to use with vagrant)&lt;/a&gt; has
 been created to give everything that developers need to run Laravel. Web server, 
 PHP (including extensions), database, cache drivers and so on.&lt;/p&gt;

&lt;p&gt;To run vagrant you must use a virtualization provider, such as virtualbox and
vmware.&lt;/p&gt;

&lt;h1 id=&quot;installing-phpunit&quot;&gt;Installing PHPUnit&lt;/h1&gt;

&lt;p&gt;Homestead doesn’t come with any specific PHPUnit version, which means that
you must download yourself the desired version. To keep this post as simple
as possible, we are going to consider that the PHPunit is not installed and we are going to use
composer to install it.&lt;/p&gt;

&lt;p&gt;In an empty directory, create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;composer.json&lt;/code&gt; file with the following content:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vendor/package&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;phpunit coverage with homestead&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;require-dev&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;phpunit/phpunit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;4.8.*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;composer install&lt;/code&gt;. The command will take some time, and
when it finishes you will have a  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vendor&lt;/code&gt; folder inside the current directory.&lt;/p&gt;

&lt;h1 id=&quot;running-phpunit&quot;&gt;Running PHPUnit&lt;/h1&gt;

&lt;p&gt;Finally we can run PHPUnit. Normally we would run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;phpunit tests/&lt;/code&gt; but
as our focus here is to generate the coverage for the source code, we are
going to add an extra argument.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;phpunit tests/ --coverage-html coverage
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The tests will run normally, but a warning will show up. PHPUnit will complain
about the xdebug extension. The extension comes disabled because of performance.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PHPUnit 4.8.36 by Sebastian Bergmann and contributors.
Warning:        The Xdebug extension is not loaded
                No code coverage will be generated.



Time: 781 ms, Memory: 4.00MB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To fix that is simple, homestead comes with the extension already, we just 
need to activate it. The following command enables the xdebug extension
in the CLI mode:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ln -s /etc/php/7.1/mods-available/xdebug.ini /etc/php/7.1/cli/conf.d/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, try to run PHPunit again, and the message should disappear.&lt;/p&gt;

&lt;h1 id=&quot;a-few-considerations-before-we-go&quot;&gt;A few considerations before we go&lt;/h1&gt;

&lt;p&gt;You may have noticed that the command in the previous section uses PHP 7.1,
which might not be true for you. As homestead supports various PHP versions
you must double check which is the one you want.&lt;/p&gt;

&lt;p&gt;Of the most cases, you will change only the version in the command.&lt;/p&gt;

&lt;p&gt;PHP 5.6&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ln -s /etc/php/5.6/mods-available/xdebug.ini /etc/php/5.6/cli/conf.d/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PHP 7.0&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ln -s /etc/php/7.0/mods-available/xdebug.ini /etc/php/7.0/cli/conf.d/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The thing to take home here is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xdebug.ini&lt;/code&gt; file. If you know where it is
just make a symbolic link to the CLI folder.&lt;/p&gt;
</description>
        <pubDate>Fri, 08 Sep 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2017/09/08/phpunit-coverage-on-vagrant.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2017/09/08/phpunit-coverage-on-vagrant.html</guid>
        
        <category>vagrant,</category>
        
        <category>laravel,</category>
        
        <category>environment,</category>
        
        <category>php,</category>
        
        <category>tip,</category>
        
        <category>PHPUnit,</category>
        
        <category>run,</category>
        
        <category>coverage,</category>
        
        <category>xdebug,</category>
        
        <category>PHP,</category>
        
        <category>extension,</category>
        
        <category>Homestead,</category>
        
        <category>composer,</category>
        
        <category>version</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Queues and slow jobs with Laravel</title>
        <description>&lt;p&gt;Queues are commonly used on a daily basis of software development, even the IoT world
has an specific protocol that implements this concept. Laravel does
the same providing developers with an amazing API.&lt;/p&gt;

&lt;p&gt;Here, we are going to focus on the theory and practice itself being
independent of any vendor such as Amazon or Beanstalkd, for that
you can check &lt;a href=&quot;https://laravel.com/docs/queues&quot; target=&quot;_blank&quot;&gt;Laravel’s documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;basics&quot;&gt;Basics&lt;/h2&gt;

&lt;p&gt;The first thing to notice is how Laravel handles the configuration part,
as usual the configuration part is in the &lt;strong&gt;config&lt;/strong&gt; folder, the file queue.php
is the place to set up the details of our service.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    |--------------------------------------------------------------------------
    | Default Queue Driver
    |--------------------------------------------------------------------------
    |
    | Laravel's queue API supports an assortment of back-ends via a single
    | API, giving you convenient access to each back-end using the same
    | syntax for each one. Here you may set the default queue driver.
    |
    | Supported: &quot;sync&quot;, &quot;database&quot;, &quot;beanstalkd&quot;, &quot;sqs&quot;, &quot;redis&quot;, &quot;null&quot;
    |
    */&lt;/span&gt;

    &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'QUEUE_DRIVER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    |--------------------------------------------------------------------------
    | Queue Connections
    |--------------------------------------------------------------------------
    |
    | Here you may configure the connection information for each server that
    | is used by your application. A default configuration has been added
    | for each back-end shipped with Laravel. You are free to add more.
    |
    */&lt;/span&gt;

    &lt;span class=&quot;s1&quot;&gt;'connections'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;

        &lt;span class=&quot;s1&quot;&gt;'sync'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sync'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

        &lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'table'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'retry_after'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

        &lt;span class=&quot;s1&quot;&gt;'beanstalkd'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'beanstalkd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'host'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'retry_after'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

        &lt;span class=&quot;s1&quot;&gt;'sqs'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sqs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'key'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'your-public-key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'secret'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'your-secret-key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'prefix'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'https://sqs.us-east-1.amazonaws.com/your-account-id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'your-queue-name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'region'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'us-east-1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

        &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'driver'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'redis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'connection'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'queue'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'retry_after'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/*
    |--------------------------------------------------------------------------
    | Failed Queue Jobs
    |--------------------------------------------------------------------------
    |
    | These options configure the behavior of failed queue job logging so you
    | can control which database and table are used to store the jobs that
    | have failed. You may change them to any database / table you wish.
    |
    */&lt;/span&gt;

    &lt;span class=&quot;s1&quot;&gt;'failed'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'database'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'DB_CONNECTION'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'table'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'failed_jobs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The dotenv approach used is the best thing of it, as you could see
the configuration file is almost enteirely driven by it. sync is the default
driver to use queues, which means that Laravel won’t use any queue at all, it will
just run the code synchronously as it runs normally.&lt;/p&gt;

&lt;p&gt;The first change is not in this file, it is in the .env file, created automatically 
when Laravel is installed, we are going to use the database drive.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; QUEUE_DRIVER=database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cool, the next thing to do is to create the necessary tables to handle the queue.
Laravel has an Artisan helper to make it for us, when the database is properly configured,
go in your terminal and run the folowing code:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan queue:table
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Artisan command will genenrate a migration file, which  contains the table struture,
then we need to execute the migrate command to create the table in our database&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan migrate
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;creating-services&quot;&gt;Creating services&lt;/h2&gt;

&lt;p&gt;The most common example is to send an email through the queue system. If you are wondering
why, the answer is simple. Queues give a friedly feedback to the user, which means that 
they will receive an answer as fast as possible while the applicationis still working in the background.&lt;/p&gt;

&lt;p&gt;For this reason Laravel has a few methods that work great with sending email&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;App\Http\Controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmailController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;Mail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;later&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'welcome.blade'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Email sent!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$message&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my@email.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Email has been sent successfully!'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code above ilustrates how would it be to send an email using the queue, usually to send emails we invoke the method
&lt;strong&gt;send&lt;/strong&gt;, but the Laravel documentation gives to us a good reason to queue:&lt;/p&gt;

&lt;p&gt;“Since sending email messages can drastically lengthen the response time of your application, many developers choose to 
queue email messages for background sending. Laravel makes this easy using its built-in unified queue API.” - &lt;a href=&quot;https://laravel.com/docs/5.4/mail#configuring-the-view&quot; target=&quot;_blank&quot;&gt;Laravel docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you didn’t notice, the method invoked here is the later, and its first argument is how many seconds it should be delayed.
In our case we are going to send the email after 10 seconds, but if you run this code you will immediately see the message: 
“Email has been sent successfully!”.&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Jun 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2017/06/21/queues-and-slow-jobs-with-laravel.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2017/06/21/queues-and-slow-jobs-with-laravel.html</guid>
        
        <category>queue,</category>
        
        <category>Laravel,</category>
        
        <category>database,</category>
        
        <category>default,</category>
        
        <category>email,</category>
        
        <category>table,</category>
        
        <category>send,</category>
        
        <category>file,</category>
        
        <category>sync,</category>
        
        <category>jobs,</category>
        
        <category>failed,</category>
        
        <category>configuration,</category>
        
        <category>Queues,</category>
        
        <category>queues,</category>
        
        <category>laravel,</category>
        
        <category>quickbooks,</category>
        
        <category>php</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Custom validator with Laravel 5 + (5.0, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8 and 6.0)</title>
        <description>&lt;p&gt;Obs: This post assumes that you understand the following topics within the
Laravel framework:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Routers and controllers.&lt;/li&gt;
  &lt;li&gt;Using default validator rules.&lt;/li&gt;
  &lt;li&gt;What is a service provider and how to use them.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;using-built-in-validator-rules&quot;&gt;Using built-in validator rules&lt;/h2&gt;

&lt;p&gt;Laravel comes with powerful features to validate your data, the official documentation has tons of examples to use. Usually the validation is really straight forward, it takes a request as parameter and the second parameter is an array with all the rules to be validated.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;App\Http\Controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;cd&quot;&gt;/**
     * @param Request $request data to be validated
     */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// array key represets the field from the request to validate&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// the array value is which validation rule should be applied&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'author'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|min:3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The goodness about that is if any rule fails, Laravel will return a response with all errors that occurred within the messages.&lt;/p&gt;

&lt;p&gt;Though, it is common to have custom rules when submitting data to any application.&lt;/p&gt;

&lt;p&gt;For that Laravel provide us with a simple and powerful interface, the first thing is to extend the Validator class from Laravel framework.&lt;/p&gt;

&lt;h2 id=&quot;creating-a-custom-validator-class&quot;&gt;Creating a custom validator class&lt;/h2&gt;

&lt;p&gt;The first thing is to create new class and extends the Laravel Validator
(a custom validator is a class anywhere in your project).&lt;/p&gt;

&lt;p&gt;The second thing to have a look, is the convention name of each method. You must use the &lt;em&gt;validate&lt;/em&gt; prefix, this is a way to tell Laravel that this method can be used to validate data.&lt;/p&gt;

&lt;p&gt;The Laravel Framework itself uses this approach, the class &lt;a href=&quot;https://laravel.com/api/5.2/Illuminate/Validation/Validator.html&quot; target=&quot;_blank&quot;&gt;Validator&lt;/a&gt; brings the core validation from the Framework such as: required, between a value, min value, max value and so on.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;App\Validators&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Illuminate\Validation\Validator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyCustomRule&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Validator&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validateSpecificValidation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$attribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// do your work here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Notice that we are under the namespace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;App\Validators&lt;/code&gt; which means that for this example we have a folder to store all validators.&lt;/p&gt;

&lt;p&gt;Now before we use the validator class that we just created, one more step is needed. Laravel doesn’t know about our validation class, and we tell it using a &lt;strong&gt;ServiceProvider&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;registering-the-new-validator-with-service-provider&quot;&gt;Registering the new validator with Service Provider&lt;/h2&gt;

&lt;p&gt;All parameters that are required by the constructor are from the Laravel validator class, so as we are
extending it we must pass all arguments as well (Thanks Laravel D.I).&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;App\Providers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;App\Validators\MyCustomRule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Illuminate\Support\ServiceProvider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppServiceProvider&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServiceProvider&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;boot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;validator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resolver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyCustomRule&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$translator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$messages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So now we are all set to use our custom validator, and in order to do that is
a matter of adding the rule we’ve created into the array rules given to the
validate method.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;App\Http\Controllers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Illuminate\Http\Request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;BookController&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Controller&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Request&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'title'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'specific_validation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s1&quot;&gt;'author'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'required|min:3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we have changed the required rule by the one we’ve created. The name is the same of our method, but in &lt;a href=&quot;https://en.wikipedia.org/wiki/Snake_case&quot; target=&quot;_blank&quot;&gt;snake case&lt;/a&gt; and without the &lt;em&gt;validate&lt;/em&gt; prefix.&lt;/p&gt;

&lt;h2 id=&quot;important-tips-to-be-aware-of&quot;&gt;Important tips to be aware of&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;We used the class AppServiceProvider to register our validator, it is practical and fast. But depending on the situation you might want to create your own service provider to register those classes.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;empty-fields-trap&quot;&gt;Empty fields trap&lt;/h2&gt;

&lt;p&gt;All custom validations do not accept empty fields by default. If you want to have it you must override the property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$implicitRules&lt;/code&gt; otherwise your validation method will not be fired.&lt;/p&gt;
</description>
        <pubDate>Wed, 31 May 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2017/05/31/laravel-custom-validator.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2017/05/31/laravel-custom-validator.html</guid>
        
        <category>php,</category>
        
        <category>laravel,</category>
        
        <category>Laravel,</category>
        
        <category>class,</category>
        
        <category>validate,</category>
        
        <category>request,</category>
        
        <category>Request,</category>
        
        <category>function,</category>
        
        <category>required,</category>
        
        <category>validation,</category>
        
        <category>Validator,</category>
        
        <category>namespace,</category>
        
        <category>right way,</category>
        
        <category>models,</category>
        
        <category>framework,</category>
        
        <category>laracast,</category>
        
        <category>laranews,</category>
        
        <category>validator,</category>
        
        <category>custom validator,</category>
        
        <category>laravel validator extend,</category>
        
        <category>laravel custom validator class,</category>
        
        <category>laravel validation service provider,</category>
        
        <category>laravel extend validator,</category>
        
        <category>laravel custom validation,</category>
        
        <category>laravel validator::extend</category>
        
        <category>laravel 5.2,</category>
        
        <category>laravel 5.3,</category>
        
        <category>laravel 5.4,</category>
        
        <category>laravel 5.5,</category>
        
        <category>laravel 5.6,</category>
        
        <category>laravel 5.7,</category>
        
        <category>laravel 6.0,</category>
        
        <category>laravel 6,</category>
        
        <category>rules</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Is specification important?</title>
        <description>&lt;p&gt;Recently during my daily work I started to think about software specifications. The development world
is living in the agile era and is even more aggressive with dead and quality.&lt;/p&gt;

&lt;p&gt;There are two extreme scenarios which we can begin with, the first is a team where developers don’t have documentation
at all. The second is the poor documentation, which means that developers usually have something to guide them
when coding, but a lot of questions appear during the development process.&lt;/p&gt;

&lt;p&gt;The best scenario is obviously to have a great document with all the details needed and no change request from our customers.
Basically this is impossible to have. Requirements lead the necessity of the software, do your client understand that?
Programmers often hear “but it is simply, you can do it in 5 minutes”.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Understanding the requirements of a problem is among the most difficult
  tasks that face a software engineer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;Software Engineering: A Practitioner’s Approach - Pressman Roger S. Pressman p. 119, Chapter 5&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The client is used to his business rules and his needs, he deals with it everyday on the daily bases and probably 
teach others as well, software is made to solve common problems. It turns in a problem when the client doesn’t understand it, and is
not hard to see documentations written like “this page is going to show the list of users”. Step back for one minute,
 can you see anything wrong? I can imagine at least the following questions:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;what kind of users?&lt;/li&gt;
  &lt;li&gt;what are the needed fields to show?&lt;/li&gt;
  &lt;li&gt;Should we paginate the result? If yes, how many users should we display by default, maybe 10? 20?&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Programmers also have their debit on this, usually the normal approach is jump right in the code before fully understand
the problem.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Designing and building computer software is challenging, creative, and just plain
  fun. In fact, building software is so compelling that many software developers want
  to jump right in before they have a clear understanding of what is needed.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;Software Engineering: A Practitioner’s Approach - Pressman Roger S. Pressman p. 120, Chapter 5&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;In the end all this process becomes a cycle without a end, wrong documentation leads to a wrong implementation
which makes customers unhappy.&lt;/p&gt;

&lt;h2 id=&quot;thinking-in-long-term&quot;&gt;Thinking in long term&lt;/h2&gt;

&lt;p&gt;In the end the solution seems to be easy, isn’t it? To fix the documentation problem we could add one more step before
implement the code. The flow would be to create the specification, read it, understand and remove possible gaps, and after that, 
start the coding.&lt;/p&gt;

&lt;p&gt;This approach works fine when there is a time to implement and do everything as planned and you have the customer working with you. 
The downside is when the customer tries to workaround the flow, adding pressure to delivery what hasn’t been documented and
the lack of technical understanding can lead to a pressure even worse.(In the end everything is fast and easy to implement, right?)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Working software over comprehensive documentation&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small&gt;Working software over comprehensive documentation - &lt;a href=&quot;http://agilemanifesto.org/iso/en/manifesto.html&quot; target=&quot;_blank&quot;&gt;Agile manifesto&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Nowadays the agile term miss understood and miss spread by a lot of professionals on the market is avoiding the 
real needs behind building a real software.&lt;/p&gt;

&lt;p&gt;Working software is always preferred than documentation, in the end we are programmers and love code, but the things 
start to be more complicated when we have the following items to deal with, which start to not bring any value
to the customer&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Working remotely
    &lt;ul&gt;
      &lt;li&gt;To work software over documentation the pre-requisite is to have the customer that you’re working for 
always available, otherwise there is no meaning start coding. How will you ask possible questions?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;client without technical knowledge
    &lt;ul&gt;
      &lt;li&gt;Following development without any flow, brings to the customer the wrong feeling that software is build
  as he wants to.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Different languages
    &lt;ul&gt;
      &lt;li&gt;The documentation is the bridge between the customer and the real implementation is easier to
  change something in the earlier stages.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;in-the-end-the-money-is-the-ruler&quot;&gt;In the end, the money is the ruler&lt;/h2&gt;

&lt;p&gt;I’ve seen the best professionals in the market get fired even when following the best practices, even more the startup
wave is bringing a new concept of software, where the fast and working is what matters.&lt;/p&gt;

&lt;p&gt;All in all I believe is a matter of thinking carefully about each aspect when building software, from the documentation
to the final user.&lt;/p&gt;

</description>
        <pubDate>Fri, 31 Mar 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2017/03/31/is-specification-important.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2017/03/31/is-specification-important.html</guid>
        
        <category>documentation,</category>
        
        <category>end,</category>
        
        <category>customer,</category>
        
        <category>understand,</category>
        
        <category>building,</category>
        
        <category>Pressman,</category>
        
        <category>client,</category>
        
        <category>problem,</category>
        
        <category>wrong,</category>
        
        <category>developers,</category>
        
        <category>questions,</category>
        
        <category>implement,</category>
        
        <category>specification,</category>
        
        <category>business,</category>
        
        <category>software</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Intel Galileo and Debian</title>
        <description>&lt;p&gt;It’s been a while since we have Intel Galileo board in the market as well as Intel Galileo Gen2, which is a version
with performance improvements.&lt;/p&gt;

&lt;p&gt;Yocto is the official Linux distribution that Intel has chosen to create a full environment where makers can
build awesome IoT projects.&lt;/p&gt;

&lt;p&gt;Unfortunately Yocto does not have a easy learning curve, most of the packes are not up to date and the software
repositories offer are restricted.&lt;/p&gt;

&lt;p&gt;the community as developed other ways to get a Linux distribution running, such as Debian and Ubuntu. Both are used worldwide
and is easy to get started.&lt;/p&gt;

&lt;p&gt;I struggled in finding the correct version to be used in the Galileo Gen2 and I fell that others will too, for this reason 
I’e written a post in how to use a Debian distribution with Intel Galileo Gen2.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-image&quot;&gt;Getting the image&lt;/h2&gt;

&lt;p&gt;The first result when searching for the term &lt;a href=&quot;https://sourceforge.net/p/galileodebian/wiki/Home&quot; target=&quot;_blank&quot;&gt;“galileo and debian” is a sourceforge link to download the image&lt;/a&gt;
and a few references to read about assembling the image and expand the SD Card size.&lt;/p&gt;

&lt;p&gt;Grab the latest link from the image list, download the image called &lt;strong&gt;galileo.img_v.1.0.0.7z&lt;/strong&gt;, in case of not found or any error
I’ve uploaded my own &lt;a href=&quot;https://drive.google.com/file/d/0B8eXZIvTLcpjdlNKRDdYVGVWRWs/view?usp=sharing&quot; target=&quot;_blank&quot;&gt;image on google drive&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Use the credential “user” and the password “user”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The next step will be to create a bootable SD Card within the Debian image, as Intel provide us a good tutorial to achieve this
 I’m not going to focus on installing the image. Visit this &lt;a href=&quot;https://software.intel.com/en-us/get-started-galileo-linux-step1&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt; to instructions in how to setup the image.&lt;/p&gt;

&lt;h2 id=&quot;issues-found-while-using-debian-on-intel-galileo&quot;&gt;Issues found while using Debian on Intel Galileo&lt;/h2&gt;

&lt;h3 id=&quot;issue-1-unsolved&quot;&gt;Issue 1 (unsolved)&lt;/h3&gt;

&lt;p&gt;The first big issue was to get the SSH running since the error message “[   88.235310] sshd[2303]: segfault at b7118c7d ip b70f3539 sp bfd9ac90 error ffff0006 in libpthread-2.19.so[b70ed000+17000]” was shown
every time a SSH connection was made.&lt;/p&gt;

&lt;p&gt;The first approach was to remove the openssh-server and reinstall it, but the error persists.&lt;/p&gt;

&lt;h3 id=&quot;issue-2-solved&quot;&gt;Issue 2 (solved)&lt;/h3&gt;

&lt;p&gt;The ethernet interface is not up by default, each time that the system reboots the interface eth0 is down.&lt;/p&gt;

&lt;p&gt;The easiest way to fix this issue was to execute the following commands in the shell(as root)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifconfig eth0 up &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; dhclient eth0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To automate the initialization a script has been placed at &lt;strong&gt;/etc/rc.local&lt;/strong&gt; with the same statements.&lt;/p&gt;

&lt;h2 id=&quot;edit-april-5-2017&quot;&gt;EDIT: April 5 2017&lt;/h2&gt;

&lt;p&gt;I changed the approach, so now I’ trying to have node red working on the intel Galileo. The first challenge is to update the node version to at least 4.*.&lt;/p&gt;

&lt;h2 id=&quot;edit-april-16-2017&quot;&gt;EDIT: April 16 2017&lt;/h2&gt;

&lt;p&gt;As a final word, I gave up on Galileo Debian image, I decide to step back and try again the Yocto image. There are many issues
to work when using Debian such as the MRAA library, SSH and even the network some times doesn’t work.&lt;/p&gt;

</description>
        <pubDate>Mon, 13 Mar 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/post/2017/03/13/intel-galileo-and-debian.html</link>
        <guid isPermaLink="true">https://marabesi.com/post/2017/03/13/intel-galileo-and-debian.html</guid>
        
        <category>image,</category>
        
        <category>Debian,</category>
        
        <category>Intel,</category>
        
        <category>error,</category>
        
        <category>version,</category>
        
        <category>SSH,</category>
        
        <category>Yocto,</category>
        
        <category>distribution,</category>
        
        <category>Gen,</category>
        
        <category>node,</category>
        
        <category>interface,</category>
        
        <category>Linux,</category>
        
        <category>iot,</category>
        
        <category>Galileo,</category>
        
        <category>galileo,</category>
        
        <category>gen2,</category>
        
        <category>debian,</category>
        
        <category>yocto,</category>
        
        <category>linux</category>
        
        
        <category>Post</category>
        
      </item>
    
      <item>
        <title>Running PHP with Arduino</title>
        <description>&lt;p&gt;Lately I’e been playing with Arduino and PHP to create simple demos and see how the interaction
between them works. For my surprise it worked really well and I could at least do the blink example with few lines
of code.&lt;/p&gt;

&lt;p&gt;From now on I’ assuming that you’e played around with Arduino and feel familiar with some terms like, execution loop,
setup, pins and LED.&lt;/p&gt;

&lt;p&gt;I used Arduino Uno to keep the things as simple as possible, but any Arduino family board is supported.&lt;/p&gt;

&lt;h2 id=&quot;understanding-a-bit-of-streams&quot;&gt;Understanding a bit of streams&lt;/h2&gt;

&lt;p&gt;The first thing that came to my mind at least was to use the command line to interact with the serial port in the 
Arduino board. It could have worked as expected but for sure is not the best approach, since we are using a workaround.&lt;/p&gt;

&lt;p&gt;I say workaround based on other languages where we can have native integration with those devices, have you ever heard
about pi4j? What about Jhonnyfive? Those libraries provide a simple, elegant and the most important a native connection
direct to the board.&lt;/p&gt;

&lt;p&gt;To interact via command line with our Arduino we would simply do, something like this (assuming that the Arduino is
connected via USB cable)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /dev/cu.wchusbserial1410
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command above will send 1 to the Arduino serial port and blink the RX LED in the Arduino board.&lt;/p&gt;

&lt;p&gt;We have taken the first step and communicated successfully to our Arduino board, but it is terminal only. Our
goal here is do it via PHP, and as programmers we usually take the easiest path. Which means to send this command
line through PHP script.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;shell_exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;echo '1' &amp;gt;&amp;gt; /dev/cu.wchusbserial1410&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The PHP script above does the job well, but its not elegant. The error handling is terrible.&lt;/p&gt;

&lt;p&gt;Comes in place PHP streams, I’m sure you’ve used them before. PHP developers are used to streams and don’ know that.&lt;/p&gt;

&lt;h3 id=&quot;streams&quot;&gt;Streams&lt;/h3&gt;

&lt;p&gt;Streams are accessible by any function that handles files on PHP, such as &lt;em&gt;fopen&lt;/em&gt; and &lt;em&gt;file_get_contents&lt;/em&gt;. The magic happens when
we use what is known as &lt;strong&gt;wrappers&lt;/strong&gt; to handle different resources. Wrappers allow SSH connection, FTP handling or even 
read zipped files content without extracting them.&lt;/p&gt;

&lt;p&gt;PHP comes with 12 wrappers ready to use as shown in the list bellow, and if is needed something specific that PHP does not 
has is possible to create custom streams using the function &lt;strong&gt;stream_wrapper_register&lt;/strong&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;file://&lt;/li&gt;
  &lt;li&gt;http://&lt;/li&gt;
  &lt;li&gt;ftp://&lt;/li&gt;
  &lt;li&gt;php://&lt;/li&gt;
  &lt;li&gt;zlib://&lt;/li&gt;
  &lt;li&gt;data://&lt;/li&gt;
  &lt;li&gt;glob://&lt;/li&gt;
  &lt;li&gt;phar://&lt;/li&gt;
  &lt;li&gt;ssh2://&lt;/li&gt;
  &lt;li&gt;rar://&lt;/li&gt;
  &lt;li&gt;ogg://&lt;/li&gt;
  &lt;li&gt;expect://&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The magic here is to create a Arduino wrapper, so we could do something like&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arduino://ttyUSB0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'r+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fread&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;arduino&quot;&gt;arduino://&lt;/h3&gt;

&lt;p&gt;PHP has a good documentation about creating your own wrapper, but I’m going to clarify a few points here.&lt;/p&gt;

&lt;p&gt;The first is the class &lt;em&gt;streamWrapper&lt;/em&gt;, which is a prototype to follow and create our own class. Though the weird part
is that we don’t extend anything we just need to declare the right methods and it’ll just work.&lt;/p&gt;

&lt;p&gt;The class is big but luckily we don’t need to implement every method, described below.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;streamWrapper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Properties */&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Methods */&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;__construct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;__destruct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dir_closedir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dir_opendir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dir_readdir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dir_rewinddir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rename&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path_from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path_to&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rmdir&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_cast&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cast_as&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_close&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_eof&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_flush&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_lock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$operation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_metadata&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$option&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mixed&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$value&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_open&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mode&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$opened_path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_read&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_seek&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$offset&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$whence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SEEK_SET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_set_option&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$option&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arg1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arg2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_stat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_tell&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_truncate&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$new_size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;stream_write&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;unlink&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;url_stat&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$flags&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;small&gt;
    The code above was taken from PHP.net official documentation and you can see it at
    &lt;a href=&quot;http://php.net/manual/en/class.streamwrapper.php&quot; target=&quot;_blank&quot;&gt;http://php.net/manual/en/class.streamwrapper.php&lt;/a&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;The methods we are going to needs are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;stream_open
    &lt;ul&gt;
      &lt;li&gt;This method is called when we invoke any function that will operate in our wrapper&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;stream_read
    &lt;ul&gt;
      &lt;li&gt;This method is going to be invoked when is needed to read data from the source&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;stream_write
    &lt;ul&gt;
      &lt;li&gt;This method is the opposite of stream_read, it will write in a given source. Usually we use this with &lt;em&gt;fwrite&lt;/em&gt; or &lt;em&gt;file_put_contents&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;stream_eof
    &lt;ul&gt;
      &lt;li&gt;This method is used to know when the stream has reached the end of its content, we can read eof as End Of File&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kn&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Arduino&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Wrapper&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wrapperName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'arduino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream_open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$opened_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$realPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arduino://'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$realPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'r+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream_eof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fclose&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// if we already defined the wrapper just return false&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stream_get_wrappers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$wrapper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wrapper&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wrapperName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;nb&quot;&gt;stream_wrapper_register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wrapperName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The last step is to register the wrapper before call it. In order to do that, just call the function &lt;em&gt;stream_wrapper_register&lt;/em&gt;
passing the wrapper name(alias) and the class name.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;stream_wrapper_register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arduino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Arduino\Wrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;In our Wrapper class we have a register method already, to turn easier the wrapper registration, instead
of using the PHP function you could call &lt;em&gt;\Arduino\Wrapper::register()&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In conclusion to write a simple wrapper is easy. I would say that it is easier than build a simple CURD, the class
we created is very small but does the jog really well.&lt;/p&gt;

&lt;p&gt;To test it, just connect your Arduino USB in any port and use the wrapper with any function that you like, I prefer
to use &lt;em&gt;fopen&lt;/em&gt;, but the examples below are with both, &lt;em&gt;fopen&lt;/em&gt; and &lt;em&gt;file_put_contents&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Are you wondering why do I wrote two times the sleep function call? This is very simple, Arduino takes at least 1 second
to set everything up and start to respond through the serial port. Adding 2 seconds we guarantee that all the date
that we send to it will be received.&lt;/p&gt;

&lt;h3 id=&quot;fopen&quot;&gt;fopen&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arduino\Wrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arduino://ttyUSB0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'r+'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hello Arduino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;file_put_contents&quot;&gt;file_put_contents&lt;/h3&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Arduino\Wrapper&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;register&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_put_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arduino://hello Arduino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;real-usages&quot;&gt;Real usages&lt;/h2&gt;

&lt;p&gt;A good example of using custom PHP streams is Amazon and it’ storage service called S3. Amazon provides a SDK
in PHP which uses a custom wrapper to store data in the cloud.&lt;/p&gt;

&lt;p&gt;&lt;small&gt;
    Official documentation can be found at
    &lt;a href=&quot;http://docs.aws.amazon.com/aws-sdk-php/v3/guide/service/s3-stream-wrapper.html&quot; target=&quot;_blank&quot;&gt;http://docs.aws.amazon.com/aws-sdk-php/v3/guide/service/s3-stream-wrapper.html&lt;/a&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;With S3 wrapper to download a file is a matter of calling the function file_get_contents&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'s3://bucket/key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Wed, 01 Mar 2017 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/post/2017/03/01/running-php-with-arduino.html</link>
        <guid isPermaLink="true">https://marabesi.com/post/2017/03/01/running-php-with-arduino.html</guid>
        
        <category>stream,</category>
        
        <category>public,</category>
        
        <category>Arduino,</category>
        
        <category>path,</category>
        
        <category>PHP,</category>
        
        <category>register,</category>
        
        <category>file,</category>
        
        <category>read,</category>
        
        <category>fopen,</category>
        
        <category>contents,</category>
        
        <category>arduino,</category>
        
        <category>php,</category>
        
        <category>serial,</category>
        
        <category>iot,</category>
        
        <category>wrapper</category>
        
        
        <category>Post</category>
        
      </item>
    
      <item>
        <title>Laration - A simple way to visualize your configs</title>
        <description>&lt;p&gt;Some times during our development work we need to check wheter a config has been defined, and
in most of the times we just jump to the file, which means to seek the file, open it and
change it (or just see the value and leave it as it was).&lt;/p&gt;

&lt;p&gt;Laravel provide us a really simple way to find the configs. This is because Laravel uses
the dot file pattern, where the configuration needed will be inside of an .env file in the 
root of the project.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;APP_ENV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;local
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;APP_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt;:IYCeNxLZFcUKLn6IoeCzKFiW0WmVjt6gU36kCBOfr9A&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;APP_DEBUG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;APP_LOG_LEVEL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;debug
&lt;span class=&quot;nv&quot;&gt;APP_URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://localhost

&lt;span class=&quot;nv&quot;&gt;DB_CONNECTION&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mysql
&lt;span class=&quot;nv&quot;&gt;DB_HOST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;127.0.0.1
&lt;span class=&quot;nv&quot;&gt;DB_PORT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;3306
&lt;span class=&quot;nv&quot;&gt;DB_DATABASE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead
&lt;span class=&quot;nv&quot;&gt;DB_USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;homestead
&lt;span class=&quot;nv&quot;&gt;DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;secret
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This solution is the basic one and there is nothing wrong with it, let’s resume the needed steps
to get where we want:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the root of your project.&lt;/li&gt;
  &lt;li&gt;Find the variable that you want.&lt;/li&gt;
  &lt;li&gt;Change it or just check it’s value.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Laravel also provide us with some defaults, when the Laravel engine don’t find the needed
configuration it will assume a default. The default values are defined inside the &lt;strong&gt;configs/&lt;/strong&gt;
folder.&lt;/p&gt;

&lt;p&gt;The first problem comes when we try to find each default value, to achieve that we will need to first go to the
.env file, and only if the value doesn’t exists we will try to find it on the config folder.
This approach is the most common but as we probably noticed, we spend much time just to try to find what we need.&lt;/p&gt;

&lt;p&gt;The approach above also revels a new kind of problem, what if we would like to see all the environment variables at once ?
Unfortunatelly this is not possible without programming something inside Laravel, by creating a controller and exposing
all the configs throughout the helper &lt;strong&gt;config()&lt;/strong&gt;;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to the root of your project.&lt;/li&gt;
  &lt;li&gt;Find the variable that you want.&lt;/li&gt;
  &lt;li&gt;Go to the configs folder and find the default value.&lt;/li&gt;
  &lt;li&gt;Change the default value or just check it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The step number 3 will require more time if you don’t know in which file the variable that you want is. This behavior
is a consequence of Laravel’s structure, for each section of configuration you will have different files.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/configs.png&quot; alt=&quot;Laravel config files&quot; title=&quot;Laravel config files&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To solve the probles listed above, Laration was born a simple Laravel package to list your configurations being used by your application.&lt;/p&gt;

&lt;h2 id=&quot;laration&quot;&gt;Laration&lt;/h2&gt;

&lt;p&gt;Laration is a small package (actually has only one class) and can manage your environment variables really easy. The 
package can be found on &lt;a href=&quot;https://github.com/marabesi/laration&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt; and easily installed using composer.&lt;/p&gt;

&lt;p&gt;Laration provides an interface in your command line to list the variables being used by your application
divided into sections, by this you can simply see the variables from your cache, session, services and many others
in your terminal, right way, without looking for further files.&lt;/p&gt;

&lt;p&gt;From now on I’ll assume that you have composer installed in your machine,
if don’t please follow &lt;a href=&quot;https://getcomposer.org/download&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt;
link and make sure you have composer globally installed.&lt;/p&gt;

&lt;h2 id=&quot;creating-simple-laravel-application&quot;&gt;Creating simple Laravel application&lt;/h2&gt;

&lt;p&gt;First of all you need to have a Laravel application, if you have already skip to the next part of this post, othersie
keep reading and set up your first Laravel application.&lt;/p&gt;

&lt;p&gt;Before move on, let’s install the Laravel installar on composer with the following command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer global require &lt;span class=&quot;s2&quot;&gt;&quot;laravel/installer&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Two bullets to pay attention, you do need to have composer already installed in your machine and to proceed
this command should being executed with success. If any error occurrs please step back and fix it.&lt;/p&gt;

&lt;p&gt;The next step here is to install the Laravel application, this is a matter to execute a second command
in your terminal. The following command will create a new Laravel application inside a folder called 
&lt;strong&gt;laration_demo&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer create-project &lt;span class=&quot;nt&quot;&gt;--prefer-dist&lt;/span&gt; laravel/laravel laration_demo &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;laration_demo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The image below shows us that an application has been created successfully and is ready to use. Make sure to see the same
result in your terminal, if not, something went wrong. In this case try to start from the begining.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/installed-successfully.png&quot; alt=&quot;Laravel successfully installed&quot; title=&quot;Laravel successfully installed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now let’s serve our newest application using Laravel’s built-in server. To complete this task we are going to use 
Artisan.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command above will start a local web server and it will be available to access through the port 8000, to access it
go in your prefered browser and type &lt;strong&gt;&lt;a href=&quot;http://localhost:8000&quot; target=&quot;_blank&quot;&gt;http://localhost:8000&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The message &lt;strong&gt;Laravel development server started on http://localhost:8000&lt;/strong&gt; should be displayed, and you 
will have the same as in the figure below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/welcome-laravel.png&quot; alt=&quot;Laravel welcome page&quot; title=&quot;Laravel welcome page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally we’ve got a Laravel application running, the next step will show how
to install the &lt;strong&gt;Laration&lt;/strong&gt; package and how to configure it.&lt;/p&gt;

&lt;h2 id=&quot;installing-laration&quot;&gt;Installing Laration&lt;/h2&gt;

&lt;p&gt;The Laration package will work only in a Laravel based application, to install it we need to change
code inside the Laravel application and the first step is to add the dependency in the &lt;strong&gt;composer.json&lt;/strong&gt;.
Open the file composer.json and add the following dependency to it :&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;marabesi/laration&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dev-master&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the end you’ll have something similar to the following image:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/composer.png&quot; alt=&quot;Adding laration as a dependency&quot; title=&quot;Adding laration as a dependency&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are almost done, the last step is to update the dependencies. To do this go back to your terminal inside the &lt;strong&gt;laration_demo&lt;/strong&gt;
folder and execute the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;composer update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command will update all the dependencies inside your Laravel application, but as we just added one new dependency
and no one has been changed you will see that composer just added the Laration package, as shown in the image below:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/laration.png&quot; alt=&quot;Composer command output&quot; title=&quot;Composer command output&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Finally we have both, the Laravel application and the Laration package. The last step to see Laration in action
is to add the command inside the Laravel. To achieve this we are going to add a single line of code
inside the file located in &lt;strong&gt;app/Console/Kernel.php&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/kernel.png&quot; alt=&quot;Laravel kernel file (app/Console/Kernel.php)&quot; title=&quot;Laravel kernel file (app/Console/Kernel.php)&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Kernel.php file has an attribute called &lt;strong&gt;$commands&lt;/strong&gt;, this attribute is where we must register all the commands
available to be used in the application, there we are going to add the Laration command. By default it comes with and simple one line comment, as demonstrated 
in the code bellow:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;cd&quot;&gt;/**
 * The Artisan commands provided by your application.
 *
 * @var array
 */&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The change will be to remove the one comment line and add the code &lt;strong&gt;\Marabesi\Laration::class&lt;/strong&gt;. The final
code should be the same as the below:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;cd&quot;&gt;/**
 * The Artisan commands provided by your application.
 *
 * @var array
 */&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$commands&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
     &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Marabesi\Laration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;class&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course that you may have other commands available to you application, it really depends what you have already built.
In this case just append the Laration command to the end of the &lt;strong&gt;$command&lt;/strong&gt; attribute.
Now you’ve successfully installed the Laravel framework within an applicatino and the Laration package.&lt;/p&gt;

&lt;p&gt;The last test will be on the command line. let’s invoke our friend Artisan and see if the Laration has been installed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;laration
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command should return something like the image below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/laration-artisan.png&quot; alt=&quot;Verifying Laration installation&quot; title=&quot;Verifying Laration installation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The frase “List all environment variables used” confirm that the Laration
has been installed. In the same result you will be allow to see all the commands
available to use within Laration.&lt;/p&gt;

&lt;h2 id=&quot;playing-around-with-laration&quot;&gt;Playing around with Laration&lt;/h2&gt;

&lt;p&gt;The Laration package comes with a series of commands to list the environment
variables. To get start with, we are going to see all the application variables.
In order to do that we can easly invoke Laration to do this job for us.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php artisan laration:list app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;All the variables used by the application will be shown, in this case the values should be different in the picture
and yours, because the application that you have may be different. It will be the same result if you like me have installed
a fresh copy of Laravel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-11-26-laration/laration-app.png&quot; alt=&quot;Laration successfull command output&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the left side the keys are displayed and in the right side it’s value. If the key is an array it will keep repeating itself
till the last element be reached, in the picture we can see the key &lt;strong&gt;providers&lt;/strong&gt; as an example of it.&lt;/p&gt;

&lt;p&gt;For each section of configuration Laration give us a different command,
but the pattern still the same. The project on github is well documented,
but just for simplicity I’m going to post here all the commands and its
description.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Configuration section&lt;/th&gt;
      &lt;th&gt;Laration command&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;app&lt;/td&gt;
      &lt;td&gt;php artisan laration:list app&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;broadcasting&lt;/td&gt;
      &lt;td&gt;php artisan laration:list broadcasting&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;cache&lt;/td&gt;
      &lt;td&gt;php artisan laration:list cache&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;database&lt;/td&gt;
      &lt;td&gt;php artisan laration:list database&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;filesystem&lt;/td&gt;
      &lt;td&gt;php artisan laration:list filesystem&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mail&lt;/td&gt;
      &lt;td&gt;php artisan laration:list mail&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;queue&lt;/td&gt;
      &lt;td&gt;php artisan laration:list queue&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;session&lt;/td&gt;
      &lt;td&gt;php artisan laration:list session&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;view&lt;/td&gt;
      &lt;td&gt;php artisan laration:list view&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As you can see the pattern still the same, but the section changes, what turns
Laration easy to use and to remember it’s commands. There is a deeper content
when it comes to custom enrivoments variables but it will be covered in other
post in the future.&lt;/p&gt;

&lt;p&gt;Laration came to help us in the daily bases when we are trying only to get a
given value in the application environment. Laration allow us to spend the time
in what is important and not trying to find where the variable needed is.&lt;/p&gt;

&lt;p&gt;There is no way to change a given variable value by the time of this post,
but of course it can change along the way.&lt;/p&gt;

</description>
        <pubDate>Sat, 26 Nov 2016 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/post/2016/11/26/laration.html</link>
        <guid isPermaLink="true">https://marabesi.com/post/2016/11/26/laration.html</guid>
        
        <category>Laration,</category>
        
        <category>Laravel,</category>
        
        <category>application,</category>
        
        <category>command,</category>
        
        <category>list,</category>
        
        <category>artisan,</category>
        
        <category>commands,</category>
        
        <category>composer,</category>
        
        <category>inside,</category>
        
        <category>package,</category>
        
        <category>installed,</category>
        
        <category>laravel,</category>
        
        <category>packages,</category>
        
        <category>php,</category>
        
        <category>laration,</category>
        
        <category>env,</category>
        
        <category>variables,</category>
        
        <category>open source,</category>
        
        <category>github,</category>
        
        <category>laravel 5.1,</category>
        
        <category>laravel 5.2,</category>
        
        <category>laravel 5.3,</category>
        
        <category>laravel 5.4,</category>
        
        <category>laravel 5.5,</category>
        
        <category>laravel 5.6,</category>
        
        <category>laravel 5.7,</category>
        
        <category>laravel 5.8,</category>
        
        <category>laravel 6,</category>
        
        <category>laravel print all env variables,</category>
        
        <category>env variables</category>
        
        
        <category>Post</category>
        
      </item>
    
      <item>
        <title>Laravel the right way (PART 2 - Modules) - 10 Laravel meetup</title>
        <description>&lt;p&gt;Modules are always required by many applications and its not different in PHP, but again, to take this decision
there are things to think about. The first is the size of your application, if you have a small app there is no need
for modules since it will increase the amount of code and will bring no advantage. The second thing is how you’ like
to organize your app, modules give us the ability to isolate responsibilities and instead of talking with classes only
we could do the communication between modules.&lt;/p&gt;

&lt;p&gt;Unfortunately Laravel doesn’t comes with a modular system, which gave to the community the power to create many packages
to get this job done.&lt;/p&gt;

&lt;p&gt;In general all of the modules package built to work with Laravel have the following structure:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;app/
bootstrap/
vendor/
Modules/
  ├── Blog/
      ├── Assets/
      ├── Config/
      ├── Console/
      ├── Database/
          ├── Migrations/
          ├── Seeders/
      ├── Entities/
      ├── Http/
          ├── Controllers/
          ├── Middleware/
          ├── Requests/
          ├── routes.php
      ├── Providers/
          ├── BlogServiceProvider.php
      ├── Resources/
          ├── lang/
          ├── views/
      ├── Repositories/
      ├── Tests/
      ├── composer.json
      ├── module.json
      ├── start.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The example above was taken from &lt;a href=&quot;https://github.com/nWidart/laravel-modules&quot; target=&quot;_blank&quot;&gt;nWidart/laravel-modules&lt;/a&gt;. I believe that
it is the most used packaged in the Laravel community, and the important part here is to notice that with it we have
one mini-laravel inside the &lt;strong&gt;Modules&lt;/strong&gt; folder.&lt;/p&gt;

&lt;p&gt;The folder &lt;strong&gt;Modules&lt;/strong&gt; is where all modules in your application will leave, and the name &lt;strong&gt;Modules&lt;/strong&gt; is configurable, which
means that if you don’t like it you can change to the name you want to.&lt;/p&gt;

&lt;h2 id=&quot;custom-modules&quot;&gt;Custom modules&lt;/h2&gt;

&lt;p&gt;In case you don’t want to use any solution provided by the community there is the option to implement your own modular
system using the service provider that Laravel has, and for that, we have a couple of examples  distributed in the web:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://kamranahmed.info/blog/2015/12/03/creating-a-modular-application-in-laravel&quot; target=&quot;_blank&quot;&gt;kamranahmed.info&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://ziyahanalbeniz.blogspot.com.br/2015/03/modular-structure-in-laravel-5.html&quot; target=&quot;_blank&quot;&gt;ziyahanalbeniz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I would’t recommend this approach for two reasons, the first is the lack of support that you will get and the second
is the extra work to maintain the modular system. Besides that the good part is that you have the power to decide
which struture to use or what should your folders be called (far way more customizable).&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In general all enterprise applications should use a modular system. It gives all the good parts described here and
also the ability to split your team to focus on a specific module.&lt;/p&gt;

&lt;p&gt;Although the decision to use or not a modular system must be taken in the beginning of the project, otherwise will
be a huge change to implement it once code is running in production(will be big bug not impossible).&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Sep 2016 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2016/09/13/laravel-the-right-way-part-2.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2016/09/13/laravel-the-right-way-part-2.html</guid>
        
        <category>Laravel,</category>
        
        <category>modules,</category>
        
        <category>Modules,</category>
        
        <category>system,</category>
        
        <category>modular,</category>
        
        <category>app,</category>
        
        <category>community,</category>
        
        <category>applications,</category>
        
        <category>php,</category>
        
        <category>laravel,</category>
        
        <category>right way,</category>
        
        <category>models,</category>
        
        <category>framework,</category>
        
        <category>laracast,</category>
        
        <category>laranews</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Laravel the right way (PART 1) - 10 Laravel meetup</title>
        <description>&lt;p&gt;Recently I’ve been to the &lt;a href=&quot;http://www.meetup.com/pt-BR/Laravel-SP/events/233563455&quot; target=&quot;_blank&quot;&gt;Laravel meetup&lt;/a&gt; and I had the pleasure to talk about good pratices and common
 mistakes that newbies in Laravel do in the daily basis. We  had also Guilherme Guitte’s
 talk who had spoken how elastic serach work.&lt;/p&gt;

&lt;h2 id=&quot;laravel-the-right-way&quot;&gt;Laravel the right way&lt;/h2&gt;

&lt;p&gt;There are a few topics that I’ve been across over and over during my daily basis as a developer using Laravel.
This bothers me because some of them are so easy to understand to use that I decided to divide it in a few 
topics and try to guide the developers to a better Laravel usage. We will be through composer packages, directory 
structures and the Laravel docs to compose this topics, so let’s dive in.&lt;/p&gt;

&lt;h2 id=&quot;models&quot;&gt;Models&lt;/h2&gt;

&lt;p&gt;Laravel is a framework with that give to the developer a big responsability, it gives the ability to you to free chose the location
of your models. Laravel doesn’t care if you want to place it in the root directory, divide it into sub directories or
just throw it away on the framework.
The freedom that we have is huge, and sometimes new developers doesn’t know how to handle that (or if you’re
a experienced developer you may not know what are the best place to store the files&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-13-laravel-the-right-way-part-1/models.png&quot; alt=&quot;Models&quot; title=&quot;Models&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So here I present what I’ve found useful in how to handle with the models and the solution is simple, store input
in a folder called &lt;strong&gt;Models&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To keep things even better you can also create sub directories inside the &lt;strong&gt;Models&lt;/strong&gt; folder, as long as it makes
sense to do it.&lt;/p&gt;

&lt;h2 id=&quot;models-dont-least-forever-repositories-for-the-rescue&quot;&gt;Models don’t least forever, repositories for the rescue&lt;/h2&gt;

&lt;p&gt;This topic is totally apart from Laravel’s framework base, which means that we are going to talk about
a package called l5-repository. This package is used into the Laravel’s framework to be possible to use
the repository patter.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It queries the data source for the data, maps the data from the data source to a business entity,
and persists changes in the business entity to the data source. A repository separates the business
logic from the interactions with the underlying data source or Web service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As our application grows is normal to have a lot of files, a lot of classes and many assets to handle.
It is not different with our models, in the MVC pattern we use the models to store the business logic.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-13-laravel-the-right-way-part-1/model-rules.png&quot; alt=&quot;Business rules inside a model&quot; title=&quot;Business rules inside a model&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is nothing to fear when dealing with small applications, but if you have a application a little bit
bigger you are going to start to have many methods inside a single file. Don’t believe me? Let’s have a look
at a real application&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-13-laravel-the-right-way-part-1/methods.png&quot; alt=&quot;Too many methods&quot; title=&quot;Too many methods&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What’s the problem with that? It seems perfect, right? The first problem here is the coupled access
to the data in the database, this is tighten into the models’s method. The second problem is that
if we need to reuse the code in a other method, let’s say only the where clause it would be impossible.&lt;/p&gt;

&lt;p&gt;Besides the persistence layer we have coupled a few business into our models as figure above show us. We have got at
least 8 methods and by their names we can see that there are rules behind it.&lt;/p&gt;

&lt;h2 id=&quot;introducing-services&quot;&gt;Introducing services&lt;/h2&gt;

&lt;p&gt;My point of view in doing all of this is, ok, you have got the MVC pattern and can build your application really fine, but
there are a few gaps. The first is the project organization (should I always add the business rule inside a model? What if I have the
same rule but in a different kind? How would you use polymorphism?). The second is the size of the project, with
three main folders model-view-controller it will get too many files really quick and the last is the modularity
how would you use modules?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-13-laravel-the-right-way-part-1/mvc.png&quot; alt=&quot;regular MVC&quot; title=&quot;regular MVC&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For those reasons we could start using the service layer. The service layer is where all the business rules lives.&lt;/p&gt;

&lt;p&gt;The basic approach is to build the services and the service is going to use the models, and the controllers will use
the service. This must by single direction, which means that services doesn’t uses controller otherwise there is
no point to have a layer specific to it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-09-13-laravel-the-right-way-part-1/mvc-service-layer.png&quot; alt=&quot;MVC and service layer&quot; title=&quot;MVC and service layer&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The good point of using a layer service is the flexibility that i gives to you, is possible to concentrate 
the business rules inside of this layer and consume them.&lt;/p&gt;

&lt;p&gt;Imagine two different controllers one, needs to return JSON to the client and the other XML, in the regular MVC
you could have two different methods inside your model, call in each controller the methods needed and everything just 
works. But one of the problems is the testability and the S.O.L.I.D violation.&lt;/p&gt;

</description>
        <pubDate>Tue, 13 Sep 2016 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/php/2016/09/13/laravel-the-right-way-part-1.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2016/09/13/laravel-the-right-way-part-1.html</guid>
        
        <category>Laravel,</category>
        
        <category>business,</category>
        
        <category>data,</category>
        
        <category>service,</category>
        
        <category>layer,</category>
        
        <category>right,</category>
        
        <category>different,</category>
        
        <category>application,</category>
        
        <category>php,</category>
        
        <category>laravel,</category>
        
        <category>right way,</category>
        
        <category>models,</category>
        
        <category>framework,</category>
        
        <category>laracast,</category>
        
        <category>laranews</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>9º Laravel Meetup</title>
        <description>&lt;p&gt;Recently I’ve been to Laravel meetup in São Paulo hold by iMasters coordened by Ravan and Zizaco, both working for Leroy
Merlin and using Laravel (of course). The meetup started with a really good introduction and interation between the
audience, thanks iMasters for the coffee-break. Usually the people who go to the meetup are known by the hosts. They
were really confortable with each other which I think is really good. The main goal of the meetup was to help newbies in
Laravel(specifically in middlewares ). The first speaker(Igor Carvalho) started his talk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-08-16-9-laravel-meetup/speaker1.jpeg&quot; alt=&quot;Igor Carvalho&quot; title=&quot;Igor Carvalho&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;middleware-4-life&quot;&gt;Middleware 4 Life&lt;/h1&gt;

&lt;p&gt;His talk was a really good introduction to middlewares concept in how we can benefit from them and how to implement them
using Laravel, Silex and Symfony. The onion concept was shown to the audience and code snippets were executed, this
combination was a really good move because we could understand the concept in practice. The meetup had also Marcel as a
second speaker who presented an amazing talk in how we as a developers can keep up to date with so many technologies and
so many paths to take.&lt;/p&gt;

&lt;h1 id=&quot;mantenha-se-atualizado---a-eterna-jornada-de-aprendizado-de-um-desenvolvedor-de-software&quot;&gt;Mantenha-se Atualizado - A eterna jornada de aprendizado de um desenvolvedor de software&lt;/h1&gt;

&lt;p&gt;Keep up to date - A developer’s eternal joruney of leanership (“Mantenha-se Atualizado - A eterna jornada de aprendizado
de um desenvolvedor de software - Marcel dos Santos” - Original title in Portuguese)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-08-16-9-laravel-meetup/speaker2.jpeg&quot; alt=&quot;Marcel Santos&quot; title=&quot;Marcel Santos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Marcel is a well known developer in various communities in São Paulo and he has spoken in many conferences such as PHP
Experience (one of the biggest PHP conference in Brasil). His talk was the inspiring one, he talked about the difficulty
of being an I.T professional.&lt;/p&gt;

&lt;p&gt;His talk wasn’t the tech one and came to balance the meetup, indeed we aren’t machines we need to communicate. We need
to interact more with each other and also be open minded with other programming languages and new technology. The book
“The pragmatic programmer” was mentioned and inspired Marcel to create his talk. The main message that we could get from
it was “think &lt;strong&gt;outside the box&lt;/strong&gt;”.&lt;/p&gt;

&lt;h1 id=&quot;time-to-go&quot;&gt;Time to go&lt;/h1&gt;

&lt;p&gt;The meetup ended with a great interaction among all members, we formed a good debate based in the talks presented. It is
always good to know you are not alone in some issues, there we shared many problems, solutions and possiblities. The
main lessons I could take from there was that programmers are not segregated, those kind of activities should be taken
by everyone from any professional field. It is a way to learn, share and teach.&lt;/p&gt;

&lt;p&gt;You can visit the official link &lt;a href=&quot;http://www.meetup.com/pt-BR/Laravel-SP/events/232614229&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Aug 2016 22:00:00 +0000</pubDate>
        <link>https://marabesi.com/post/2016/08/16/9-laravel-meetup.html</link>
        <guid isPermaLink="true">https://marabesi.com/post/2016/08/16/9-laravel-meetup.html</guid>
        
        <category>laravel,</category>
        
        <category>meetup,</category>
        
        <category>php,</category>
        
        <category>community,</category>
        
        <category>middleware,</category>
        
        <category>dev,</category>
        
        <category>journey</category>
        
        
        <category>Post</category>
        
      </item>
    
      <item>
        <title>Bringing PHP and IoT together</title>
        <description>&lt;p&gt;Recently I’ve been around IoT with PHP and I made some small projects such as LED blink,
sensor management and so on. Therefore I chose PHP to be my main language to dig into IoT’s world,
for my surprise it was a tough decision.&lt;/p&gt;

&lt;p&gt;Unfortunately we have few libraries written in PHP to deal with I/O and this kind of components,
at first it is normal the lack of content because PHP was built to be used in the web, therefore we can make it better.
Here I’m going to use PHP to connect with Arduino and turn on a LED.&lt;/p&gt;

&lt;p&gt;So let’s have a look in our sketch (the code goes into Arduino board)&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;led&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;led&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
   
    &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;ON&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;led&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;led&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I uploaded the same code on Autodesk 123D Circuits and you can try it yourself, just click on “Start Simulation”.&lt;/p&gt;

&lt;h1 id=&quot;simulation&quot;&gt;Simulation&lt;/h1&gt;

&lt;p&gt;Probably if you are trying to simulate you will see nothing happening in the simulation and it looks a bit strange,
but it is exactly what it should do, nothing.
If we take a look inside the sketch we’ll see a lot of interaction with Serial port and there is a reason why the
Arduino does nothing. The Serial port is the way out of Arduino and the path to communicate with another devices
or programming languages, we can see a few tutorials at Arduino
&lt;a href=&quot;http://playground.arduino.cc/&quot; target=&quot;_blank&quot;&gt;playground&lt;/a&gt; to get a better idea.
Go ahead and after you click on “Start Simulation” click on “Code Editor”, the console will show up with the core running on Arduino. In the right side there is a tab named “Serial Monitor”, click on that as well. 
On the right panel that will show up you can type any command to interact with.&lt;/p&gt;

&lt;p&gt;If you have any idea what our sketch does, you see we must type “&lt;strong&gt;ON&lt;/strong&gt;” to turn the LED on, and “&lt;strong&gt;OFF&lt;/strong&gt;” to turn it off.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;448&quot; frameborder=&quot;0&quot; marginheight=&quot;0&quot; marginwidth=&quot;0&quot; scrolling=&quot;no&quot; src=&quot;https://123d.circuits.io/circuits/497523-devmedia-php-iot/embed#breadboard&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The PHP world will interact with Serial port on Arduino and send exactly the same command (ON, OFF) to turn the LED &lt;strong&gt;ON&lt;/strong&gt; and &lt;strong&gt;OFF&lt;/strong&gt;.&lt;/p&gt;

&lt;h1 id=&quot;finally-the-php&quot;&gt;Finally, the PHP&lt;/h1&gt;

&lt;p&gt;Ok, now we understand how to run code in our simulator and we need to interact with PHP. To achieve that we are going to use PHP streams.
The functions used here are known to C developers and might be for PHP as well, let’s see some code and after that a explanation&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$resource&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/dev/ttyUSB0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'+r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;fwrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ON'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first thing we do is use the &lt;strong&gt;fopen&lt;/strong&gt; function in a old known entry in linux, the &lt;strong&gt;ttyUSB0&lt;/strong&gt; under &lt;strong&gt;/dev&lt;/strong&gt; directory. It means that a USB device is connected in one port in your computer/laptop.
If you have more than one USB device connected the number 0 at the end will increase to USB1, USB2 and so on.
If no one USB were connected PHP will through an error like the following (so make sure your USB is connected both on Arduino and on your computer)&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;PHP&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ttyUSB0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;failed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;Inappropriate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ioctl&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;marabesi&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;php&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img title=&quot;Arduino connected to the laptop&quot; src=&quot;/images/posts/2016-05-31-bringing-php-iot-together/connected-arduino-uno.jpg&quot; alt=&quot;Image from Safari books - https://www.safaribooksonline.com/blog/2013/07/16/javascript-powered-arduino-with-johnny-five/&quot; width=&quot;650&quot; height=&quot;366&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Then just be happy, if your Arduino is connected and you run the script in PHP the LED should turn on, to turn it off just change ON in the PHP script to OFF.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 May 2016 21:42:15 +0000</pubDate>
        <link>https://marabesi.com/iot/php/2016/05/31/bringing-php-iot-together.html</link>
        <guid isPermaLink="true">https://marabesi.com/iot/php/2016/05/31/bringing-php-iot-together.html</guid>
        
        <category>arduino,</category>
        
        <category>blink,</category>
        
        <category>iot,</category>
        
        <category>led,</category>
        
        <category>nano,</category>
        
        <category>php,</category>
        
        <category>protoboard,</category>
        
        <category>serial,</category>
        
        <category>stream,</category>
        
        <category>usb,</category>
        
        <category>hardware</category>
        
        
        <category>IoT</category>
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Requirements Engineering - A tool for Use Case</title>
        <description>&lt;p&gt;Recently I’ve finished my MBA in software engineering and as a result my group and I ended up with and tool for use case management. We were aimed to develop something that helps teams build a better software and we founded in requirements a gap to be fill.&lt;/p&gt;

&lt;p&gt;As usual in Brazil software development is a big issue (I’m specifically talking about Brazil because is my country and where I have experience) with impossible dead lines, crap documentation and bosses even worse. In resume software here is just a matter of money and doesn’t matter if you built it with quality or not, what matters is how much the company will earn with it.&lt;/p&gt;

&lt;p&gt;Software engineers should have the knowledge and power to change it. Therefore we also have a lack of tools to help us to build better software. Let’s assume a waterfall model to build software:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.maxwideman.com/papers/linearity/waterfall.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/waterfall.jpg&quot; alt=&quot;Waterfall model&quot; title=&quot;Waterfall model&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just looking to the diagram we identified that the problem is in the first three steps:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/waterfall-problem.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/waterfall-problem.jpg&quot; alt=&quot;Waterfall model and the problem&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Assuming that we did a research to confirm our thesis and let’s see what experts have to say to us:&lt;/p&gt;

&lt;p&gt;Problems of scope. The boundary of the system is ill-defined or the customers/users specify unnecessary technical detail that may confuse, rather than clarify, overall system objectives (PRESSMAN, Software Engineering - A PRACTITIONER ’ S APPROACH, page 121)&lt;/p&gt;

&lt;h3 id=&quot;it-does-apply-to-agile-methods-as-well&quot;&gt;IT DOES APPLY TO AGILE METHODS AS WELL&lt;/h3&gt;

&lt;p&gt;To us is very clear the problem is in the documentation and to improve this
field we came up with an new tool to increase the requirements field.
The tool is totally based in the Use Case from UML (The use case description).
We believe that the use case is the very first step to have a good documentation
and where both business and technology can understand for some reasons:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use case is a simple matter of who does what&lt;/li&gt;
  &lt;li&gt;The diagram and the description is really intuitive&lt;/li&gt;
  &lt;li&gt;Once you learn how to create is really easy to repeat (in meetings where the user will be interviewed is common to use use case approach)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/use-cases-newspapar.gif&quot; alt=&quot;Use case diagram&quot; target=&quot;_blank&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use case diagram Of course the diagram is much easier to understand than the description one. Just looking to the image you know that you’ll have a user with the journalist role and a reader, really easy isn’t it ? Unfortunately what we have is not the diagram itself in our tool rather we have the description one&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/Description-of-Use-Cases.jpg&quot; alt=&quot;Description use case&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Description use case Usually Use case descriptions are created and stored in word documents and as you can imagine they can be very hard to maintain and even create them. Our solution provides a easily way to create and store use case description based on an application. You can see the tool here &lt;a href=&quot;https://shielded-headland-1947.herokuapp.com&quot;&gt;https://shielded-headland-1947.herokuapp.com&lt;/a&gt;.
The following section will introduce to the tool and give to a explanation in how we ported the use case description.&lt;/p&gt;

&lt;h2 id=&quot;application&quot;&gt;Application&lt;/h2&gt;

&lt;p&gt;Once you have visited the link you’ll see the following image to create an application&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/application.png&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/application.png&quot; alt=&quot;Use case management - Application&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The first screen is where you define your application, you can have as many
application as you want. Usually when you are creating a use case you are creating
it to a given application, for instance let’s say you are developing requirements
to a application called &lt;strong&gt;Fly Cotrol&lt;/strong&gt;, so you should use the same name in this
screen. To understand the flow we propose I drawled the following flow chart:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/flow.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/flow.png&quot; alt=&quot;Basic flow to create use case&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Keep it in mind because we’re going to follow this as well&lt;/p&gt;

&lt;h2 id=&quot;actor&quot;&gt;Actor&lt;/h2&gt;

&lt;p&gt;As the name already said here we are going o manage our actor. You can insert,
delete and update an actor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/actors.png&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/actors.png&quot; alt=&quot;Use case management - Actors&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;version&quot;&gt;Version&lt;/h2&gt;

&lt;p&gt;In this section is where you going to define the versions of your use cases. A simple example here is when you create the first version called 1.0.0, then comes the need to upgrade some functionalities and then you create the version 2.0.0 to specify only what has been changed.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/version-1.png&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/version-1.png&quot; alt=&quot;Use case management - Version&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;use-case&quot;&gt;Use case&lt;/h2&gt;

&lt;p&gt;Finally we can now create our use case, here is where all we have done before get together. The first select box is where you select your application to create a use case:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/use_case_-1.png&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/use_case_-1.png&quot; alt=&quot;Use case management - Use case&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then the select box of named Version comes, here is where you select which
version your use case is going to use. Following the same idea you can select
one or more actors to be in your use case.&lt;/p&gt;

&lt;h2 id=&quot;steps&quot;&gt;Steps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/steps.png&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-16-requirements-engineering-tool-use-case/steps.png&quot; alt=&quot;Use case management - Version&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here we are in the last step to create our use case, this is the last section
because is complex to explain. Here is where you use case is going to be detailed
with each step and they can be &lt;strong&gt;Main&lt;/strong&gt;, &lt;strong&gt;Alternate&lt;/strong&gt; or &lt;strong&gt;Exception&lt;/strong&gt;
(if you are not understand the point go ahead and take a look in the use case
description in the beginning of the post).&lt;/p&gt;

&lt;h2 id=&quot;there-is-more-to-be-done&quot;&gt;There is more to be done&lt;/h2&gt;

&lt;p&gt;The tool was just to prove our point of view in how requirements affects the
software development and there are improvements to be done yet. The main features
I can think now are: user authentication, generate use case diagram and allow
relation between use cases.&lt;/p&gt;

&lt;p&gt;If you liked the tool or want to contribute with feel free to, all the code was
developed in PHP and Laravel Framework you can see the source code in
&lt;a href=&quot;https://github.com/marabesi/use-case-management&quot;&gt;https://github.com/marabesi/use-case-management&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this study what I felt is that requirements and documentation is a business
need and the problem resides on the developers hand. As a developer/software
engineers we should demonstrate a path to the users and instigate them to give
us the correct information.&lt;/p&gt;

&lt;p&gt;In the past we were addicted to word’s document and Excel sheets but nowadays
its more than that, simple text documents doesn’t help us to delivery quality
in our softwares. The Use Case management tool is a try to improve this field
and prevent all issues in the software development.&lt;/p&gt;

&lt;p&gt;As a resume we learnt we HAVE TO elicit correctly requirements and
Use Case Management toll helps a lot with that, storing all use cases need to a
given application.&lt;/p&gt;

&lt;h2 id=&quot;edit-may30-2016&quot;&gt;Edit: May 30, 2016&lt;/h2&gt;

&lt;iframe src=&quot;https://drive.google.com/file/d/0B8eXZIvTLcpjQUtKNEtmLXdrQ2p2c19sR2Z2REo5SkI1dDRv/preview&quot; width=&quot;100%&quot; height=&quot;480&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Sat, 16 Apr 2016 23:13:33 +0000</pubDate>
        <link>https://marabesi.com/software%20engineering/2016/04/16/requirements-engineering-tool-use-case.html</link>
        <guid isPermaLink="true">https://marabesi.com/software%20engineering/2016/04/16/requirements-engineering-tool-use-case.html</guid>
        
        <category>actors,</category>
        
        <category>application,</category>
        
        <category>development,</category>
        
        <category>engineering,</category>
        
        <category>nasa,</category>
        
        <category>requirements,</category>
        
        <category>software,</category>
        
        <category>step,</category>
        
        <category>use case,</category>
        
        <category>version,</category>
        
        <category>mba</category>
        
        <category>uml diagram,</category>
        
        <category>uml</category>
        
        
        <category>Software Engineering</category>
        
      </item>
    
      <item>
        <title>S.O.L.I.D - Practices for Object Oriented Programming (code examples)</title>
        <description>&lt;p&gt;Being able to write better is a achievement that every programmer want to.
SOLID is a great thing to start to and particularly one of the best things to
be followed by TDD.&lt;/p&gt;

&lt;h2 id=&quot;single-responsability&quot;&gt;Single responsability&lt;/h2&gt;

&lt;p&gt;A class should have only a single responsability (i.e. only one potential change
in the software’s specification should be able to affect the specification of
the class)&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Upload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// apply validation rules&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// move file&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// rename file&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have our class Upload doing too many things at once, named:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Validates the file&lt;/li&gt;
  &lt;li&gt;Move the file&lt;/li&gt;
  &lt;li&gt;Renaming the file&lt;/li&gt;
  &lt;li&gt;Lack of file object&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A better approach to it is to create a new class to validate it, to move it and
finally to handle it to a new place, let’s see some code:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValidateFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MoveFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;TransformFile&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Upload&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__construct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;validate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// apply validation rules&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
       
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;moveFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// move file&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// rename file&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;openclose&quot;&gt;Open/Close&lt;/h2&gt;

&lt;p&gt;software entities … should be open for extension, but closed for modification.&lt;/p&gt;

&lt;p&gt;This principle is followed by many vendors to allow developers extend features
without change the original source code. Lets first understand the problem we
want to solve.&lt;/p&gt;

&lt;p&gt;Let’s imagine we have a class to send data through a webservice and at the time
we have only the XML handler to send this but you client requested you to
implement the feature to support JSON, what would you do?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Webservice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sendXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// handle the send here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the code above we have unfortunately only one choice, add a method
&lt;strong&gt;sendJson&lt;/strong&gt;, but that would not follow the Open/Close principle. With this
action we would had to change the original source code to add a new feature
(should be open for extension, but &lt;strong&gt;closed for modification&lt;/strong&gt;).
How can we fix this code?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XML&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;XML&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Json&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Webservice&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// handle the send here&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To easily refactor this code accordinly with open/close principle we would first to create a new generic class called &lt;strong&gt;Type&lt;/strong&gt;, this class will abstract the XMl and JSON type, which we can then give to the send date as a parameter.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$webservice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Webservice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$webservice&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This approach is much cleaner and easier to create a new extension to it, we can extend the &lt;strong&gt;Type&lt;/strong&gt; class and create as many types as we want.&lt;/p&gt;

&lt;h2 id=&quot;liskov-substitution&quot;&gt;Liskov Substitution&lt;/h2&gt;

&lt;p&gt;Objects in a program should be replaceable with instances of their subtypes without altering the correctness of that program.&lt;/p&gt;

&lt;p&gt;This principle is connected with inheritance one of the most features used in the Object Oriented Programming. The principle says that the subtype should not alter the result of the program.&lt;/p&gt;

&lt;p&gt;In the following example we have a class called &lt;strong&gt;Door&lt;/strong&gt;, inside what we have is a simple method
that tell us when the door is open or not.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Door&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$open&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A simply class and easy to use, then we have our client code, who uses that class&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Client&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Door&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$door&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$door&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nv&quot;&gt;$door&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Door&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’ say we have other door but this time this door is a decorated one.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DecoratedDoor&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Door&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;isOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;isOpen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Door is closed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code above is valid but if the client decided to use the &lt;strong&gt;DecoratedDoor&lt;/strong&gt; his code will break. We are not following the Liskov principle “Objects in a program should be replaceable with instances of their subtypes without altering the correctness of that program”.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Original code&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Door&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

&lt;span class=&quot;cd&quot;&gt;/**
 * The client can't use the DecoratedDoor because it throws an Exception
 */&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Client&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DecoratedDoor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In other words to fix this problem and follow the Liskov principle we need just provide for the client class
the same result that he expects from the &lt;strong&gt;Door&lt;/strong&gt; class, true or false.&lt;/p&gt;

&lt;h2 id=&quot;interface-segregation&quot;&gt;Interface Segregation&lt;/h2&gt;

&lt;p&gt;Many client-specific interfaces are better than one general-purpose interface.&lt;/p&gt;

&lt;p&gt;This I think is the easier one to understand, the quote above is really clear. So let’ dive into the source code
and get our hands dirty.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The interface above has two methods to our Bird, and we can implement this interface really easy and well, as the code below shows:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConcreteBird&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can fly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can eat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This kind of generalization works fine and there is just one problem with it, what if I have a bird who doesn’t fly or doesn’t eat?&lt;/p&gt;

&lt;p&gt;We do not have many options though, we have to implement all methods, therefore what we can do to identify when a bird can’t fly or eat is thrown an exception.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConcreteBirdWithoutFly&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I cannot fly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can eat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConcreteBirdWithoutEat&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can fly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'I cannot eat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For many of us its just ok to do this, but the true is that we are implementing a method that we don’t need.&lt;/p&gt;

&lt;p&gt;Then comes Interface Segregation to save us, “Many client-specific interfaces are better than one general-purpose interface.”. To deal with that we simply create  a new interface with the method eat.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Eatable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this approach we can finally implements the specific interface instead of jus throw exceptions if the class doesn’t support the contract. The following code supports both &lt;strong&gt;Bird&lt;/strong&gt; and &lt;strong&gt;Eatable&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConcreteBirdWithoutEat&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Bird&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Eatable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can fly'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'I can eat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This code is more flexible as well, we just implement what we are going to need.&lt;/p&gt;

&lt;h2 id=&quot;dependency-inversion&quot;&gt;Dependency inversion&lt;/h2&gt;

&lt;p&gt;One should “Depend upon Abstractions. Do not depend upon concretions”.&lt;/p&gt;

&lt;p&gt;The following code just clarify the idea of abstraction and how to depend on it instead of a concrete instance.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Drivable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Driver&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Drivable&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Drivable&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$driver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The following approach allow us to implement as many drivers as we want and give it as a parameter to the run method.&lt;/p&gt;

&lt;p&gt;You can complain that we could easy depend directly on &lt;strong&gt;Driver&lt;/strong&gt;, but if we do that we will block the flexibility of the code.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)&quot; target=&quot;_blank&quot;&gt;https://en.wikipedia.org/wiki/SOLID_(object-oriented_design)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design&quot; target=&quot;_blank&quot;&gt;https://scotch.io/bar-talk/s-o-l-i-d-the-first-five-principles-of-object-oriented-design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.codemag.com/article/1001061&quot; target=&quot;_blank&quot;&gt;http://www.codemag.com/article/1001061&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 04:06:05 +0000</pubDate>
        <link>https://marabesi.com/oop/2016/04/12/s-o-l-i-d.html</link>
        <guid isPermaLink="true">https://marabesi.com/oop/2016/04/12/s-o-l-i-d.html</guid>
        
        <category>class,</category>
        
        <category>public,</category>
        
        <category>function,</category>
        
        <category>code,</category>
        
        <category>file,</category>
        
        <category>principle,</category>
        
        <category>solid,</category>
        
        <category>single,</category>
        
        <category>responsability,</category>
        
        <category>open,</category>
        
        <category>close,</category>
        
        <category>liskov,</category>
        
        <category>interface,</category>
        
        <category>segregation,</category>
        
        <category>dependency,</category>
        
        <category>inversion,</category>
        
        <category>s.o.l.i.d,</category>
        
        <category>php</category>
        
        
        <category>OOP</category>
        
      </item>
    
      <item>
        <title>Continuous PHP</title>
        <description>&lt;p&gt;Continuous PHP is a amazing CI tool which provides a easy and quick way to run tests and automate deploy, at some point
of our application regardless of it’s field you will need a CI server to automate things to you and then comes Continuous PHP.&lt;/p&gt;

&lt;p&gt;I confess I used travis CI for a long time and jenkins as well but the problem with those tools is that no one is
specifically for PHP projects. Jenkins is a great example of that to use with PHP we need to install a couple of plugins, Travis CI is more flexible with it, therefore neither were built with PHP in mind.&lt;/p&gt;

&lt;h2 id=&quot;meeting-continuous-php&quot;&gt;Meeting continuous PHP&lt;/h2&gt;

&lt;p&gt;To see how is easy to use &lt;strong&gt;Continuous PHP&lt;/strong&gt; I’m going to use it in a simple personal
project (&lt;a href=&quot;https://github.com/marabesi/use-case-management&quot; target=&quot;_blank&quot;&gt;https://github.com/marabesi/use-case-management&lt;/a&gt;)
which consist of a simple PHPUnit test suit.&lt;/p&gt;

&lt;p&gt;To follow this post you need to have:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;You must have a Github account&lt;/li&gt;
  &lt;li&gt;You must have a project with PHPUnit tests&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The first step is to click in the login button on the right as you can see in the image below:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp1.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp1.png&quot; alt=&quot;Continuous PHP&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After click in login chose Connect with Github and then &lt;strong&gt;Continuous PHP&lt;/strong&gt; will sync all your repositories and show to you a list with all your Github repositories.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp2.png&quot; alt=&quot;cp2&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see in the image above I have one repository called &lt;strong&gt;marabesi/gnrephp&lt;/strong&gt; configured with &lt;strong&gt;Continuous PHP&lt;/strong&gt;
and for my happiness everything is fine (you can see a green bar indicating that all tests passed since last build). For
this post I’m going to do the same thing but with the repository &lt;strong&gt;marabesi/use-case-management&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For each repository that is not configured with &lt;strong&gt;Continuous PHP&lt;/strong&gt; we see a blue button in the right side “Setup”, we just need to click on that to start our configuration.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp3.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp3.png&quot; alt=&quot;cp3&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The “+” signal is to add a new step into the pipeline, click on that and you will see a list of branches of the
repository and you can chose in which branch the item of the pipeline is going to be executed, as the project we are
using don’t have any special branch just chose &lt;strong&gt;master&lt;/strong&gt;. Then have a look below where we have some fields to configure
our build properties, here we can chose as many versions of PHP as we want, and if in your project you have Phing you can specify a specific targets to be executed.&lt;/p&gt;

&lt;p&gt;On the right side there are credential settings and dependencies. For our dependencies we are using composer so we just
need to specify the path of our composer.json file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp4.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp4.png&quot; alt=&quot;cp4&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;A good notice here is that Continuous PHP has four main steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Build&lt;/strong&gt; - is where we configure the environment properties like PHP version, targets from Phing, composer file and
credentials (if needed)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt; - here we configure our unit tests to be run when is just it, nothing new. Continuous PHP supports many
test frameworks such as  PHPUnit, Behat, Phpspec and so on.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Package&lt;/strong&gt; - We can chose in which format we would like to have the result deployed to. Imagine it as a snapshot of
our whole application with all its dependencies ready to be send to any server or have it as a tar ball. Continuous PHP
offers to you a bunch of options such as Generic tarball, AWS CodeDeploy, AWS ElasticBeanstalk and Zend Server.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Deploy&lt;/strong&gt; - Finally Continuous PHP give to us a way to easily deploy to a server. This step is directly connected
with the previous one, in other words, you must to chose the correct package in order to deploy.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp5.png&quot; title=&quot;Continuous PHP pileline&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp5.png&quot; alt=&quot;Continuous PHP pileline&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We just passed the Build step in Continuous PHP and now we can configure our tests. Continuous PHP is smart enough to
know which framework you’re using, of course the framework must be in the list of supported frameworks and you can see
the list in &lt;a href=&quot;https://continuousphp.com/documentation/testing&quot; target=&quot;_blank&quot;&gt;https://continuousphp.com/documentation/testing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The great thing is that you can select if your suit test will be blocking or
not, which means that you can decide if the build goes on if the suit fails or
not.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp7.png&quot; title=&quot;Continuous PHP testing&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp7.png&quot; alt=&quot;Continuous PHP
testing&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For our simple post we’re going to stop here. If you see the image above you will note that we have two more steps in
the pipeline but they’re specially for packaging and deploy, by now we are ready to see our project running and receive
notifications by email if anything fails. Just click in Next in the &lt;strong&gt;Packaging&lt;/strong&gt; and &lt;strong&gt;Deploy&lt;/strong&gt; steps and in the end
click in the play button as the image below shows&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp8.png&quot; title=&quot;Play button to start new build&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp8.png&quot; alt=&quot;Play button to start new
build&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Then a popup will appears asking which branch you would like to execute the build, just chose the branch you want to
(usually is the master branch) and a build will start. To see whats is going on in the build you can follow the icon
that looks like a console in the right side where is written &lt;strong&gt;Execution details&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp9-1.png&quot; title=&quot;Build status&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp9-1.png&quot; alt=&quot;Build status&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Doing that we will see our build running and what went wrong or what went ok like our next image&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp10.png&quot; title=&quot;Build details&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp10.png&quot; alt=&quot;Build details&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As you can see something went wrong in my build but its because some unit tests are failing, it need to be fixed in order to have a clean build with all green.&lt;/p&gt;

&lt;h2 id=&quot;badge&quot;&gt;Badge&lt;/h2&gt;

&lt;p&gt;Usually we see a lot of badges in Github to inform us if the build is passing or falling, how many downloads the
repository had, the quality of code and so on. Continuous PHP also has it’s own badge that you can use in your
repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp-badge.png&quot; title=&quot;Continuous PHP badge&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp-badge.png&quot; alt=&quot;Continuous PHP
badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;To achieve that is really simple, just click in Status image and a list of options will appear to you. You can select
between URL, HTML and Markdown and use it wherever you want to.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2016-04-04-continuous-php/cp-badge-img.png&quot; title=&quot;Continuous PHP badge button&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2016-04-04-continuous-php/cp-badge-img.png&quot; alt=&quot;Continuous PHP badge
button&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;The main difference that I noted compared to others CI’s is the simplicity that
Continuous PHP offer to us. We do everything in a nice GUI and no configuration
file is needed. Continuous PHP still implementing new features and is production
ready, so you can taste it right now!&lt;/p&gt;

&lt;h2 id=&quot;further-reading&quot;&gt;Further reading&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://continuousphp.com/tutorial/introduction-continuous-delivery&quot; target=&quot;_blank&quot;&gt;Introduction to continuous delyvering&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://continuousphp.com/tutorial/create-and-set-up-your-project-on-continuousphp&quot; target=&quot;_blank&quot;&gt;Set uo your project with continuous
PHP&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 04 Apr 2016 04:20:14 +0000</pubDate>
        <link>https://marabesi.com/php/2016/04/04/continuous-php.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2016/04/04/continuous-php.html</guid>
        
        <category>PHP,</category>
        
        <category>Continuous,</category>
        
        <category>build,</category>
        
        <category>project,</category>
        
        <category>tests,</category>
        
        <category>repository,</category>
        
        <category>branch,</category>
        
        <category>deploy,</category>
        
        <category>Github,</category>
        
        <category>CI,</category>
        
        <category>continuous delivery,</category>
        
        <category>continuous php,</category>
        
        <category>php,</category>
        
        <category>improvement,</category>
        
        <category>team</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>ZCPE 5.5 here we go – PHP Streams (Files/Http)</title>
        <description>&lt;p&gt;PHP has a great section about stream which is not used frequently by developers.
Streams as the PHP documentation says:&lt;/p&gt;

&lt;p&gt;“In its simplest definition, a stream is a resource object which exhibits
streamable behavior. That is, it can be read from or written to in a linear
fashion” - &lt;a href=&quot;http://php.net/manual/en/intro.stream.php&quot; target=&quot;_blank&quot;&gt;php.net&lt;/a&gt;.
In many cases streams are used  unconsciously when handling a file for example.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://www.marabesi.com/my_file.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Look the code above where we are using the &lt;strong&gt;http://&lt;/strong&gt; wrapper. Wrapper is what we use to handle a stream in PHP and there are a couple of wrappers in PHP &lt;strong&gt;file://&lt;/strong&gt;, &lt;strong&gt;http://&lt;/strong&gt;,** ftp://&lt;strong&gt;,&lt;/strong&gt; php://&lt;strong&gt;, **zlib://&lt;/strong&gt;, &lt;strong&gt;data://&lt;/strong&gt;, &lt;strong&gt;glob://&lt;/strong&gt;, &lt;strong&gt;phar://&lt;/strong&gt;, &lt;strong&gt;ssh2://&lt;/strong&gt;, &lt;strong&gt;rar://&lt;/strong&gt;,** ogg://&lt;strong&gt;, **expect://&lt;/strong&gt;. Each wrapper is used for a specific purpose in our example we used http because we are reading a file in a server, to access a file in a FTP server instead we might use &lt;strong&gt;ftp://&lt;/strong&gt; or to find files in a given pattern we might use &lt;strong&gt;glob://&lt;/strong&gt; and so on.
By default when no one is spefied PHP uses &lt;strong&gt;file://&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/foo/bar/file.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'file:///foo/bar/file.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both reproduce the same result. A interesting point is you can use PHP with any
function that handles I/O.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'file:///foo/bar/file.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fgets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Write to is very simple with streams as well.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_put_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'file:///foo/bar/file.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'text data'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-context&quot;&gt;Adding context&lt;/h2&gt;

&lt;p&gt;Some times when using &lt;strong&gt;http://&lt;/strong&gt; wrapper we need to add some context such as
headers in the request and to achieve that we need to use
&lt;a href=&quot;http://php.net/manual/en/function.stream-context-create.php&quot; target=&quot;_blank&quot;&gt;&lt;strong&gt;stream_context_create&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$http&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'method'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'GET'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'header'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Token: my_token'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_context_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Think about context as our scenario, something that we need to have to complete
an action. Once created our context we just need apply it to a stream.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file_get_contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'http://marabesi.com/file.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In our example we are trying to read a file protected by a token. To read the
file successfully we pass the token through the header in the request using our
context, if we didn’t pass the token we weren’t able to read the file. If you
aren’t convinced yet, lets move to the next example where we need to read a file
over HTTP protocol within a proxy. How would you do that?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_context_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'timeout'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'proxy'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tcp://my_proxy:3128'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'request_fulluri'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With streams we just created a context to apply in or &lt;strong&gt;file_get_contents&lt;/strong&gt;
function. But in our proxy settings we don’t use any authentication, to do that
we need to add  a header in our context.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$auth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'user:password'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;stream_context_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'http'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'timeout'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'proxy'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'tcp://my_proxy:3128'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'header'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Proxy-Authorization: Basic &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$auth&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'request_fulluri'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;consider-to-use-streams&quot;&gt;Consider to use streams&lt;/h2&gt;

&lt;p&gt;Streams are powerful and help us to build more robust PHP programs, in the past
I used to use CURL to consume a simple web service, until I discover streams.
Just look how good streams are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;No extension needed (not true for all, some of them need eg: &lt;strong&gt;ssh2://&lt;/strong&gt; and &lt;strong&gt;ogg://&lt;/strong&gt;)&lt;/li&gt;
  &lt;li&gt;Easy to use, to write we just to have to use functions like &lt;strong&gt;file_put_contenst&lt;/strong&gt; or &lt;strong&gt;fwrite&lt;/strong&gt; (depends if you are using with resource or a real file)&lt;/li&gt;
  &lt;li&gt;Handle errors are much easier&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CURL is a amazing extension but we can do better natively with PHP, but it is
up to you! Just check out the official documentation about streams
&lt;a href=&quot;http://php.net/manual/en/wrappers.php&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You may wondering where you find all context options you can use with
&lt;strong&gt;stream_create_context&lt;/strong&gt; and this question is easily answered if you visit the
PHP documentation in
&lt;a href=&quot;http://php.net/manual/en/context.php&quot; target=&quot;_blank&quot;&gt;http://php.net/manual/en/context.php&lt;/a&gt;.
There you can find all of them and use it as you wish.&lt;/p&gt;

&lt;h2 id=&quot;edit-jun25-2016&quot;&gt;Edit: Jun 25, 2016&lt;/h2&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/17RreQzcXK45Dl&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; width=&quot;100%&quot; height=&quot;485&quot; style=&quot;border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;edit-may31-2016&quot;&gt;Edit: May 31, 2016&lt;/h2&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;485&quot; style=&quot;border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;&quot; src=&quot;//www.slideshare.net/slideshow/embed_code/key/16zvfeBdq17ErP&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
</description>
        <pubDate>Thu, 21 Jan 2016 11:44:36 +0000</pubDate>
        <link>https://marabesi.com/php/zcpe/2016/01/21/zcpe-5-5-go-php-streams-files.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/zcpe/2016/01/21/zcpe-5-5-go-php-streams-files.html</guid>
        
        <category>file,</category>
        
        <category>php,</category>
        
        <category>streams,</category>
        
        <category>zcpe,</category>
        
        <category>zce,</category>
        
        <category>phar,</category>
        
        <category>ssh2,</category>
        
        <category>rar,</category>
        
        <category>data,</category>
        
        <category>data flow</category>
        
        
        <category>php</category>
        
        <category>ZCPE</category>
        
      </item>
    
      <item>
        <title>Is TDD dead ?</title>
        <description>&lt;p&gt;Recently I’ve heard about the death of TDD, but is it true ? Some argues that TDD is dead and who had used it in the
past nowadays is not using anymore. Frequently I tried to follow all the rules of TDD when I’m coding but I have to
confess, it is not easy. Though I do write unit test (and functional as well), sometimes without following the gold
circle (&lt;a href=&quot;/tdd/2015/04/19/not-using-tdd-part-1.html&quot;&gt;Write the test first see it failing and then make it pass&lt;/a&gt;).&lt;/p&gt;

&lt;h2 id=&quot;how-about-the-frameworks&quot;&gt;How about the frameworks?&lt;/h2&gt;

&lt;p&gt;The first thing I’d like to understand is why frameworks are worried about testing ? Let’s see Laravel, a very popular
framework for web artisan what they say about testing&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Laravel is built with testing in mind. In fact, support for testing with PHPUnit is included out of the box”&lt;/em&gt;
(Laravel’s website)&lt;/p&gt;

&lt;p&gt;While I’m writing this post the latest version of Laravel is the 5.2 and as we can see Laravel has many facilities to
use TDD. Find more information in the offical website
&lt;a href=&quot;https://laravel.com/docs/5.2/testing&quot; target=&quot;_blank&quot;&gt;https://laravel.com/docs/5.2/testing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The next chose one is Zend Framework 2.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“A solid unit test suite is essential for ongoing development in large projects, especially those with many people
involved. Going back and manually testing every individual component of an application after every change is
impractical. Your unit tests will help alleviate that by automatically testing your application’s components and
alerting you when something is not working the same way it was when you wrote your tests.”&lt;/em&gt; (ZF 2 official website)&lt;/p&gt;

&lt;p&gt;You can also see more details in the ZF 2 website in
&lt;a href=&quot;http://framework.zend.com/manual/current/en/tutorials/unittesting.html&quot; target=&quot;_blank&quot;&gt;http://framework.zend.com/manual/current/en/tutorials/unittesting.html&lt;/a&gt;.
By now we have two great frameworks who have a huge preoccupation in TDD and testing, now I ask to you: Is TDD dead ?&lt;/p&gt;

&lt;p&gt;Are you not convinced yet ?&lt;/p&gt;

&lt;p&gt;Symfony’s documentation goes further saying we must write unit tests and functional test to better quality of code&lt;/p&gt;

&lt;p&gt;&lt;em&gt;“Whenever you write a new line of code, you also potentially add new bugs. To build better and more reliable
applications, you should test your code using both functional and unit tests.”&lt;/em&gt;
(http://symfony.com/doc/current/book/testing.html)&lt;/p&gt;

&lt;h2 id=&quot;the-key-point&quot;&gt;The key point&lt;/h2&gt;

&lt;p&gt;The nature of any test is to guarantee that something still working after a change, or even better when we are driven by
tests where it can improve how we build things. Also we can point out the flexibility it brings to when we need to test
the entire application, imagine you have an application with twenty modules and 200 or even more functionalities, after
a change how can you guarantee that you haven’t broken anything ? Of course you could test every piece manually, but
think again, how long it will take ?&lt;/p&gt;

&lt;p&gt;Its true also that TDD philosophy says we must to write the test FIRST, which means we should write the test and then
the source code. Sometimes we don’t know how the things could fit together and how can we start by the test ? I’m not a
TDD nazi but sometimes and in some cases we can brake the rule and write the source code first and then give it a
coverage using tests. Choosing this path we can lose some goodness of TDD but it is your choice.&lt;/p&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going further&lt;/h2&gt;

&lt;p&gt;Martin Fowler, Kent Beck and David Heinemer shared they knowledge about this topic and you can find it
&lt;a href=&quot;http://martinfowler.com/articles/is-tdd-dead&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;
I do recommend to listen to it is a rich material and if you want more you can
find the video on youtube as well.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2015 01:33:11 +0000</pubDate>
        <link>https://marabesi.com/tdd/2015/12/30/is-tdd-dead.html</link>
        <guid isPermaLink="true">https://marabesi.com/tdd/2015/12/30/is-tdd-dead.html</guid>
        
        <category>test,</category>
        
        <category>TDD,</category>
        
        <category>tests,</category>
        
        <category>write,</category>
        
        <category>unit,</category>
        
        <category>Laravel,</category>
        
        <category>application,</category>
        
        <category>change,</category>
        
        <category>code,</category>
        
        <category>dead,</category>
        
        <category>software,</category>
        
        <category>tdd,</category>
        
        <category>testing,</category>
        
        <category>laravel,</category>
        
        <category>symfony</category>
        
        
        <category>TDD</category>
        
      </item>
    
      <item>
        <title>Software engineering, in the developer's hand?</title>
        <description>&lt;p&gt;If you’re a programmer, analyst or something related to I.T
(Information Technology) you probably already have heard about software
engineering. What is that? What can engineering do for software? Great part
of people who heard “engineering” thought about numbers, equations,
formulas and crazy people. Therefore software engineering is about practices,
techniques to build a great software with quality, security. maintainability
and so on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Software engineering&lt;/strong&gt; is the study and an application of &lt;strong&gt;engineering&lt;/strong&gt; to
the design, development and maintenance of &lt;strong&gt;software&lt;/strong&gt; &lt;strong&gt;[1]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Software engineering is the study and an application of engineering to the
design, development and maintenance of software &lt;strong&gt;[2]&lt;/strong&gt;.
Software engineering (SE) is concerned with developing and maintaining software
systems that behave reliably and efficiently, are affordable to develop and
maintain, and satisfy all the requirements that customers have defined for them.&lt;/p&gt;

&lt;p&gt;Inside of Software engineering we have a couple of subjects Requirements
engineering &lt;strong&gt;[3]&lt;/strong&gt;, software design, configuration management, tests,
deployment management, architecture to name a few.&lt;/p&gt;

&lt;p&gt;Modeling also is a subject of software development and is where UML comes up &lt;strong&gt;[4]&lt;/strong&gt;.
Since I started my software engineering degree I’ve been thinking in how we
can make the software development painless, I found two
amazing topics: Planing and Modeling.&lt;/p&gt;

&lt;h2 id=&quot;use-case-diagram&quot;&gt;Use case diagram&lt;/h2&gt;

&lt;p&gt;Use case diagram is one of the UML diagrams used to help to understand
scenarios of the software, this diagram has a main purpose to expose the user
point of view.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-12-07-software-engineering-in-developers-hand/u11.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-12-07-software-engineering-in-developers-hand/u11.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Above we can see the simplest use case possible. On left side we have an actor
that can represents a regular user or even another system and in the right side
we have the use case, in other words what the actor does.&lt;/p&gt;

&lt;p&gt;Our first step to get into the software rules and in the mind of our
users (it is a good deal, isn’t it?).&lt;/p&gt;

&lt;h2 id=&quot;it-is-not-just-about-images&quot;&gt;It is not just about images&lt;/h2&gt;

&lt;p&gt;Going further with use case diagram we can document each of use case. Here I
present a standard document to use thus you can adapt it to satisfy your need.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Use case name&lt;/th&gt;
      &lt;th&gt;Do something&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Actor&lt;/td&gt;
      &lt;td&gt;Actor&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Resume&lt;/td&gt;
      &lt;td&gt;An actor should do something when he is asked for&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pre-condition&lt;/td&gt;
      &lt;td&gt;The actor should be registered&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Main-flow&lt;/td&gt;
      &lt;td&gt;Actor click on the button to do something System shows up a popup with the response, it is possible to go to alternateive-flow 1 if something goes wrong System close the popup and close the window&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Alternative-flow&lt;/td&gt;
      &lt;td&gt;1) Display an error message&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Post-condition&lt;/td&gt;
      &lt;td&gt;The actor should have done at least one thing&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The problem with this approch is time. Above we have a graph comparing between
creating a diagram before code and not create a diagram.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-12-07-software-engineering-in-developers-hand/chart1.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-12-07-software-engineering-in-developers-hand/chart1.png&quot; alt=&quot;Planing chart&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As we can see it takes longer but as you can imagine the quality grows.
Why should we start to draw or planing before do code?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It improves quality&lt;/li&gt;
  &lt;li&gt;It improves maintenance&lt;/li&gt;
  &lt;li&gt;It makes easy to integrate a new member to the code base&lt;/li&gt;
  &lt;li&gt;As the time goes its cheaper to maitain the source code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;start-to-think-then-act&quot;&gt;Start to think then act&lt;/h2&gt;

&lt;p&gt;The conclusion here is don’t wait for someone to do the right thing in your
project. Here we have a example in how to use a simple UML diagram to our
project and start to thing in software engineering and everything made by a
developer.&lt;/p&gt;

&lt;p&gt;As a regular developer we always want to get our hands dirty but if you want
to step up in your career stop doing and start thinking. We have thousands of
sites who try to explain why software fails being successful&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.outsource2india.com/software/SoftwareProjectFailure.asp&quot; target=&quot;_blank&quot;&gt;outsource2india&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.infoq.com/articles/software-failure-reasons&quot; target=&quot;_blank&quot;&gt;InfoQ&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/528221/why-do-many-software-projects-fail-today&quot; target=&quot;_blank&quot;&gt;Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The most commons are bad management, lack of knowlegde about the business,
stakeholders not interested, lack of time, pressure and so on. But let’s have a
look at &lt;a href=&quot;http://www.ksg.harvard.edu/m-rcbg/ethiopia/Publications/Top%2010%20Reasons%20Why%20Systems%20Projects%20Fail.pdf&quot; target=&quot;_blank&quot;&gt;Dr. Paul Dorsey paper&lt;/a&gt;
he has more to tells us about it.&lt;/p&gt;

&lt;p&gt;If a bunch of electricians, plumbers, carpenters and contractors meet in a
field, talk for a few hours and then start building, the building will be
unstable if it even gets built at all. At one of my presentations, an audience
member shared the quip that “If building engineers built buildings with the same
care as software engineers build systems, the first woodpecker to come along
would be the end of civilization as we know it” (Dr. Paul Dorsey).&lt;/p&gt;

&lt;p&gt;Indeed its true, in I.T industry as usual project managers or any member of
the management team think that is like a manufacturing to build software, just
like add one more on the team if the dead line is close and then make it on
time, unfortunatelly it is not. Another good point he gave to us is about
developers who just got interested in programming or related subjects.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://www.webopedia.com/TERM/S/software_engineer.html&quot; target=&quot;_blank&quot;&gt;Webopedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_engineering&quot; target=&quot;_blank&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[3] &lt;a href=&quot;http://computingcareers.acm.org/?page_id=12&quot; target=&quot;_blank&quot;&gt;Computing Degrees Careers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[4] &lt;a href=&quot;http://www.uml.org&quot; target=&quot;_blank&quot;&gt;UML&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Dec 2015 23:27:30 +0000</pubDate>
        <link>https://marabesi.com/oop/software%20engineering/2015/12/07/software-engineering-in-developers-hand.html</link>
        <guid isPermaLink="true">https://marabesi.com/oop/software%20engineering/2015/12/07/software-engineering-in-developers-hand.html</guid>
        
        <category>engineering,</category>
        
        <category>graph,</category>
        
        <category>software,</category>
        
        <category>uml,</category>
        
        <category>use case</category>
        
        
        <category>OOP</category>
        
        <category>Software Engineering</category>
        
      </item>
    
      <item>
        <title>Continuous Delivery</title>
        <description>&lt;p&gt;As we know the software nowadays exists to support the business rules and I
believe that it is  a huge problem to programmers as well as everyone
involved with software development. Basically as the business grow, the software
might change as well but change isn’t the problem, it is the frequency.&lt;/p&gt;

&lt;p&gt;How can we deal with requirements today that change tomorrow? How can we
guarantee our software quality? And the most important how can we delivery
value?&lt;/p&gt;

&lt;p&gt;Value is something that the business just has after a software has been deployed
in production. Often release to production is something to worry about.&lt;/p&gt;

&lt;p&gt;Software delivers no revenue until it is in the hands of its users.
This is obvious, but in most organizations the release of software into
production is a manually intensive, error-prone,
and risky process &lt;strong&gt;[1, p. xxxiv]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;foundations&quot;&gt;Foundations&lt;/h2&gt;

&lt;p&gt;Continuous Delivery is more than a tool, it is a practice, a process.
You can’t just say, today I’m going to start to use Continuous Delivery.
It takes time and a lot of work to get here. Continuous delivery is the ability
to continuously integrate with production code, which means you must deploy
often. Continuous Delivery is about having a releasable version in any
version.&lt;/p&gt;

&lt;p&gt;Every change is, in effect, a release candidate. Every time a change
is committed to version control, the expectation is that it will pass all of
its tests, produce working code, and can be released into
production &lt;strong&gt;[1, p. 24]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;configuration-management&quot;&gt;Configuration Management&lt;/h2&gt;

&lt;p&gt;The start point is Configuration Management. It will enable us to manage all
configuration needed to an application. Nowadays is really common to have
version control in projects, but I’m sure that a team in somewhere is not using
it. To use Continuous Delivery is mandatory to have a version control such as
git or svn.&lt;/p&gt;

&lt;p&gt;Every single artifact related to the creation of your software should be under
version control &lt;strong&gt;[1, p. 33]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;It is about managing dependencies, it is almost impossible to write a software
without dependencies. Usually we do use dependencies when we are developing
something that is no the core business of the application.&lt;/p&gt;

&lt;p&gt;To display a PDF, to connect to the bank, to login with user’s social media
account and so on. Configuration is the key for any software, usually when
developing developers use their environment, Q&amp;amp;A people uses other even in
production environment could be different, it means we must have a good
management in configuration because sooner or later problems will show in
configurations and Continuous Delivery give to exactly proceed.&lt;/p&gt;

&lt;h2 id=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/h2&gt;

&lt;p&gt;Continuous integration is an interesting topic because often people confuse
Continuous integration &lt;strong&gt;[2]&lt;/strong&gt; with Continuous Delivery. It is true that in order to do
Continuous Delivery we have to have to use continuous integration.&lt;/p&gt;

&lt;p&gt;Basically to create a simple continuous integration flow there are few steps to
do. The first step is check-in regularly to you control version, suit test, keep
fast the feedback from CI(Continuous Integration) server, Jenkins &lt;strong&gt;[3]&lt;/strong&gt; and
Travis CI &lt;strong&gt;[4]&lt;/strong&gt; for example.&lt;/p&gt;

&lt;p&gt;To implement continuous integration is to create a paradigm shift in your
team. Without CI, your application is broken until you prove otherwise. With
CI, the default state of your application is working, albeit with a level of
confidence that depends upon the extent of your automated test coverage.
CI creates a tight feedback loop which allows you to find problems as soon as
they are introduced, when they are cheap to fix &lt;strong&gt;[1, p. 82]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;implementing-a-test-strategy&quot;&gt;Implementing a test strategy&lt;/h2&gt;

&lt;p&gt;One of the very first steps os Continuous Delivery is testing. To have a good
suite test in which you can easily trust to run and believe that if a green bar
shows up everything is fine, is essential.&lt;/p&gt;

&lt;p&gt;Testing is a cross-functional activity that involves the whole team, and should
be done continuously from the beginning of the project &lt;strong&gt;[1, p. 84]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We can have different types of tests and different purposes the figure below
show us how to understand it and what are each type of tests and when we apply
them.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-11-02-continuous-delivery/unit-test.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-11-02-continuous-delivery/unit-test.png&quot; alt=&quot;Testing quadrant&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-deployment-pipeline&quot;&gt;The deployment pipeline&lt;/h2&gt;

&lt;p&gt;If you aren’t familiar with CI you don’t know what a deployment pipeline
is, we use deployment pipeline to build a flow where we can deploy the source
code into production, the pipeline has steps where each one of it has a simple
purpose, for example unit test, also the steps used in the pipeline usually
were made manually in the past.&lt;/p&gt;

&lt;p&gt;At an abstract level, a deployment pipeline is an automated manifestation of
your process for getting software from version control into the hands of your
users. Every change to your software goes through a complex process on its
way to being released &lt;strong&gt;[1, p. 107]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;To build a pipeline depends in which project you’re working on.
The best pipeline for you project could be the worse from mine.
What brings us to a really unique way to develop pipelines, but of
course following some rules and best practices.&lt;/p&gt;

&lt;h2 id=&quot;build-and-deployment-scripting&quot;&gt;Build and Deployment Scripting&lt;/h2&gt;

&lt;p&gt;So far we realized we need create a new culture, test things and also automate
our deploy flow, and to achieve that we need to use a build tool.&lt;/p&gt;

&lt;p&gt;As soon as the project extends beyond a single person, spans more than a few
days, or produces more than a single executable file as its output, it demands
more control if it is not to become complex and
unwieldy &lt;strong&gt;[1, p. 143]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In Java world we have Ant and in PHP we have Phing, both are build tools and
have a lot of features. Those build tools help us when or application
gets to complicated to deploy or is taking several  steps, as a consequence we
reduce errors and increase our productivity.&lt;/p&gt;

&lt;h2 id=&quot;the-commit-stage&quot;&gt;The commit stage&lt;/h2&gt;

&lt;p&gt;Welcome to the one of most important stage in your new pipeline,
the commit stage.&lt;/p&gt;

&lt;p&gt;The commit stage represents, in more ways than one, the entrance into the
deployment pipeline. Not only is it the point at which a new release candidate
is created; it is also where many teams start when they begin to implement a
deployment pipeline &lt;strong&gt;[1, p. 169]&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Definitely if you’re going to implement CI the commit stage is the most
important step. Usually, developers send to the repository incomplete features
and some bugs as well, what makes this stage a dangerous stage. When deploying
with continuous integration we must have in mind that each commit can be
delivered to the production.&lt;/p&gt;

&lt;h2 id=&quot;book-content&quot;&gt;Book content&lt;/h2&gt;

&lt;p&gt;Continuous Delivery from Jez Humble and David Farley tell was exactly how
to apply Continuous Delivery.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Chapter 1: Foundations&lt;/li&gt;
  &lt;li&gt;Chapter 2: Configuration Management&lt;/li&gt;
  &lt;li&gt;Chapter 3: Continuous Integration&lt;/li&gt;
  &lt;li&gt;Chapter 4: Implementing a test strategy&lt;/li&gt;
  &lt;li&gt;Chapter 5: Anatomy of the Deployment Pipeline&lt;/li&gt;
  &lt;li&gt;Chapter 6: Build and Deployment Scripting&lt;/li&gt;
  &lt;li&gt;Chapter 7: The commit stage&lt;/li&gt;
  &lt;li&gt;Chapter 8: Automated Acceptance Testing&lt;/li&gt;
  &lt;li&gt;Chapter 9: Testing Nonfunctional Requirements&lt;/li&gt;
  &lt;li&gt;Chapter 10: Deploying and Release Application&lt;/li&gt;
  &lt;li&gt;Chapter 11: Managing Infrastructure and Environments&lt;/li&gt;
  &lt;li&gt;Chapter 12: Managing Data&lt;/li&gt;
  &lt;li&gt;Chapter 13: Managing Components and Dependencies&lt;/li&gt;
  &lt;li&gt;Chapter 14: Advance version control&lt;/li&gt;
  &lt;li&gt;Chapter 15: Managing Continuous Delivery&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;dont-be-regular-programmer&quot;&gt;Don’t be regular programmer&lt;/h2&gt;

&lt;p&gt;Continuous Delivery is a process that take a while for start to work.
There are many steps to follow, many things to automate, pipeline to be
created, configuration management and commit stages to watch, just to name a
few. To achieve Continuous Delivery we must persist and don’t give up.&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] Humble, J. and Farley, D., 2010. Continuous Delivery: Reliable Software Releases through Build. Test, and Deployment Automation. Addison-Wesley, pp.2013-01.&lt;/p&gt;

&lt;p&gt;[2] Continuous Integration [Online]. Available: &lt;a href=&quot;http://www.martinfowler.com/articles/continuousIntegration.html&quot; title=&quot;Continuous Integration by Martin Fowler&quot; target=&quot;_blank&quot;&gt;http://www.martinfowler.com/articles/continuousIntegration.html&lt;/a&gt;. [Accessed: 19 - Jan - 2020]&lt;/p&gt;

&lt;p&gt;[3] Jenkins user documentation [Online]. Available: &lt;a href=&quot;https://jenkins.io/doc&quot; title=&quot;Jenkins user documentation&quot; target=&quot;_blank&quot;&gt;https://jenkins.io/doc&lt;/a&gt;. [Accessed: 19 - Jan - 2020]&lt;/p&gt;

&lt;p&gt;[4] Travis CI user documentation [Online]. Available: &lt;a href=&quot;https://docs.travis-ci.com&quot; title=&quot;Travis CI user documentation&quot; target=&quot;_blank&quot;&gt;https://docs.travis-ci.com&lt;/a&gt;. [Accessed: 19 - Jan - 2020]&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Nov 2015 00:55:27 +0000</pubDate>
        <link>https://marabesi.com/review/2015/11/03/continuous-delivery.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/11/03/continuous-delivery.html</guid>
        
        <category>book,</category>
        
        <category>build,</category>
        
        <category>CI,</category>
        
        <category>commit,</category>
        
        <category>Continuous,</category>
        
        <category>Delivery,</category>
        
        <category>Chapter,</category>
        
        <category>martin fowler,</category>
        
        <category>pipeline,</category>
        
        <category>review,</category>
        
        <category>strategy,</category>
        
        <category>test,</category>
        
        <category>stage,</category>
        
        <category>software,</category>
        
        <category>martin fowler,</category>
        
        <category>Humble J. and Farley D.,</category>
        
        <category>jenkins,</category>
        
        <category>travis,</category>
        
        <category>deployment,</category>
        
        <category>deploy,</category>
        
        <category>version,</category>
        
        <category>integration,</category>
        
        <category>production,</category>
        
        <category>control</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>Algorithms, Algorithms, Algorithms .... Oh Wait!</title>
        <description>&lt;p&gt;I started a new challenge trying to find a new job here in Brazil and I thought
it would be easy since I have a great experience and I’ve been studying a lot
about software development in general(design patterns, CI, software engineering).&lt;/p&gt;

&lt;p&gt;Simple mistake. I went to a couple of interviews in many companies and I found a
huge difference on the market. Companies are looking for candidates who have
strong algorithm skills and believe or not it is my weakness.&lt;/p&gt;

&lt;p&gt;So, as nothing in this life is mean-less I decided to study and deep into
algorithm’s world.&lt;/p&gt;

&lt;h2 id=&quot;hackerrank&quot;&gt;HackerRank?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hackerrank.com&quot; target=&quot;_blank&quot;&gt;HackerRank&lt;/a&gt; is a amazing website
where you can solve algorithms problems, contest your friends or just sign up to
a challenge. There is a gamIfication where you can see your progress through
categories  and also you can check in which position you’re on rank. HackerRank
is free and you can join it any time and start to practice you algorithm skills.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Xjmqp3RN134&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br /&gt;
&lt;small&gt;HackerRank presentation on startup battle.&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;codility&quot;&gt;Codility&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://codility.com&quot; target=&quot;_blank&quot;&gt;Codility&lt;/a&gt; was a surprise for me because
I met the website from a interview I had.&lt;/p&gt;

&lt;p&gt;The system has focus on tests for software engineers and is very interesting
because Codility allows you to create a customizable test to apply, it has
categories such as bug fix(in HackerRank there isn’t a bug fix category,
but almost every category HackerRank has Codility own either), SQL, Shell, JAVA,
PHP and so on.&lt;/p&gt;

&lt;p&gt;Unfortunately to use all features from Codility you must to pay it.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/2015-10-12-algorithms-algorithms-algorithms-oh-wait/indexed.png&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;alignnone wp-image-478 size-full&quot; src=&quot;/2015-10-12-algorithms-algorithms-algorithms-oh-wait/indexed.png&quot; alt=&quot;&quot; width=&quot;1920&quot; height=&quot;1080&quot; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;small&gt;Codility dashboard&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;wrap-up&quot;&gt;Wrap up&lt;/h2&gt;

&lt;p&gt;If you have other suggestion to learn algorithms, please let me know in the
comments! Algorithms are the base to software developers and we must every day
challenge ourselves to improve this skill, it could be the difference between
you get a job or not. I hope you enjoyed this post and let’s write code!&lt;/p&gt;
</description>
        <pubDate>Mon, 12 Oct 2015 21:19:55 +0000</pubDate>
        <link>https://marabesi.com/thoughts/2015/10/12/algorithms-algorithms-algorithms-oh-wait.html</link>
        <guid isPermaLink="true">https://marabesi.com/thoughts/2015/10/12/algorithms-algorithms-algorithms-oh-wait.html</guid>
        
        <category>algorithm,</category>
        
        <category>challenge,</category>
        
        <category>codility,</category>
        
        <category>hackerrank,</category>
        
        <category>techcruch</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>Phing ? Automate all the things ! - Practical example</title>
        <description>&lt;p&gt;If you want to know what is Phing, why should you use it and see some simple
XML code please visit the part one of this post
&lt;a href=&quot;/php/2015/08/30/phing-automate-all-the-things.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The main objective here is to demonstrate how Phing fits in our day as developers
and how useful it is. Nothing better than a real example world to illustrate and
clarify our minds.&lt;/p&gt;

&lt;h2 id=&quot;starting-the-project&quot;&gt;Starting the project&lt;/h2&gt;

&lt;p&gt;Here I’m going to propose a workflow to ilustrate where Phing fits and how it
can contribute to improve our productivity.&lt;/p&gt;

&lt;p&gt;Usually when we start a new project that already exists we clone it, we run
composer and we run PHPUnit to check if its all right. It’s kinda of boring when
we have to do it manually and also we can make mistakes, for example I
can forget to update my dependencies with composer and try to run unit tests,
and get a error thrown. As a second advantage to use a build tool we can
improve our productivity, while Phing run our tasks we can do other things.
For instance let’s see how our flow is going to work:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-09-30-phing-automate-all-the-things-practical-example/flow.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-09-30-phing-automate-all-the-things-practical-example/flow.png&quot; alt=&quot;Phing flow&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Describing it into step we have:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Cloning repository&lt;/li&gt;
  &lt;li&gt;Install/Update dependencies&lt;/li&gt;
  &lt;li&gt;Run unit tests&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;buildxml&quot;&gt;Build.xml&lt;/h2&gt;

&lt;p&gt;First of all we need to create targets to execute tasks. Let’s start with the
clone target.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;First Example&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;description=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Clone, phpunit&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clone&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;appdir&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;repodir&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./app&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;repo&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/marabesi/laravel-pagseguro.git&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clone&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;echo&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;msg=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cloning repository ${repo} please wait&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;gitclone&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;repository=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${repo}&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;targetPath=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${appdir}/app&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see now we have a simple target that is going to clone the github
repository and save it into &lt;strong&gt;app&lt;/strong&gt; folder as specified in
&lt;strong&gt;repodir&lt;/strong&gt; property . The repository is defined in the
&lt;strong&gt;repo&lt;/strong&gt; property name.&lt;/p&gt;

&lt;p&gt;Properties can be defined as a simple tag(static), or it can be defined through
an properties file. To use it we must use ${my_property_name} sintax.&lt;/p&gt;

&lt;p&gt;Defining property file&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;file=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project.properties&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Defining static property&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;local.property&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can override properties using -D as argument followed by the property name
in the command line.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;phing &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; build-file.xml &lt;span class=&quot;nt&quot;&gt;-Dlocal&lt;/span&gt;.property&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;testing
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see we overrided our &lt;strong&gt;local.property&lt;/strong&gt; with the value testing,
when we run that instead of &lt;strong&gt;hello&lt;/strong&gt; Phing will use &lt;strong&gt;testing&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The tag &lt;strong&gt;target&lt;/strong&gt; indicates to us an project component, in other words to each
component (or each task that we want to run) we have to create and target.
Targets are the simplest container to be executed by Phing Finally in &lt;strong&gt;project&lt;/strong&gt;
tag we have the attribute &lt;strong&gt;default&lt;/strong&gt;, and as the name says, it is the default
target Phing is going to run when we execute the build file.&lt;/p&gt;

&lt;p&gt;So far we have just one target and we need to implement more two to update our
dependencies and run our unit test.&lt;/p&gt;

&lt;h2 id=&quot;optional-tasks-dependencies&quot;&gt;Optional Tasks (Dependencies)&lt;/h2&gt;

&lt;p&gt;Phing has various built-in tasks that we can use, known as optional tasks.
Optional tasks are simple tasks that aren’t related to the core of Phing and
aren’t tasks needed to build a project, for example, I use git in my project but
you can use svn, so the git task is optional for you as svn is optional for me.&lt;/p&gt;

&lt;p&gt;Here we have the right fit to update our composer dependencies task.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;composerupdate&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depends=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clone&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;composer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;composer=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;./composer.phar&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;command=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;install&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;arg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;-d&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;arg&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;path=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${repodir}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/composer&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The interesting part here is that we have a attribute in our target tag called depends,
it means that Phing is going to run this target before run this
(if no target specified in depends is found an error is thrown), in other words,
we must have a cloned repository to update our dependencies, so it makes sense
to depend on clone task.&lt;/p&gt;

&lt;p&gt;For further information about optional tasks refer to
&lt;a href=&quot;https://www.phing.info/docs/stable/hlhtml/index.html#app.optionaltasks&quot; target=&quot;_blank&quot;&gt;Phing’s official documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;optional-tasks-unit-test&quot;&gt;Optional Tasks (Unit test)&lt;/h2&gt;

&lt;p&gt;In the same mood of  composer we have phpunit optinal task to run:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;phpunittests&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;depends=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;clone, composerupdate&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;phpunit&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;pharlocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${appdir}/phpunit.phar&quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;codecoverage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; 
             &lt;span class=&quot;na&quot;&gt;bootstrap=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${testdir}/bootstrap.php&quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;haltonfailure=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;
             &lt;span class=&quot;na&quot;&gt;printsummary=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;batchtest&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;fileset&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dir=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${testdir}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;lt;include&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;**/*Test.php&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;/fileset&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/batchtest&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/phpunit&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And once again we take advantage of Phing with the optional task phpunit which
provides a easy way to run unit tests using phpunt.&lt;/p&gt;

&lt;h2 id=&quot;automate-automate-automate&quot;&gt;Automate, automate, automate!&lt;/h2&gt;

&lt;p&gt;With a fewer steps we automated our project, with Phing we can do much more and
now is up to you keep automating. Play around with core tasks and optional
tasks as well, Phing has a lot more to explore!&lt;/p&gt;

&lt;p&gt;You can see full build file used in this post
&lt;a href=&quot;https://gist.github.com/marabesi/b3653f7dd290c6396b2d&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Sep 2015 04:46:25 +0000</pubDate>
        <link>https://marabesi.com/php/2015/09/30/phing-automate-all-the-things-practical-example.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/09/30/phing-automate-all-the-things-practical-example.html</guid>
        
        <category>automate,</category>
        
        <category>composer,</category>
        
        <category>dependency,</category>
        
        <category>git,</category>
        
        <category>github,</category>
        
        <category>phing,</category>
        
        <category>php,</category>
        
        <category>phpunit,</category>
        
        <category>target,</category>
        
        <category>test,</category>
        
        <category>unit</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Phing? Automate all the things!</title>
        <description>&lt;p&gt;Phing is a tool based on Apache ant to automate tasks. Sometimes we as
developers do repetitive tasks such as copy from a host to another, checkout
new branches even deploying to a new server, in this scenario Phing comes to
stage to help us to automate everything.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PH&lt;/strong&gt;ing &lt;strong&gt;I&lt;/strong&gt;s &lt;strong&gt;N&lt;/strong&gt;ot &lt;strong&gt;GN&lt;/strong&gt;U make; it’s a PHP project build system or build tool based on Apache Ant. You can do anything with it that you could do with a traditional build system like GNU make, and its use of simple XML build files and extensible PHP “task” classes make it an easy-to-use and highly flexible build framework. Features include running PHPUnit and SimpleTest unit tests (including test result and coverage reports), file transformations (e.g. token replacement, XSLT transformation, Smarty template transformations), file system operations, interactive build support, SQL execution, CVS/SVN operations, tools for creating PEAR packages, documentation generation (DocBlox, PhpDocumentor) and much more (&lt;a href=&quot;https://www.phing.info/docs/guide/stable/pr01.html&quot;&gt;phing.info&lt;/a&gt;.)
From official documentation, Phing is defined as:&lt;/p&gt;

&lt;p&gt;Phing is a project build system based on Apache ant (See &lt;a href=&quot;https://www.phing.info/docs/guide/stable/app.bibliography.html#ant&quot;&gt;ant&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;You can do anything with Phing that you could do with a traditional build system
like Gnu make (See &lt;a href=&quot;https://www.phing.info/docs/guide/stable/app.bibliography.html#gnumake&quot;&gt;gnumake&lt;/a&gt;), and Phing’s use of simple XML build files and extensible PHP task classes make it an easy-to-use and highly flexible build framework. (&lt;a href=&quot;https://www.phing.info/docs/guide/stable/ch.introduction.html&quot;&gt;phing.info&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;why-should-i-use-phing&quot;&gt;Why should I use Phing?&lt;/h2&gt;

&lt;p&gt;Developers are lazy, right? Better, good developers are lazy. We know that humans are more likely to make mistakes doing repetitive tasks even in computers. Usually in projects we have a process to do before to start to code. Checkout the repository, run unit tests, run integration tests, create coverage and finally start to code (this process was created with example purposes, you could have a process much bigger or smaller than that). It looks boring, isn’t it? Maybe for just one project its fine to do manually those steps, but think about two, three or four projects. Shall we repeat every step in each project manually? What will happened if we forget to run unit tests and then start to code? How about the integration test?&lt;/p&gt;

&lt;p&gt;Phing comes on stage to helps us to automate everything! With Phing is easy to automate boring tasks such as cloning a repository and run unit tests. Of course Phing is much stronger than that. Phing can integrate with a bunch of tools such as &lt;a href=&quot;http://dbdeploy.com/&quot; target=&quot;_blank&quot;&gt;dbDeploy&lt;/a&gt; and &lt;a href=&quot;https://jenkins-ci.org/&quot; target=&quot;_blank&quot;&gt;Jenkins&lt;/a&gt; to make our life easier.
Phing has a great documentation and a great folks involved on it, you can find more about it in in the official documentation &lt;a href=&quot;https://www.phing.info/docs/guide/stable/index.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt; or in the offical website &lt;a href=&quot;https://www.phing.info/&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Also if you want to contribute they are open source and you can check the github repository &lt;a href=&quot;https://github.com/phingofficial/phing&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;First of all, we must have Phing installed. Please go ahead and
check &lt;a href=&quot;https://www.phing.info/trac/wiki/Users/Installation&quot;&gt;here&lt;/a&gt;
to installation process through pear, composer or phar.&lt;/p&gt;

&lt;p&gt;Phing uses XML to compose tasks. Every build.xml file must have an root node
called &lt;strong&gt;project&lt;/strong&gt;, with an atributte called &lt;strong&gt;default&lt;/strong&gt;(you have to fill
&lt;strong&gt;default&lt;/strong&gt; with your default task you would like to run when Phing is activated,
you can see in the example below I use &lt;strong&gt;dist&lt;/strong&gt;, it must be the same name of
one &lt;strong&gt;target&lt;/strong&gt;) and at least one child node called &lt;strong&gt;target&lt;/strong&gt;.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;project&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Basic Task&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;default=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;target&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dist&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/target&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/project&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Output :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: target &lt;span class=&quot;s1&quot;&gt;'dist'&lt;/span&gt; has no tasks or dependencies

Basic Task &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; dist:


BUILD FINISHED

Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0.1204 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Actually our build.xml doesn’t do anything but you can read Phing documentation
to find out core tasks and how to create your own as well.&lt;/p&gt;

&lt;h2 id=&quot;running-phing-a-little-trick&quot;&gt;Running Phing, a little trick&lt;/h2&gt;

&lt;p&gt;Phing assumes by default a build.xml  to run. In other words if you don’t
specify with -f what file you want to run, Phing will run build.xml
automatically.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;phing                //will assume build.xml

phing &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; myfile.xml  //will run myfile.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;going-further&quot;&gt;Going further&lt;/h2&gt;

&lt;p&gt;I would like to recommend you dear reader, to have a quickly view
&lt;a href=&quot;https://www.phing.info/docs/guide/stable/app.coretasks.html&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;,
in the core tasks. They are really important, because with core tasks
(&lt;strong&gt;MkdirTask&lt;/strong&gt; to create directories, &lt;strong&gt;DeleteTask&lt;/strong&gt; to remove directories,
&lt;strong&gt;EchoTask&lt;/strong&gt; to show an message, &lt;strong&gt;CopyTask&lt;/strong&gt; to copy files)you have many tasks
already in Phing, you just have to use it, and you don’t have to re-create it.&lt;/p&gt;

&lt;p&gt;Also looking further you will need optional tasks. Optional tasks are tasks
not related with the core of Phing but it can help you a lot. To name a few Phing
has optional task called &lt;strong&gt;PhpLintTask&lt;/strong&gt; which provide a easy way to check
&lt;a href=&quot;http://php.net&quot; target=&quot;_blank&quot;&gt;PHP&lt;/a&gt; sintax through files (Phing has
an javascript version of this task called &lt;strong&gt;JslLintTask&lt;/strong&gt;), &lt;strong&gt;TarTask&lt;/strong&gt; to create
tarballs from files or directories, &lt;strong&gt;ZipTask&lt;/strong&gt; to create .zip files from files
or directories and much more. Go ahead and check Phing
&lt;a href=&quot;https://www.phing.info/docs/guide/stable/index.html&quot; target=&quot;_blank&quot;&gt;documentation&lt;/a&gt;
for more information.&lt;/p&gt;

&lt;p&gt;To understand what is the difference between core and optional tasks just keep
in mind the most essential task we do in our day, for example, creating folders,
giving user feedback, logging and so on those are essensial tasks that every
project must have and is not dependent of the used feature, and in Phing’s world
are known as &lt;strong&gt;Core Tasks&lt;/strong&gt;. Otherwise &lt;strong&gt;Optional tasks&lt;/strong&gt; comes in a different
approach, lets say for instance I’m going to use phpunit to run my unit test
suit, but you can use behat or phpspec and those are your choice, and thats why
they are called Optional Tasks.&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Aug 2015 22:46:48 +0000</pubDate>
        <link>https://marabesi.com/php/2015/08/30/phing-automate-all-the-things.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/08/30/phing-automate-all-the-things.html</guid>
        
        <category>automate,</category>
        
        <category>gnu,</category>
        
        <category>phing,</category>
        
        <category>php,</category>
        
        <category>tasks,</category>
        
        <category>xml</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>ZCPE 5.5 here we go – PHP Basics (Language constructs)</title>
        <description>&lt;p&gt;Zend divided language constructs in three main categories &lt;strong&gt;output construct&lt;/strong&gt;,
&lt;strong&gt;evaluation construct&lt;/strong&gt; and &lt;strong&gt;others constructs&lt;/strong&gt;, you can find this division
in zend &lt;a href=&quot;http://www.zend.com/en/services/certification/php-certification-study-guide&quot;&gt;study guide for PHP 5.5 exam&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;output&quot;&gt;Output&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Construct&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;die / exit&lt;/td&gt;
      &lt;td&gt;Used to output a result and then terminate the running script&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;echo / print&lt;/td&gt;
      &lt;td&gt;Used to output a result&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;return&lt;/td&gt;
      &lt;td&gt;Used to halt a execution of a function or a script&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;evaluation&quot;&gt;Evaluation&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Construct&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;empty&lt;/td&gt;
      &lt;td&gt;Used to identify if an variable is empty (without an value)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;eval&lt;/td&gt;
      &lt;td&gt;Used to evaluate string content&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;include/include_once&lt;/td&gt;
      &lt;td&gt;Used to include a file (using this just a warning is thrown if the file not exists)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;require/require_once&lt;/td&gt;
      &lt;td&gt;Used to include a file (using this a fatal error is thrown)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;others&quot;&gt;Others&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Construct&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;isset&lt;/td&gt;
      &lt;td&gt;Used to identify if a variable exists&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;unset&lt;/td&gt;
      &lt;td&gt;Used to unset(“delete”) an existing variable&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;list&lt;/td&gt;
      &lt;td&gt;Used to make easier to use an array values&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;what-isthe-difference&quot;&gt;What is the difference?&lt;/h2&gt;

&lt;p&gt;You can argue that those language constructs are just regular functions and
they haven’t anything in special, but actually they have. In PHP language
constructs can be used with or without parentheses, so let’s illustrate:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'foo/bar.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;//valid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'foo/bar.php'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//valid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both are correct to use, but it is recommended to do not use with parentheses
for the sake of good practice. Therefore we aren’t allowed to use any function
provided by PHP without parentheses:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;array_merge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//valid&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;array_merge&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//invalid&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some posts in the internet said language constructs are faster than built-in
functions, but we must remember that it is a matter of microseconds and I think
it is worthless to bother about it.&lt;/p&gt;
</description>
        <pubDate>Wed, 26 Aug 2015 04:01:47 +0000</pubDate>
        <link>https://marabesi.com/php/zcpe/2015/08/26/zcpe-5-5-here-we-go-php-basics-language-constructs.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/zcpe/2015/08/26/zcpe-5-5-here-we-go-php-basics-language-constructs.html</guid>
        
        <category>die,</category>
        
        <category>echo,</category>
        
        <category>empty,</category>
        
        <category>eval,</category>
        
        <category>exit,</category>
        
        <category>include,</category>
        
        <category>include_once,</category>
        
        <category>isset,</category>
        
        <category>language construct,</category>
        
        <category>list,</category>
        
        <category>php,</category>
        
        <category>print,</category>
        
        <category>require,</category>
        
        <category>require_once,</category>
        
        <category>return,</category>
        
        <category>unset,</category>
        
        <category>zcpe,</category>
        
        <category>certification</category>
        
        
        <category>php</category>
        
        <category>ZCPE</category>
        
      </item>
    
      <item>
        <title>ZCPE 5.5 here we go - PHP Basics (Variable variables)</title>
        <description>&lt;p&gt;PHP Basics is the first topic of ZCPE where is covered many topics and one of
them is variable variables.&lt;/p&gt;

&lt;p&gt;Variable variables in PHP is useful but must be used with careful. In this post
I’ll try to explain to you how to use the simplest form of variable variables.&lt;/p&gt;

&lt;p&gt;When you start to learn PHP often you are told that a variable start with an
dollar sign ($) and it must be followed by and underscore (_) or an character
and not an numeric value. With that information is clear to know which below
is not a valid PHP variable, right?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$_abc&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$_1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$1_&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$$a&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;variable-variables&quot;&gt;Variable variables&lt;/h2&gt;

&lt;p&gt;I guess you have noticed a weird notation in the given example as I did when
I first see that. The option 4 has a strange notation with two dollars sign in
the name of the variable, is that possible? is it a normal notation in PHP?
When should I use this? Yes! We can do that in PHP but we should take care
when use it.&lt;/p&gt;

&lt;p&gt;The easiest way to understand is giving you an simple example, probably you’ll
read this twice before completely get that but it is normal and I’d recommend
you play around with variable variables as well.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;PHP will try to interpreter what we have inside $a as a variable, so when we use
$$a PHP expects that we have an variable with the same name of the content inside
$a, in this case ‘hello’, otherwise PHP will throw a notice (Undefined variable).&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'world'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Nothing new just a normal variable in PHP within a string.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'hello'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we can pay attention to the variable $a that has the string
hello which is the same name of our variable $hello with world
inside. In the next step PHP will expects an existing variable called $hello.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$$a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here is where the magic happens $$a in this context means $hello because PHP
will interpreter the content of $a as a variable in this case hello. $hello has
a string world inside resulting in the output world.&lt;/p&gt;

&lt;h2 id=&quot;is-it-a-mistake&quot;&gt;is it a mistake?&lt;/h2&gt;

&lt;p&gt;Without any knowledge of variable variables in PHP you could think that the guy
how left the the code made a mistake or just typed twice the dollar sign. To
be more specific with that kind of code PHP allows us to use curly braces with
that.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;${$a}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using curly braces the result is the same and you re-force that you want to use
variable variables and also turns it more readable to the guy who is going to
maintain your code.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2015 23:44:09 +0000</pubDate>
        <link>https://marabesi.com/php/zcpe/2015/07/28/zcpe-5-5-here-we-go-php-basics-variable-variables.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/zcpe/2015/07/28/zcpe-5-5-here-we-go-php-basics-variable-variables.html</guid>
        
        <category>certification,</category>
        
        <category>certified,</category>
        
        <category>php,</category>
        
        <category>php5.5,</category>
        
        <category>variable variables,</category>
        
        <category>zcpe,</category>
        
        <category>zce,</category>
        
        <category>zend,</category>
        
        <category>certification</category>
        
        
        <category>php</category>
        
        <category>ZCPE</category>
        
      </item>
    
      <item>
        <title>GitHub badges! (PHP repository)</title>
        <description>&lt;p&gt;Disclaimer : If you don’t know what are badges I’d suggest a quick view to
&lt;a href=&quot;https://poser.pugx.org&quot; target=&quot;_blank&quot;&gt;https://poser.pugx.org&lt;/a&gt; which
is a open source project with badges for PHP projects. Also for this post I’m
assume you have a experience with GitHub already and know how to commit, push,
pull or use GitHub from web interface.&lt;/p&gt;

&lt;p&gt;Repository used for this post you can find
&lt;a href=&quot;https://github.com/marabesi/gnrephp&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;. Badges that we’re going to use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build Status&lt;/li&gt;
  &lt;li&gt;Coverage Status&lt;/li&gt;
  &lt;li&gt;Total Downloads&lt;/li&gt;
  &lt;li&gt;Latest Stable Version&lt;/li&gt;
  &lt;li&gt;Latest Unstable Version&lt;/li&gt;
  &lt;li&gt;License&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;final-result&quot;&gt;Final result&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/badges2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/badges2.png&quot; alt=&quot;GitHub badges&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;travis-ci&quot;&gt;Travis CI&lt;/h2&gt;

&lt;p&gt;First step is go to
&lt;a href=&quot;https://travis-ci.org&quot; target=&quot;_blank&quot;&gt;https://travis-ci.org&lt;/a&gt; and
click in Sign in with GitHub and Travis will ask you to sign with
your GitHub account. Fill the fields Username/Email and Password and click in
sign in (Don’t forget to allow Travis in your GitHub account). Now we have to go
to our profile in Travis and enable which repository we’re going to build.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/travis2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/travis2.png&quot; alt=&quot;Travis CI repository list&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any issue doing this follow the step in travis CI website!&lt;/p&gt;

&lt;h2 id=&quot;travisyml&quot;&gt;.travis.yml&lt;/h2&gt;

&lt;p&gt;We have to tell Travis which configuration we’re going to use and to do that we
use a file called .travis.yml and push it to the root of the repository.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.3&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.4&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.6&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hhvm&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer install&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;readmemd&quot;&gt;README.md&lt;/h2&gt;

&lt;p&gt;The last step to use the &lt;strong&gt;Build Badge&lt;/strong&gt; is update the file README.md
in your GitHub repository.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/travis5.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/travis5.png&quot; alt=&quot;Getting link to the badge&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1. click on Build Passing in the left side of your repository name and a modal will appear.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Select which branch you’re going to use&lt;/li&gt;
  &lt;li&gt;Select Markdown in the select box&lt;/li&gt;
  &lt;li&gt;Copy the text in the text area&lt;/li&gt;
  &lt;li&gt;Create a file in your repository called README.md (or just update it if exists) with the copied text in the step 4.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;coveralls&quot;&gt;Coveralls&lt;/h2&gt;

&lt;p&gt;To use coverage badge we’re going to use
&lt;a href=&quot;https://coveralls.io&quot; target=&quot;_blank&quot;&gt;https://coveralls.io&lt;/a&gt; and as we
did with Travis we have to allow coveralls in our GitHub account. Go to
&lt;a href=&quot;https://coveralls.io&quot; target=&quot;_blank&quot;&gt;https://coveralls.io&lt;/a&gt; and click
in Free GitHub Sign-in. After a successful login click in add repos.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/coverall.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/coverall.png&quot; alt=&quot;Adding repositories in coveralls.io&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Just like Travis select which one you’re going yo use.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/coveralls3.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/coveralls3.png&quot; alt=&quot;Coveralls repository list&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;travisyml-1&quot;&gt;.travis.yml&lt;/h2&gt;

&lt;p&gt;To use coveralls.io you must have a test suite. Here we’re going to use phpunit
to execute our tests. We must update our .travis.yml file to execute our tests
and generate coverage in a XML format for coveralls.io.&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;php&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.3&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.4&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.5&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5.6&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hhvm&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;composer install&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mkdir -p build/logs&lt;/span&gt; 
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;phpunit --coverage-clover build/logs/clover.xml&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;after_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;php vendor/bin/coveralls -v&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see we add some extra tasks to Travis, just update yours
.travis.yml and push it to the repository.&lt;/p&gt;

&lt;h2 id=&quot;coverallsyml&quot;&gt;.coveralls.yml&lt;/h2&gt;

&lt;p&gt;To get coveralls working correctly we should create a file called .coveralls.yml
with the following content:&lt;/p&gt;

&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;src_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that push it to your repository. Otherwise you’ll get an
InvalidArgumentException from Travis build:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/error-co.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/error-co.png&quot; alt=&quot;Coveralls error&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;readmemd-1&quot;&gt;README.md&lt;/h2&gt;

&lt;p&gt;Now we have Travis working together with coveralls.io. We need just
to update our README.me with the badge.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/c-badge.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/c-badge.png&quot; alt=&quot;Coveralls report&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Go to https://coveralls.io/repos&lt;/li&gt;
  &lt;li&gt;Select your repository in the list&lt;/li&gt;
  &lt;li&gt;In the rightmost look at the bottom and find Readme Badge and click on it.&lt;/li&gt;
  &lt;li&gt;Wen the pop-up shows select the Markdown text&lt;/li&gt;
  &lt;li&gt;Update your README.md on GitHub with this text&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;important&quot;&gt;IMPORTANT&lt;/h2&gt;

&lt;p&gt;To follow the next section, your repository must be hosted at
&lt;a href=&quot;https://packagist.org&quot; target=&quot;_blank&quot;&gt;https://packagist.org&lt;/a&gt; otherwise it
wont work.&lt;/p&gt;

&lt;h2 id=&quot;total-downloadslatest-stable-versionlatest-unstable-versionlicense&quot;&gt;Total Downloads, Latest Stable Version, Latest Unstable Version, License&lt;/h2&gt;

&lt;p&gt;Now we have our two badges(Build with Travis and Code Coverage with Coveralls)
in our repository, but we have 4 badges to be done yet. The reason I left those
for last is simple: you can find them at
&lt;a href=&quot;https://poser.pugx.org&quot; target=&quot;_blank&quot;&gt;https://poser.pugx.org&lt;/a&gt;.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Type your repository name in the text box&lt;/li&gt;
  &lt;li&gt;Select which you want to and select the Markdown text or click in Copy to clipboard&lt;/li&gt;
  &lt;li&gt;Update your README.md in your repository&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-06-28-github-badges-php-repository/poser-c.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-06-28-github-badges-php-repository/poser-c.png&quot; alt=&quot;Poser website&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;InvalidArgumentException with Coveralls - &lt;a href=&quot;https://github.com/lemurheavy/coveralls-public/issues/45&quot; target=&quot;_blank&quot;&gt;https://github.com/lemurheavy/coveralls-public/issues/45&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Adding Build Badge with Travis - &lt;a href=&quot;http://stackoverflow.com/questions/19810386/showing-travis-build-status-in-github-repo&quot; target=&quot;_blank&quot;&gt;http://stackoverflow.com/questions/19810386/showing-travis-build-status-in-github-repo&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Jun 2015 23:27:09 +0000</pubDate>
        <link>https://marabesi.com/php/2015/06/28/github-badges-php-repository.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/06/28/github-badges-php-repository.html</guid>
        
        <category>badges,</category>
        
        <category>build,</category>
        
        <category>CI,</category>
        
        <category>coveralls,</category>
        
        <category>downloads,</category>
        
        <category>git,</category>
        
        <category>github,</category>
        
        <category>license,</category>
        
        <category>packagist,</category>
        
        <category>php,</category>
        
        <category>poser,</category>
        
        <category>travis,</category>
        
        <category>travis CI</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>ARE YOU NOT USING TDD?! – PART || (Legacy code)</title>
        <description>&lt;p&gt;In the part one I introduced the life cycle of TDD
&lt;a href=&quot;/tdd/2015/04/19/not-using-tdd-part-1.html&quot;&gt;you can see here&lt;/a&gt; and how it works, but often people come to me and ask about the legacy code how can we start
using TDD with legacy code? Should we start from zero? Should we use baby-steps?&lt;/p&gt;

&lt;p&gt;I decided to share my experience in how I used TDD in legacy code and how I did
to get this task done also I have to say many thanks to my friend Alexandre
Cintra who helped my a lot giving me gold tips.&lt;/p&gt;

&lt;h2 id=&quot;edit-jun-17-2015&quot;&gt;Edit: Jun 17, 2015&lt;/h2&gt;

&lt;p&gt;You can find useful information in my slides below. It was created for
&lt;a href=&quot;http://www.meetup.com/pt/THT-Things-Hacker-Team/events/222831499&quot; target=&quot;_blank&quot;&gt;my talk at Samsung Ocean&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; style=&quot;border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;&quot; src=&quot;//www.slideshare.net/slideshow/embed_code/key/vO17674rb2GiBI&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt; &lt;/iframe&gt;

&lt;h2 id=&quot;edit-july28-2015&quot;&gt;Edit: July 28, 2015&lt;/h2&gt;

&lt;p&gt;Legacy software systems . . . were developed decades ago and have been
continually modified to meet changes in business requirements and computing
platforms. The proliferation of such systems is causing headaches for
large organizations who find them costly to maintain and risky to evolve -
Dayani-Fard&lt;/p&gt;

&lt;h2 id=&quot;legacy-code-the-nightmare-of-everyone&quot;&gt;Legacy code the nightmare of everyone&lt;/h2&gt;

&lt;p&gt;Doesn’t matter if you are in a big company or a small one it is normal to have
legacy code and you will need to maintain and even do some improvements as the
request of our client comes.&lt;/p&gt;

&lt;p&gt;How can I identify legacy that is impossible to test?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Many responsibilities: Usually legacy code has many lines between 1000 and
2000 (I’ve seen many with 3000) and do everything in one file database
connection, data persistence, business logic, IO are a couple of examples.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Without code pattern: A “great” feature of legacy code is the lack of
pattern in its code. When you touch the code base you usually see huge
files and also blank files, once I was just playing around in a company
repository and I saw a model without one single line just with its declaration
therefore in the controller was everything else the access data, DAO and
even the queries were wrote in the controller!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyLegacyClass&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	
	    &lt;span class=&quot;c1&quot;&gt;// omitted code with 50 lines also construct method and some properties was took off&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getModalRodoviario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rodo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;printXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;asXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setIdeValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Cte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$ide&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ide'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosConfIde&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//omitted code 31 lines&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confToma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            		&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;estadosIBGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chaveAcesso&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;calculaChaveAcesso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'-'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dhEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$Cte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Empresa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entidade'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ent_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'serie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nCT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpEmis'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cCT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$Cte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cte_chave&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chaveAcesso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$Cte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cDV'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digVer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CTe'&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chaveAcesso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confIde&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;array_key_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosConfIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosConfIde&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;c1&quot;&gt;//		exit;&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma4'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosTomador&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;//omitted code 9 lines&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_data_ent_cont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Y-m-d H:i:s'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_justificativa_cont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Justificativa teste&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosTomador&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$campo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mensagemErro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$campo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$mensagemErro&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$dePara&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_telefone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_nro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_cpl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_bairo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_cod_mun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_mun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_uf_sigla'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            		&lt;span class=&quot;c1&quot;&gt;//'CEP' =&amp;gt; 'toma_end_cep',&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'cPais'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_cod_end_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xPais'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_end_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'toma_cont_email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            		&lt;span class=&quot;c1&quot;&gt;//'xJust' =&amp;gt; 'toma_justificativa_cont'&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_cpf_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_cpf_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_cpf_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_fantasia'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xFant'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_fantasia'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_ie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_ie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_telefone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma_telefone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$enderToma&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$toma4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderToma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dePara&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$de&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$enderToma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$de&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$para&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		 
            		&lt;span class=&quot;cm&quot;&gt;/*if(!empty($confToma4['toma_data_ent_cont']))
            		 $enderToma-&amp;gt;addChild('dhCont', implode('T', explode(' ', $confToma4['toma_data_ent_cont'])));*/&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$toma03&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ide&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma03'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$toma03&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'toma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confToma&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setCompl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;c1&quot;&gt;//		if($this-&amp;gt;validaInputacao($config)) {&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'compl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confComplPrimeiroBloco&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
					&lt;span class=&quot;s1&quot;&gt;'xCaracAd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
					&lt;span class=&quot;s1&quot;&gt;'xCaracSer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
					&lt;span class=&quot;s1&quot;&gt;'xEmi'&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confComplPrimeiroBloco&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xpass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$nodesPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xPass'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_sigla_aeroporto_passagem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xDest'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_sigla_aeroporto_destino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xRota'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_codigo_rota_entrega'&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
							
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodesPass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodePass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xpass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'semData'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'comData'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'noPeriodo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semHora&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'semHora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'comHora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'noInter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCampo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xTexto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCampo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xTexto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;c1&quot;&gt;//		}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setEmitValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$emitDePara&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'nome_razao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;s1&quot;&gt;'xFant'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fantasia'&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;nv&quot;&gt;$camposObrigatorios&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//omitted code 3 lines&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;nv&quot;&gt;$emit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'emit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$emitDePara&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					
				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;nv&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;array_key_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$camposObrigatorios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$camposObrigatorios&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

			&lt;span class=&quot;nv&quot;&gt;$emitEnderDePara&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cod_municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					
				&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosEnder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
				&lt;span class=&quot;c1&quot;&gt;//omitted code 7 lines&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					
				&lt;span class=&quot;nv&quot;&gt;$enderEmit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$emit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderEmit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					
				&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$emitEnderDePara&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
					&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$enderEmit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodeValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;array_key_exists&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosEnder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$camposObrigatoriosEnder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					
				&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setRemValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;limpaEspacos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'000000000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TIPO_AMBIENTE_CTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xFant'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xFant'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])){&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderReme'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderReme&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	
            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setDestValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'000000000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TIPO_AMBIENTE_CTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderDest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderDest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setRecValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'receb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'000000000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TIPO_AMBIENTE_CTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderReceb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$enderRec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setExpValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'exped'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cpfcnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_numeric&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'000000000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;TIPO_AMBIENTE_CTE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'CT-E EMITIDO EM AMBIENTE DE HOMOLOGACAO - SEM VALOR FISCAL'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'enderExped'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xLgr'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'logradouro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCpl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'complemento'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xBairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'bairro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xMun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'municipio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CEP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cod_pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$enderExp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xPais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pais'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$exp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'email'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setInfCteComp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCteComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infCteComp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCteComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setInfCteAnu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chCte'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCteAnu&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infCteAnu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCteAnu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chCte'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chCte'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCteAnu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setAutXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$autXML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'autXML'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cda_cpf_cnpj_autori'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$autXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cda_cpf_cnpj_autori'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$autXML&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cda_cpf_cnpj_autori'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setModalRodoviario&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infModal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rodo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rodo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RNTRC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RNTRC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dPrev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dPrev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lota'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lota'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CIOT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CIOT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CIOT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xocc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$xocc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'serie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_serie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xocc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nOcc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xocc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_demi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xocc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'emiOcc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_cint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cInt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_cint'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_ie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Uf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'uf_sigla'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$emiOcc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$occ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'occ_fone'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valePed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valePed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valePed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xValePed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'valePed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$xValePed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJForn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vpd_cnpj_forn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xValePed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nCompra'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vpd_ncompra'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vpd_cnpj_pg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$xValePed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJPg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vpd_cnpj_pg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$xValePed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vValePed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valePed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vpd_valor_vale_pedagio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_cod_interno'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cInt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_cod_interno'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RENAVAM'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_renavam'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'placa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_placa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// remove qualquer espa\E7o branco&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tara'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_tara'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'capKG'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_capacidade_kg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'capM3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_capacidade_mc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpProp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_proprietario'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpVeic'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculoTipo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_codigo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpRod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculoRodado'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvr_codigo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpCar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculoCarroceria'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvc_codigo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Uf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'uf_sigla'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_proprietario'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'P'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'prop'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$infoVeicProp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CteVeiculo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;consultaVeiculo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confVeic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteVeiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cve_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				 
            				&lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$infoVeicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteEmpresaVeiculoProprietarioAtrb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$veicPropTipo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteEmpresaVeiculoProprietarioTipo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            				 
            				&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_tipo_pessoa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'FIS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_cpf_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CNPJ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_cpf_cnpj'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'RNTRC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_rntrc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_nome_razao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'IE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpa_rg_ie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'UF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Uf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'uf_sigla'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$prop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpProp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$veicPropTipo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'evpt_codigo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infLacre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$lacRodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacRodo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$lacRodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nLacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infLacre&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cmrl_num_lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'moto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'moto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'moto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infMoto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$moto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$rodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'moto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$moto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infMoto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteMotorista'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mot_nome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$moto&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CPF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infMoto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteMotorista'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mot_cpf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setVPrestValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$vPrest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vPrest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$vPrest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTPrest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTPrest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTPrest'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$vPrest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vRec'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vRec'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vRec'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Comp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Comp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;c1&quot;&gt;// \E8 obrigat\F3rio ter um elemento filho do Comp para emitir a nota&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Comp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;c1&quot;&gt;// \E8 necess\E1rio fazer a verifica\E7\E3o para n\E3o ocorrer erros no xml&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_nome_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_valor_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$xComp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$vPrest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Comp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            				&lt;span class=&quot;c1&quot;&gt;// verificar se esse campo \E9 vazio caso contr\E1rio ocorrer\E1 um erro no xml&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$xComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNome'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_nome_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'ND'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_nome_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            				&lt;span class=&quot;nv&quot;&gt;$xComp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vComp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_valor_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'00.00'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Comp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cic_valor_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//13,2 ER25 15 posi\E7\F5es, sendo 13 inteiras e 2 decimais.&lt;/span&gt;
            			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setImpValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$imp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'imp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$imp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'00'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS00&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS00'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$ICMS00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS00&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'20'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS20'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'40'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'41'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'51'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS45&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS45'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS45&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'60'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS60'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBCSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBCSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMSSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMSSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMSSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMSSTRet'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS60&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'90'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMS90'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Vicms'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMS90&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'SN'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSSN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMSSN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSSN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'indSN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Default ser\E1 outra UF&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ICMS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ICMSOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'90'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBCOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pRedBCOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBCOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBCOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMSOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pICMSOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$ICMSOutraUF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMSOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMSOutraUF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTotTrib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$imp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTotTrib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vTotTrib'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infAdFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$imp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infAdFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infAdFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setInfCTeNormValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infCTeNorm'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$infCarga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCarga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'proPred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'proPred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'N/D'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$infCarga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'proPred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'proPred'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOutCat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$infCarga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOutCat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfCarga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOutCat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infQ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infQ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$infQ&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCarga&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infQ'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$infQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cUnid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnc_codigo_unidade_medida'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'01'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$infQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpMed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnc_tipo_medida'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'PESO BRUTO'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$infQ&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'qCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfQ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnc_valor_componente'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'12345678911.1154'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  
            	&lt;span class=&quot;nv&quot;&gt;$documentos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infDoc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$documentos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$documentos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

            		&lt;span class=&quot;nv&quot;&gt;$infDoc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infDoc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$documentos&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			
            			&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_tipo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            				&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infNF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nRoma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_numero_romaneio'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'12315646156189189111'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nPed'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_numero_pedido'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'12315646156189189111'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'01'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*$dInfDoc['cnf_modelo_nota']'04'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;//Preencher com:01 - NF Modelo 01/1A e Avulsa;04 - NF de Produtor&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'serie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_serie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'1'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nDoc'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_numero'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'1'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dEmi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_data_emissao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'---'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_data_emissao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Y-m-d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_base_icms'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_base_icms'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'8047.11'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vICMS'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_total_icms'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_total_icms'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'965.65'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vBCST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_base_icms_st'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_base_icms_st'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'123.00'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_icms_st'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_icms_st'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'123.00'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vProd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_total_produtos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_total_produtos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'123.00'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vNF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_total_nf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_valor_total_nf'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0.00'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'123.00'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nCFOP'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_cfop_prodominante'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_cfop_prodominante'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'5353'&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'5353'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_peso_total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            						&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nPeso'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_peso_total'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_suframa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            						&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'PIN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_suframa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'123'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_data_prevista_entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_data_prevista_entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'---'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
            						&lt;span class=&quot;nv&quot;&gt;$infNF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dPrev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_data_prevista_entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            					&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            				&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infDoc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infNFe'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            					&lt;span class=&quot;nv&quot;&gt;$infNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chave'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_chave_acesso'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_suframa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
            						&lt;span class=&quot;nv&quot;&gt;$infNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'PIN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_suframa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_data_prevista'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_data_prevista'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'---'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; 
            						&lt;span class=&quot;nv&quot;&gt;$infNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dPrev'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cnf_eletronica_data_prevista'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            					&lt;span class=&quot;nv&quot;&gt;$unidadeTransporteNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfDoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteInfNotaFiscalUnidadeTransporte'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
            					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unidadeTransporteNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unidadeTransporteNFe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            							&lt;span class=&quot;nv&quot;&gt;$infUnidTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infUnidTransp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            							&lt;span class=&quot;nv&quot;&gt;$infUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpUnidTransp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cut_tipo_unidade_transportadora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            							&lt;span class=&quot;nv&quot;&gt;$infUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'idUnidTransp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cut_identificacao_unidade_transportadora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            							&lt;span class=&quot;nv&quot;&gt;$lacresUnidTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteInfNotaFiscalUnidadeTransporteLacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lacresUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            								&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lacresUnidTranspNFe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dLacUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            									&lt;span class=&quot;nv&quot;&gt;$lacUnidTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacUnidTransp'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            									&lt;span class=&quot;nv&quot;&gt;$lacUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nLacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dLacUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ctl_numero_lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            								&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            							&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            							&lt;span class=&quot;nv&quot;&gt;$unidadesDeCargaTransNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteInfNotaFiscalUnidadeCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unidadesDeCargaTransNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            								&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$unidadesDeCargaTransNFe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            									&lt;span class=&quot;nv&quot;&gt;$infUnidCargaTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infUnidTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infUnidCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            									&lt;span class=&quot;nv&quot;&gt;$infUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpUnidCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cuc_tipo_unidade_carga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            									&lt;span class=&quot;nv&quot;&gt;$infUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'idUnidCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cuc_identificacao_unidade_carga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            									&lt;span class=&quot;nv&quot;&gt;$lacresUnidCargaTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CteInfNotaFiscalUnidadeCargaLacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

            									&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lacresUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            										&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lacresUnidCargaTranspNFe&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dLacUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            											&lt;span class=&quot;nv&quot;&gt;$lacUnidCargaTranspNFe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'lacUnidCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            											&lt;span class=&quot;nv&quot;&gt;$lacUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nLacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dLacUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ccl_numero_lacre'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            										&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            									&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            									&lt;span class=&quot;nv&quot;&gt;$infUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'qtdRat'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dInfUnidCargaTranspNFe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cuc_qtd_rateado'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            								&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            							&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            					&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	
            	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'seg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'seg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'respSeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_responsavel_seguro'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'4'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_nome_seguradora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xSeg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_nome_seguradora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'Zurich'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_numero_apolice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nApol'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_numero_apolice'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_numero_averbacao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nAver'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_numero_averbacao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;STR_PAD_LEFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            		&lt;span class=&quot;c1&quot;&gt;// Padr\E3o da carga \E9 13,2&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_valor_carga_efeito_averbacao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_valor_carga_efeito_averbacao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'000'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$seg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vCarga'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dSeg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cns_valor_carga_efeito_averbacao'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*'47000.00'*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


            	&lt;span class=&quot;nv&quot;&gt;$infModal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xs:infModal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infModal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xs:any'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;asXML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$infModal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addAttribute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'versaoModal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'infModal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'versaoModal'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

            	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'peri'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'peri'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'nONU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_numero_onu'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xNomeAE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_nome_apropriado_embarque_produto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xClaRisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_classe_subclasse'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'grEmb'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_grupo_embarque'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'qTotProd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_quantidade_total_produto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'qVolTipo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_quantidade_tipo_volume'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$peri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pontoFulgor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dPeri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cno_ponto_fulgor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;c1&quot;&gt;// Se existir carros novos \E9 obrigat\F3rio informar os campos abaixo&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veicNovos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veicNovos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$infCTeNorm&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'veicNovos'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'chassi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_chassi_veiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cCor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_cor_veiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_descricao_cor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cMod'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_codigo_marca_modelo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vUnit'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_valor_unitario_veiculo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$veicNovos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'vFrete'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$dVeicNovos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'cvt_frete_unitario'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cte_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CteXmlTable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getInstance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;findOneByCteId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cte_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		 
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CteXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CteXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx_xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cte_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cte_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ctx_qem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            		 
            		&lt;span class=&quot;nv&quot;&gt;$cteXml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$e&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          

            &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;limpaEspacos&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arranjo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$arranjo&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$indice&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$valor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;is_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$valor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            			&lt;span class=&quot;nv&quot;&gt;$arranjo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$indice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$valor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$arranjo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;trim&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculaDv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cCT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;c1&quot;&gt;// omitted code with 11 lines&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             
            &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calculaChaveAcesso&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$cUF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$AAMM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$CNPJ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$serie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nCT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$tpEmis&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$cCT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// omitted code with 20 lines&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;crying-thinkingandplanning&quot;&gt;Crying, Thinking and Planning&lt;/h2&gt;

&lt;p&gt;As you could see now we have a class with 1054 lines and our challenge is to transform it in testable code.
As a first step I’d recommend you to cry and as a second step we can start to think in what the code does and how can
we break it down in pieces.&lt;/p&gt;

&lt;p&gt;In our code we have a couple of method that can be separated in classes instead of methods because they have its own
behavior for example the method setCompl($config) will add to our XML a bunch of nodes depending on some conditions
in this case is used a switch statement either a couple of if’s .&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Compl&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setCompl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;getXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infCte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'compl'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

            	&lt;span class=&quot;nv&quot;&gt;$confComplPrimeiroBloco&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
					&lt;span class=&quot;s1&quot;&gt;'xCaracAd'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
					&lt;span class=&quot;s1&quot;&gt;'xCaracSer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
					&lt;span class=&quot;s1&quot;&gt;'xEmi'&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$confComplPrimeiroBloco&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xOrig'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fluxo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xpass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$fluxo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'pass'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$nodesPass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xPass'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_sigla_aeroporto_passagem'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xDest'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_sigla_aeroporto_destino'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
						&lt;span class=&quot;s1&quot;&gt;'xRota'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cdp_codigo_rota_entrega'&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
							
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodesPass&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodePass&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xpass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$pass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nodePassIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'semData'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'comData'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'noPeriodo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpPer'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noPeriodo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'dtFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

						&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

						&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'0'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semHora&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'semHora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$semHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'2'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'3'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'comHora'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$comHora&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hProg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'4'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Entrega&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'noInter'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'tpHor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hIni'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
								&lt;span class=&quot;nv&quot;&gt;$noInter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Entrega'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'hFim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
								&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
						&lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xObs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsCont'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCampo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsCont&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xTexto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsCont&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coic_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;isset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
						&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$compl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ObsFisco'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

							&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xCampo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_identificador'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;cleaner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
							&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
							&lt;span class=&quot;nv&quot;&gt;$xObsFisco&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;addChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'xTexto'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ObsFisco&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'coif_obs'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
						&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
					&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

					&lt;span class=&quot;nv&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
					&lt;span class=&quot;c1&quot;&gt;//		}&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It is much better now, isn’t it? We’ve got one class with a one responsibility and very tiny just 146 lines although
this class we have just created could be improved as well but it is a subject to other post.
So we got what we need to do and we have a plan already:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Analyze the methods&lt;/li&gt;
  &lt;li&gt;Extract and create new classes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Our last step before go to unit test is substitute the source code to use or new class instead of the currently code
let’s find where is the &lt;strong&gt;setComple($config)&lt;/strong&gt; and switch our code.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setIdeValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$Cte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//omitted code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setCompl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            	&lt;span class=&quot;nv&quot;&gt;$newCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Compl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$newCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setCompl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setEmitValues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//omitted code&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;3. Substitute legacy code to your new code&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Now we should test our code in order to see if its still working&lt;/strong&gt;, once we
have this confirmation we can now create our unit tests and repeat the cycle
again. As you start refactoring all the legacy using those steps you’ll start
to have your source code with better quality, maintainability  and of course
testable.&lt;/p&gt;

&lt;h2 id=&quot;it-is-hard&quot;&gt;It is hard&lt;/h2&gt;

&lt;p&gt;It is not easy to restructure all the legacy with new code but the result
is amazing. You can fallow the ideology of baby steps in this refactor as well
so as you change the legacy to the new code you test to see if everything is
the same. The trick here is to be patient and change piece by piece.&lt;/p&gt;

&lt;p&gt;Basically I tried to show one single way of do it but in the internet you can
find thousands.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Analyze the methods&lt;/li&gt;
  &lt;li&gt;Extract and create new classes
3. Substitute legacy code to your new code&lt;/li&gt;
  &lt;li&gt;Make sure everything is working
5. Create your unit tests&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Sat, 23 May 2015 21:33:47 +0000</pubDate>
        <link>https://marabesi.com/tdd/2015/05/23/are-you-not-using-tdd-part-legacy-code.html</link>
        <guid isPermaLink="true">https://marabesi.com/tdd/2015/05/23/are-you-not-using-tdd-part-legacy-code.html</guid>
        
        <category>code base,</category>
        
        <category>features,</category>
        
        <category>legacy code,</category>
        
        <category>lines,</category>
        
        <category>tdd,</category>
        
        <category>legacy</category>
        
        
        <category>TDD</category>
        
      </item>
    
      <item>
        <title>Stop complaining, do it now.</title>
        <description>&lt;p&gt;I’ve been working with software development for 4 years now with different
groups and different companies. But nothing has changed as much as TDD did
with my style of programming, thinking and solving problems.&lt;/p&gt;

&lt;h2 id=&quot;fear-comfort-zone&quot;&gt;Fear, comfort zone&lt;/h2&gt;

&lt;p&gt;Since I decided to learn TDD and apply it to my work I had a lot of questions. 
Does TDD really works? Why should I spend my time writing test first?&lt;/p&gt;

&lt;p&gt;Though, those are questions often asked by who is starting with TDD but we
can’t stop on the first rock, we must keeping going. Instead what I’ve seen in
many developers are the same excuses to not apply TDD or even worst to not stop
and learn a amazing subject that will improve their productivity, will improve
their code. “Look I’m out of my dead line and I can’t spend my time on tests”,
“I’ll apply TDD after I finish my project”.&lt;/p&gt;

&lt;p&gt;TDD for certainly is a change of paradigm. Specially for PHP developers who are
often dealing with structured, this developers will be forced to use OOP
instead.&lt;/p&gt;

&lt;p&gt;Unfortunately humans are creatures of habits and I can’t do nothing to change
you either your friends or your parents. Just you can make the difference
and make you a better professional.&lt;/p&gt;

&lt;h2 id=&quot;it-is-not-bad-at-all&quot;&gt;It is not bad at all&lt;/h2&gt;

&lt;p&gt;The most issue I’ve crossed is to talk with developers who is not in the TDD
world and when I face this situation I expose some advantages when using TDD.&lt;/p&gt;

&lt;h3 id=&quot;oop&quot;&gt;OOP&lt;/h3&gt;

&lt;p&gt;Is often a issue of developers who is not familiar with abstraction, design
patterns and quality of code. Those developers often do their code with many
responsibilities and often is impossible to test without refactor.&lt;/p&gt;

&lt;p&gt;The first step to apply TDD is learn and understand OOP and their benefits.
(I saw projects without any abstract class or interface, are they using OOP?)&lt;/p&gt;

&lt;h3 id=&quot;solid&quot;&gt;SOLID&lt;/h3&gt;

&lt;p&gt;Is directly related to TDD and SOLID follows TDD in all of it stages&lt;/p&gt;

&lt;h3 id=&quot;design-patterns&quot;&gt;Design Patterns&lt;/h3&gt;

&lt;p&gt;Usually are testable therefore are not easy to understand but once applied the
maintenance is easy and the developers have a huge of information about Design
Patterns on the internet.&lt;/p&gt;

&lt;h2 id=&quot;understand-first-applyafter&quot;&gt;Understand first, Apply after&lt;/h2&gt;

&lt;p&gt;TDD is changing the way of we developers do our job for a better way,
it gives us a tremendous confidence on our code. But unfortunately it not
comes on a blink an eye it takes time and dedication, researching and making
mistakes.&lt;/p&gt;

&lt;p&gt;Please don’t try to apply TDD in your project at the company at first,
do it when you feel comfortable at home or any place that you like start a blank
project and try to build something simple such as calculator or a classic app
of to do.&lt;/p&gt;

&lt;p&gt;Do you have any suggestions or question? Please let me know on the commentary
section bellow this post I’d like to hear from you!&lt;/p&gt;
</description>
        <pubDate>Sat, 16 May 2015 19:30:34 +0000</pubDate>
        <link>https://marabesi.com/thoughts/2015/05/16/stop-complaining-now.html</link>
        <guid isPermaLink="true">https://marabesi.com/thoughts/2015/05/16/stop-complaining-now.html</guid>
        
        <category>comfort,</category>
        
        <category>complaining,</category>
        
        <category>developers,</category>
        
        <category>tdd,</category>
        
        <category>zone</category>
        
        <category>design patterns,</category>
        
        <category>carrer,</category>
        
        <category>solid,</category>
        
        <category>oop</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>Raspberry Pi + PHP socket</title>
        <description>&lt;p&gt;Recently I did a post about &lt;a href=&quot;/php/2015/03/22/websocket-html5.html&quot;&gt;HTML5 WebSockets&lt;/a&gt;
and it had a purpose. I was preparing the material of my
&lt;a href=&quot;http://www.meetup.com/THT-Things-Hacker-Team/events/221699738&quot; target=&quot;_blank&quot;&gt;talk at Samsung Ocean&lt;/a&gt; and my goal was create a RC car
with an Hybrid application to control it and not use java as a server-side language.&lt;/p&gt;

&lt;p&gt;The final result you can check on my &lt;a href=&quot;https://github.com/marabesi/brasilino4&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt; and play around with the code.
The following steps are to getting the socket working in your raspberry, here I’m going to use 
the &lt;a href=&quot;https://www.raspberrypi.org/products/model-b-plus&quot; target=&quot;_blank&quot;&gt;model B+&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;first-of-all&quot;&gt;First of all&lt;/h2&gt;

&lt;p&gt;We need to to access our Pi trough the SSH, for this example I’m going to use the WiPi
(wireless adapter for raspberry Pi).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-05-09-raspberry-pi-php-socket/wipidongle.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-05-09-raspberry-pi-php-socket/wipidongle.jpg&quot; alt=&quot;WiPi&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;But you can use the RJ-45 to access it or use a little monitor with a keyboard on the Pi, fell free to choose your
option just make sure you will have this access.
obs: In this tutorial I don’t cover how to set up wireless on your pi, refer to
&lt;a href=&quot;https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md&quot; target=&quot;_blank&quot;&gt;wireless documentation&lt;/a&gt;
to get it done.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt; Getting started&lt;/h2&gt;

&lt;p&gt;For this example we are going to use only the php without any web server, it is interesting isn’t it? Let’s update our Pi and install the php&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;rpi-update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After a few minutes the pi will be up to date and then we can finally install PHP&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;php5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;setting-up-the-socket&quot;&gt; Setting up the socket&lt;/h2&gt;

&lt;p&gt;Choose a directory and create a &lt;strong&gt;socket.php&lt;/strong&gt; file with the content below,
I’m going to use my own directory called &lt;strong&gt;/home/marabesi&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'9002'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$null&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;socket_create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AF_INET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOCK_STREAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOL_TCP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;socket_set_option&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOL_SOCKET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SO_REUSEADDR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;socket_bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;socket_listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Socket listening on host: '&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' port: '&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;nb&quot;&gt;socket_select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;in_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$socket_new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;socket_accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;socket_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nf&quot;&gt;perform_handshaking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$socket_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;socket_getpeername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket_new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'server'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' connected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
		&lt;span class=&quot;nf&quot;&gt;send_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;nv&quot;&gt;$found_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$found_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;socket_recv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$received_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unmask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$jsonObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$received_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                        &lt;span class=&quot;nv&quot;&gt;$createResponse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'server'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' : '&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;utf8_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$received_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;

                        &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$received_text&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;PHP_EOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

			&lt;span class=&quot;nv&quot;&gt;$response_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$createResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nf&quot;&gt;send_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

		&lt;span class=&quot;nv&quot;&gt;$buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;socket_read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;PHP_NORMAL_READ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$buf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$found_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;array_search&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;socket_getpeername&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;unset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$found_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

			&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;json_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'server'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ip&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;' disconnected'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
			&lt;span class=&quot;nf&quot;&gt;send_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;socket_close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sock&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;send_message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$clients&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;socket_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$changed_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unmask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;126&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$masks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$masks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$masks&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;substr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$masks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$b1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CC'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65536&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CCn'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;126&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;elseif&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65536&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'CCNN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$b1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$header&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;perform_handshaking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$receved_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$lines&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;preg_split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$receved_header&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lines&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/\A(\S+): (.*)\z/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nv&quot;&gt;$secKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Sec-WebSocket-Key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$secAccept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'H*'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$secKey&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;$upgrade&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1 101 Web Socket Protocol Handshake&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;Upgrade: websocket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;Connection: Upgrade&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;WebSocket-Origin: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;WebSocket-Location: ws://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$port&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/demo/shout.php&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;Sec-WebSocket-Accept:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$secAccept&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;socket_write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client_conn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;strlen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$upgrade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we have to create a simple HTML file to interact with our socket and see it
working, from now on we have two path to take the first is to create an HTML
file on the Pi and then access it, and the second is to create a simple HTML
in our own PC and just make the connection to our socket into the Pi.&lt;/p&gt;

&lt;p&gt;Just make sure you execute the &lt;strong&gt;socket.php&lt;/strong&gt; file in the Pi to be able to
listen on port 9000&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;php /home/marabesi/socket.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If everything goes well you’ll see the following message&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Socket listening on host: localhost port: 9000
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IMPORTANT : You must keep the &lt;strong&gt;socket.php&lt;/strong&gt; executing otherwise it won’t let
you connect through the socket. To simplify this post I’m going to go with the
second option, but you can install a web server such as nginx in your pi and
try it yourself!&lt;/p&gt;

&lt;p&gt;As a alternative you can use the &lt;a href=&quot;https://github.com/ratchetphp/Ratchet&quot; target=&quot;_blank&quot;&gt;Ratchet&lt;/a&gt;
to create you socket in a much easier way and with a amazing use of
Object Oriented Programming you should check it out.&lt;/p&gt;

&lt;h2 id=&quot;creating-the-html-page-to-interact-with&quot;&gt;Creating the HTML page to interact with&lt;/h2&gt;

&lt;p&gt;Now we can save the following code in a file called &lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;WebSocket - Raspberry Pi&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        ## Test your websocket connection!
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;h3&amp;gt;&lt;/span&gt;Just type and press enter ;)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h3&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Write your message to the WebSocket!&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;message&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ws://raspberryIp:raspberryPort&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onkeypress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

                        &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;Me :&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;me: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                        &lt;span class=&quot;nx&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;which&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

                &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;opened !&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;h2&amp;gt;Connection established : &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

                &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;server: &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;span&amp;gt;Server: &amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

                &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;closed !&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;lt;h2&amp;gt;Connection closed&amp;lt;/h2&amp;gt;&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}());&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we have to modify two thing to get the things done.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Where you see &lt;strong&gt;raspberryIp&lt;/strong&gt; you should change to you raspberry IP&lt;/li&gt;
  &lt;li&gt;And where you see &lt;strong&gt;raspberryPort&lt;/strong&gt; you should also change to the port
where the socket is running and in this example the port is 9002&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The HTML code was originally made on codepen.io and you can see the working
example above, with the bootstrap style.&lt;/p&gt;

&lt;iframe width=&quot;300&quot; height=&quot;300&quot; style=&quot;width: 100%;&quot; scrolling=&quot;no&quot; src=&quot;//codepen.io/marabesi/embed/OPrBPO/?height=300&amp;amp;theme-id=0&amp;amp;default-tab=result&quot; frameborder=&quot;no&quot; allowtransparency=&quot;true&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/marabesi/pen/OPrBPO&quot; target=&quot;_blank&quot;&gt;WebSocket !&lt;/a&gt; by Matheus Marabesi (&lt;a href=&quot;http://codepen.io/marabesi&quot;&gt;@marabesi&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot; target=&quot;_blank&quot;&gt;CodePen&lt;/a&gt;.&lt;br /&gt;
&lt;/iframe&gt;

&lt;p&gt;Suggestions? please let me know!&lt;/p&gt;

&lt;h2 id=&quot;edit-17032016---setting-up-apache-virtual-host&quot;&gt;Edit: 17/03/2016 - Setting up Apache virtual host&lt;/h2&gt;

&lt;p&gt;If you don’t have apache installed just type&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can install it on raspberry pi or anywhere you want to.
After that we need create a virtual host.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt; /etc/apache2/sites-available/websocket.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and with the file created just copy and paste the following code&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;VirtualHost&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt; *:80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;
&lt;/span&gt;        &lt;span class=&quot;nc&quot;&gt;ServerName&lt;/span&gt; websocket

        &lt;span class=&quot;nc&quot;&gt;DocumentRoot&lt;/span&gt; /var/www/websocket

        &lt;span class=&quot;nc&quot;&gt;ErrorLog&lt;/span&gt; ${APACHE_LOG_DIR}/error.log
        &lt;span class=&quot;nc&quot;&gt;CustomLog&lt;/span&gt; ${APACHE_LOG_DIR}/access.log combined
&lt;span class=&quot;p&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;VirtualHost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As you can see our root directory is &lt;strong&gt;/var/www/websocket&lt;/strong&gt; and is the place
where you should save the HTML we created to manipulate our socket connection.&lt;/p&gt;
</description>
        <pubDate>Sat, 09 May 2015 16:58:04 +0000</pubDate>
        <link>https://marabesi.com/iot/2015/05/09/raspberry-pi-php-socket.html</link>
        <guid isPermaLink="true">https://marabesi.com/iot/2015/05/09/raspberry-pi-php-socket.html</guid>
        
        <category>apache,</category>
        
        <category>codepen,</category>
        
        <category>html5,</category>
        
        <category>keyboard,</category>
        
        <category>monitor,</category>
        
        <category>nginx,</category>
        
        <category>php,</category>
        
        <category>raspberry,</category>
        
        <category>ratchet,</category>
        
        <category>sockets,</category>
        
        <category>web,</category>
        
        <category>wipi,</category>
        
        <category>html,</category>
        
        <category>w3c,</category>
        
        <category>codepen</category>
        
        
        <category>IoT</category>
        
      </item>
    
      <item>
        <title>Getting started with Xpath</title>
        <description>&lt;p&gt;Its been a long time since my last post and now I came up with a new subject
interesting to me because I could find around me people that know and
understand Xpath, so here I’m going to show what I’ve found about Xpath and
the little particularities on it in PHP.&lt;/p&gt;

&lt;h2 id=&quot;a-little-bit-of-history&quot;&gt; A little bit of history&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.w3.org/TR/xpath&quot; target=&quot;_blank&quot;&gt;first version (1.0)&lt;/a&gt;
of Xpath was released in 1999 and the &lt;a href=&quot;http://www.w3.org/TR/xpath20&quot; target=&quot;_blank&quot;&gt;second version (2.0)&lt;/a&gt;
came in 2011 and nowadays we have the &lt;a href=&quot;http://www.w3.org/TR/xpath-30&quot; target=&quot;_blank&quot;&gt;Xpath 3.0&lt;/a&gt;
released in 2014.&lt;/p&gt;

&lt;p&gt;Xpath was created to be able to easily navigate between nodes in a XML document
and be able to find specific node as well by criteria using a query language.&lt;/p&gt;

&lt;h2 id=&quot;xpath-sintax&quot;&gt;Xpath sintax&lt;/h2&gt;

&lt;p&gt;The Xpath became famous for its light syntax and facilities of manipulating
nodes on XML documents. Xpath syntax queries are alike URL’s, for example you
can use a common XPath such as “/rootNode/child/lastchild” to refer to lastchild
directly, let’s see the example bellow and make the things cleaner.&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;library&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;book&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;Author 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Summary 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/book&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;book&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;Author 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Summary 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/book&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;book&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;author&amp;gt;&lt;/span&gt;Author 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/author&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;summary&amp;gt;&lt;/span&gt;Summary 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/summary&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/book&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/library&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Following our thoughts to reach the tag &lt;book&gt; we can do &quot;/library/book&quot; so this
way we are going to have three elements. We can also be more specific with our
document, let's say that we want to have just the book with the id 1, this way
we can use &quot;/library/book[@id=1]&quot;&lt;/book&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;tip: Google for &lt;strong&gt;xpath tester&lt;/strong&gt; and try out the examples in this post&lt;/em&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Expression&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;Selects from the root node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;//&lt;/td&gt;
      &lt;td&gt;Selects nodes in the document from the current node that&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;match the selection no matter where they are&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;.&lt;/td&gt;
      &lt;td&gt;Selects the current node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;..&lt;/td&gt;
      &lt;td&gt;Selects the parent of the current node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;@&lt;/td&gt;
      &lt;td&gt;Selects attributes&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;small&gt;Example from w3schools: &lt;a href=&quot;https://www.w3schools.com/xml/xpath_syntax.asp&quot; target=&quot;_blank&quot;&gt;w3schools&lt;/a&gt;&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;xpath-and-php&quot;&gt;Xpath and PHP&lt;/h2&gt;

&lt;p&gt;Now we have the basics of Xpath we can play around with PHP and see how it
interacts with Xpath. The first thing we must have in mind is that PHP have
two alternatives to accomplish this task and one is using simplexml family
functions or we have also the DOMXpath family.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;simplexml_load_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'library.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$xml&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'/library/book[@id=1]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using simplexml the function will return to us all matched elements inside an array
with SimpleXMLElement on it.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;Array&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleXMLElement&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Object&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;Array&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
                    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Author&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Summary&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Otherwise we can use the DOMXpath to complete or task but we will need a few
more lines but we have a OOP approach.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOMDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$dom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'library.xml'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$xpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;DOMXpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Therefore the return change as well&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nc&quot;&gt;DOMNodeList&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Object&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;try-it-yourself&quot;&gt;Try it yourself&lt;/h2&gt;

&lt;p&gt;We have many possibilities when we are using Xpath and also we can do a lot of
things with it, the only way to get know is getting your hands dirty and try
different queries in different files!&lt;/p&gt;
</description>
        <pubDate>Thu, 07 May 2015 14:12:05 +0000</pubDate>
        <link>https://marabesi.com/php/2015/05/07/getting-started-xpath.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/05/07/getting-started-xpath.html</guid>
        
        <category>Xpath,</category>
        
        <category>book,</category>
        
        <category>summary,</category>
        
        <category>author,</category>
        
        <category>library,</category>
        
        <category>node,</category>
        
        <category>PHP,</category>
        
        <category>Summary,</category>
        
        <category>version,</category>
        
        <category>document,</category>
        
        <category>using,</category>
        
        <category>dom,</category>
        
        <category>nodes,</category>
        
        <category>php,</category>
        
        <category>simplexml,</category>
        
        <category>W3C,</category>
        
        <category>web,</category>
        
        <category>xpath,</category>
        
        <category>certification,</category>
        
        <category>xml</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>ARE YOU NOT USING TDD ?! - PART 1</title>
        <description>&lt;p&gt;I’ve been working with TDD for while and everyday I see developers creating
excuses to do not start with TDD, and I ask myself why they do that?
Is there any reason for ? Maybe the procrastination and the fear of new
challenges comes to mind.&lt;/p&gt;

&lt;p&gt;TDD has basically a life-cycle to be follow and and here I’ll try to show how
to getting started with.&lt;/p&gt;

&lt;p&gt;Here is a couple of slides of my presentation
“Introduction to TDD (PHPunit examples)”. It may help you to understand the
TDD world combined with this post content, so I hope you enjoy the post and
please if you have any questions, feedback let me know.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; style=&quot;border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;&quot; src=&quot;//www.slideshare.net/slideshow/embed_code/key/N0I7DDe0jBl069&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;red&quot;&gt;RED&lt;/h2&gt;

&lt;p&gt;The first step is the RED and the most common I guess, the color red in TDD
represents the failure. I have had a lot of bug found in my code before I adopt
TDD because I used to think that piece of code works but, I forgot to test what
I’ve done with different inputs, different scenarios and so on.&lt;/p&gt;

&lt;p&gt;The red stage as we go through will show us many scenarios and many cases
where our code will have a little bug.&lt;/p&gt;

&lt;p&gt;Is in red stage as well where we do not write our source code first and indeed
we will write or test first. The benefits of doing this is awesome and we
can enumerate a couple of them:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Improvement of our source code design&lt;/li&gt;
  &lt;li&gt;prevent the high complexity&lt;/li&gt;
  &lt;li&gt;Getting confidence with our source code&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;green&quot;&gt;GREEN&lt;/h2&gt;

&lt;p&gt;The green color is a perfect clue to the red after we created our test and
see its failing now its time to pass it and make it green!&lt;/p&gt;

&lt;p&gt;The rule here is do not make a complex algorithm instead we will make it pass
as easy as possible and by that I mean with hard code. It seems weird at first
but everything will make sense in the blue stage of TDD where we will do some
code refactoring.&lt;/p&gt;

&lt;p&gt;The goal of GREEN stage is to make the test pass and do not the best way of
solve your problem or to create a amazing snippet instead we are trying to
achieve the simplest solution to see our desired green (our test passing).&lt;/p&gt;

&lt;h2 id=&quot;blue&quot;&gt;BLUE&lt;/h2&gt;

&lt;p&gt;Finally we have got our BLUE stage known as refactor stage as well.
Now we already have a test passing and we know what we have to have to
solve our problem right ? Let’s recap what we’ve done so far:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We created a test and saw it fail&lt;/li&gt;
  &lt;li&gt;We fixed the code to make it pass with hard code&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Nowadays programming hard code is not a good practice and worse it will not
solve your problem correctly so now is the perfect time to refactor the hard
code and think in the best way of solving your problem, but of course without
breaking your test.&lt;/p&gt;

&lt;p&gt;The test passing is our safeness to refactor and improve our source code without
side-effects. And here we reach in a great benefit of TDD,
&lt;strong&gt;refactoring without fear&lt;/strong&gt;. Before TDD I used to change some legacy code to
fix a bug or to improve the code but in a few weeks forward after my change in
the code I had a new bug to fix caused by my own change.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-up&quot;&gt;WRAPPING UP!&lt;/h2&gt;

&lt;p&gt;This is the first post of a series about TDD. I presented to you the life
cycle of TDD and how to understand each stage of it (red, green and blue).&lt;/p&gt;

&lt;p&gt;To get deep into the TDD work I’d recommend the book
&lt;a href=&quot;/review/2015/01/26/tdd-by-example.html&quot;&gt;TDD by example by Kent Beck&lt;/a&gt;
(examples in Python and Java), a quick read in
&lt;a href=&quot;http://code.tutsplus.com/series/the-solid-principles--cms-634&quot; target=&quot;_blank&quot;&gt;SOLID principles&lt;/a&gt;
and finally try to find some material of TDD in a programming language you are
familiar and do not give up!&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Apr 2015 23:47:38 +0000</pubDate>
        <link>https://marabesi.com/tdd/2015/04/19/not-using-tdd-part-1.html</link>
        <guid isPermaLink="true">https://marabesi.com/tdd/2015/04/19/not-using-tdd-part-1.html</guid>
        
        <category>TDD,</category>
        
        <category>code,</category>
        
        <category>test,</category>
        
        <category>stage,</category>
        
        <category>make,</category>
        
        <category>first,</category>
        
        <category>pass,</category>
        
        <category>problem,</category>
        
        <category>bug,</category>
        
        <category>hard,</category>
        
        <category>refactor,</category>
        
        <category>blue,</category>
        
        <category>green,</category>
        
        <category>red,</category>
        
        <category>solid,</category>
        
        <category>tdd,</category>
        
        <category>software engineering,</category>
        
        <category>methods,</category>
        
        <category>test driven development,</category>
        
        <category>methodology,</category>
        
        <category>patterns,</category>
        
        <category>bugs</category>
        
        
        <category>TDD</category>
        
      </item>
    
      <item>
        <title>The definitive guide to HTML5 WebSocket</title>
        <description>&lt;p&gt;The book “The definitive guide to HTML5 WebSocket” is a short book with a great
content, if you are looking for web sockets this book is definitely a good
start.&lt;/p&gt;

&lt;h2 id=&quot;book-content&quot;&gt;Book content&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Chapter 1: Introduction to HTML5 WebSocket&lt;/li&gt;
  &lt;li&gt;Chapter 2: The WebSocket API&lt;/li&gt;
  &lt;li&gt;Chapter 3: The WebSocket protocol&lt;/li&gt;
  &lt;li&gt;Chapter 4: Building instant Messaging and Chat over WebSocket with XMPP&lt;/li&gt;
  &lt;li&gt;Chapter 5: Using Messaging over WebSocket with STOMP&lt;/li&gt;
  &lt;li&gt;Chapter 6: VNC with the Remote Framebuffer Protocol&lt;/li&gt;
  &lt;li&gt;Chapter 7: WebSocket Security&lt;/li&gt;
  &lt;li&gt;Chapter 8: Deployment Considerations&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;highlight-sections&quot;&gt;Highlight sections&lt;/h2&gt;

&lt;p&gt;I would like to highlight three sections of the book that I do recommend
a second read.&lt;/p&gt;

&lt;h3 id=&quot;chapter-2-the-websocket-api&quot;&gt;Chapter 2: The WebSocket API&lt;/h3&gt;

&lt;p&gt;If you are not familiar with sockets you should read more than once this
section. The authors have had the caution of explain each part of the API to
the readers and also a amazing example of drag-in-drop image is given in the
last item of this chapter.&lt;/p&gt;

&lt;h3 id=&quot;chapter-3-the-websocket-protocol&quot;&gt;Chapter 3: The WebSocket Protocol&lt;/h3&gt;

&lt;p&gt;Protocols are a essential part of the
computers and therefore are also true for WebSockets. A brief introduction of
protocols is given in this chapter and how you can inspect and understand the
WebSockets protocol, also the handshake is presented. Be aware in the handshake
steps because it is a hard task to accomplish it involves headers from the
client and a little bit of operation with sha1, the authors chose nodejs to
create a simple handshake between client and server but if you’re interested in
PHP you can see &lt;a href=&quot;/php/2015/03/22/websocket-html5.html&quot;&gt;this post&lt;/a&gt; to a
PHP version.&lt;/p&gt;

&lt;h3 id=&quot;chapter-7-websocket-security&quot;&gt;Chapter 7: WebSocket Security&lt;/h3&gt;

&lt;p&gt;As a every application the security is a point of attention. This section of
the books brings to us how WebSockets work with security to prevent DDoS,
Proxy Server attacks, Man-In-the-middle and so on. The book in this section has
great examples and explanation about security and also shows a handshake feature
in the security point of view.&lt;/p&gt;

&lt;h2 id=&quot;before-you-go&quot;&gt;Before you go…&lt;/h2&gt;

&lt;p&gt;Check these links to further information about WebSockets!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/WebSockets&quot; target=&quot;_blank&quot;&gt;MDN documentation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.w3.org/TR/websockets&quot; target=&quot;_blank&quot;&gt;W3C&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc6454.txt&quot; target=&quot;_blank&quot;&gt;IETF&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.apress.com/9781430247401&quot; target=&quot;_blank&quot;&gt;Official book page&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 04 Apr 2015 19:06:44 +0000</pubDate>
        <link>https://marabesi.com/review/2015/04/04/definitive-guide-html5-websocket.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/04/04/definitive-guide-html5-websocket.html</guid>
        
        <category>WebSocket,</category>
        
        <category>WebSockets,</category>
        
        <category>Chapter,</category>
        
        <category>handshake,</category>
        
        <category>guide,</category>
        
        <category>HTML5,</category>
        
        <category>PHP,</category>
        
        <category>protocol,</category>
        
        <category>Messaging,</category>
        
        <category>client,</category>
        
        <category>html5,</category>
        
        <category>IETF,</category>
        
        <category>MDN,</category>
        
        <category>security,</category>
        
        <category>W3C,</category>
        
        <category>web sockets,</category>
        
        <category>web,</category>
        
        <category>chat,</category>
        
        <category>sockets,</category>
        
        <category>xmpp,</category>
        
        <category>review</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>WebSocket - HTML5</title>
        <description>&lt;p&gt;HTML5 brings a lot of new features came to help developers to create
amazing apps and amazing user experience, one of these features is called web
socket which provides new powers under the HTTP protocol.&lt;/p&gt;

&lt;p&gt;Web socket resolves the lack of HTTP when we need updating our clients with real
time data and also server events regardless of a request.&lt;/p&gt;

&lt;h2 id=&quot;the-client-side&quot;&gt;The client side&lt;/h2&gt;

&lt;p&gt;First of all let’s have a look in the javascript code the easiest step
to get web sockets working.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ws://myserver&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the snippet above we already have a code working but also we can specify
which protocol we want to use through or connection.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;WebSocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;ws://myserver&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;myProtocol&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onopen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclose&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onerror&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;mySocket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onmessage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;handshake&quot;&gt;Handshake&lt;/h2&gt;
&lt;p&gt;Now that we have the client already is time to concentrate in a key part of the
process, the handshake. I would like to recommend if you don’t know
what is and why we must do that please see
&lt;a href=&quot;http://en.wikipedia.org/wiki/WebSocket#WebSocket_protocol_handshake&quot; target=&quot;_blank&quot;&gt;this wikipedia article&lt;/a&gt;
and &lt;a href=&quot;https://www.websocket.org/aboutwebsocket.html&quot; target=&quot;_blank&quot;&gt;this from websocket.org&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To perform a handshake we will need the client header and some hash stuff to
return those combined to upgrade our header. The key header that we are looking
for is the Sec-WebSocket-Key. So let’s to our example!&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET ws://echo.websocket.org/?encoding&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;text HTTP/1.1
Origin: http://websocket.org
Cookie: &lt;span class=&quot;nv&quot;&gt;__utma&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;99as
Connection: Upgrade
Host: echo.websocket.org
Sec-WebSocket-Key: uRovscZjNol/umbTt5uKmw&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
Upgrade: websocket
Sec-WebSocket-Version: 13
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Our header value is uRovscZjNol/umbTt5uKmw== with that we will do the following
steps on our server:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Append to the uRovscZjNol/umbTt5uKmw== the value 258EAFA5-E914-47DA-95CA-C5AB0DC85B11&lt;/li&gt;
  &lt;li&gt;Create a SHA1 hash with the string&lt;/li&gt;
  &lt;li&gt;Apply the base64 enconding to the result of the SHA 1 encode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above steps translated to PHP code will be something like the example below&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$hds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//headers grabed from the client header&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;preg_match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/Sec-WebSocket-Key: (.*)&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$hds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$matchs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)){&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$matchs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;base64_encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sha1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;$headers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1 101 Switching Protocols&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; 
             &lt;span class=&quot;s2&quot;&gt;&quot;Upgrade: websocket&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; 
             &lt;span class=&quot;s2&quot;&gt;&quot;Connection: Upgrade&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; 
             &lt;span class=&quot;s2&quot;&gt;&quot;Sec-WebSocket-Accept: &quot;&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$key&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n\r\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To deeper information go ahead and see the
&lt;a href=&quot;https://tools.ietf.org/html/rfc6455&quot; target=&quot;_blank&quot;&gt;RFC 6455 documentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-everything-up&quot;&gt;Wrapping everything up!&lt;/h2&gt;

&lt;p&gt;As you saw on this post to create a websocket server from scratch is a tough
task, roughly we have a couple of projects that do all the hard work for us.&lt;/p&gt;

&lt;p&gt;The most common in the PHP world is
&lt;a href=&quot;https://github.com/ratchetphp/Ratchet&quot; target=&quot;_blank&quot;&gt;Ratchet&lt;/a&gt;,
the documentation is awesome and the repository on github is updated frequently
I do recommend Ratchet.&lt;/p&gt;

&lt;h2 id=&quot;edit-mar28-2015&quot;&gt;Edit: Mar 28, 2015&lt;/h2&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;355&quot; style=&quot;border: 1px solid #CCC; border-width: 1px; margin-bottom: 5px; max-width: 100%;&quot; src=&quot;//www.slideshare.net/slideshow/embed_code/46061464&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;allowfullscreen&quot;&gt; &lt;/iframe&gt;
</description>
        <pubDate>Sun, 22 Mar 2015 21:21:43 +0000</pubDate>
        <link>https://marabesi.com/php/2015/03/22/websocket-html5.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/03/22/websocket-html5.html</guid>
        
        <category>code pen,</category>
        
        <category>html5,</category>
        
        <category>http,</category>
        
        <category>php,</category>
        
        <category>rfc6455,</category>
        
        <category>slideshare,</category>
        
        <category>web sockets</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Bitwise operators – The Journey Part II</title>
        <description>&lt;p&gt;If you didn’t see the first part of this post click 
&lt;a href=&quot;/php/2015/02/19/bitwise-operators-journey.html&quot;&gt;here&lt;/a&gt; and enjoy!&lt;/p&gt;

&lt;h2 id=&quot;the-shift-left-operator&quot;&gt;The « (Shift left) operator&lt;/h2&gt;

&lt;p&gt;Do you remember of our bitwise table in part I? We are not going to need it
anymore. What we are going to do here is simple math, so let’s start with the
left shift operator that uses multiplication ( * ).&lt;/p&gt;

&lt;p&gt;The full definition from php is : “Shift the bits of $a $b steps to the left
(each step means “multiply by two”)” The formula is:
bit leftmost *  2 ^ bit rightmost&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;bit leftmost = 7;&lt;/p&gt;

&lt;p&gt;bit rightmost = 9;&lt;/p&gt;

&lt;p&gt;7 * 2 ^ 9 =? (2 * 2 * 2 * 2 * 2 * 2 * 2 * 2 * 2)
2 ^ 9 = 512
7 * 512 =3584&lt;/p&gt;

&lt;h2 id=&quot;theshift-right-operator&quot;&gt;The » (Shift right) operator&lt;/h2&gt;

&lt;p&gt;“Shift the bits of $a $b steps to the right (each step means “divide by two”)”.
Even easy, isn’t it? Let’s try an example!&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you guess what will be the output?&lt;/p&gt;

&lt;p&gt;Our formula this time will by : bit leftmost / 2 ^ bit rightmost&lt;/p&gt;

&lt;p&gt;bit leftmost = 4;&lt;/p&gt;

&lt;p&gt;bit rightmost = 6;&lt;/p&gt;

&lt;p&gt;4 / 2 ^ 6 =? (2 * 2 * 2 * 2 * 2 * 2)
2 ^ 6 = 64
4 / 64 = 0&lt;/p&gt;

&lt;h2 id=&quot;the--not-operator&quot;&gt;The ~ (Not) operator&lt;/h2&gt;

&lt;p&gt;Finally we have got the last operator and of course the easiest one.
To achieve the NOT operator we must follow the formula ~x = -x -1 (
To further information please &lt;a href=&quot;http://php.net/manual/en/language.operators.bitwise.php#105821&quot; target=&quot;_blank&quot;&gt;click here&lt;/a&gt;).&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;What we have to do is simply apply the formula swifting the X by 9.&lt;/p&gt;

&lt;p&gt;~x = ~9;
-x = -9;
-1 = -1;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;~9 = -9 -1 = - 10&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 24 Feb 2015 04:27:27 +0000</pubDate>
        <link>https://marabesi.com/php/2015/02/24/bitwise-operators-journey-part-ii.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/02/24/bitwise-operators-journey-part-ii.html</guid>
        
        <category>bitwise,</category>
        
        <category>php,</category>
        
        <category>web,</category>
        
        <category>zce,</category>
        
        <category>zcpe,</category>
        
        <category>certification</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Head first - Design Patterns</title>
        <description>&lt;p&gt;You can find the source code in the  already but also you can have a look at the
&lt;a href=&quot;https://github.com/bethrobson/Head-First-Design-Patterns&quot; target=&quot;_blank&quot;&gt;github&lt;/a&gt; and learn a bit more about the
book content. If you want to order a copy for you go ahead and visit
&lt;a href=&quot;http://shop.oreilly.com/product/9780596007126.do?CMP=ILC-hf1st&quot; target=&quot;_blank&quot;&gt;O Reilly website&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;welcome-to-design-patterns&quot;&gt;Welcome to Design Patterns&lt;/h3&gt;

&lt;p&gt;The section “Welcome to Design Patterns” is a quick review through the object
oriented programming and of course the paradigm  inheritance X composition.
Although in the end you will learn your first pattern the &lt;em&gt;Strategy&lt;/em&gt;!&lt;/p&gt;

&lt;h3 id=&quot;keeping-your-objects-in-the-know&quot;&gt;Keeping your Objects in the know&lt;/h3&gt;

&lt;p&gt;Moving on the next pattern is the &lt;em&gt;Observer&lt;/em&gt;. And in this step of the book the
author starts to give us how the patterns are applied to the real word with
Java (using the java.util.Observable, but if you are looking for something in
PHP you’ll find the SplObserver).&lt;/p&gt;

&lt;h3 id=&quot;decorating-objects&quot;&gt;Decorating Objects&lt;/h3&gt;

&lt;p&gt;Now we were introduced to the Design Patterns in the real world with java the
next pattern is the &lt;em&gt;Decorator&lt;/em&gt;. You can find the &lt;em&gt;Decorator&lt;/em&gt; in the java as well
in the package java.io.&lt;/p&gt;

&lt;h3 id=&quot;baking-with-oo-goodness&quot;&gt;Baking with OO Goodness&lt;/h3&gt;

&lt;p&gt;Do you like pizza? If yes, this is your pattern! The &lt;em&gt;Factory Method Pattern&lt;/em&gt; come
along with some pizzas store and the Dependency Inversion Principle as well.&lt;/p&gt;

&lt;h3 id=&quot;one-of-a-kind-objects&quot;&gt;One of a Kind Objects&lt;/h3&gt;

&lt;p&gt;Can you guess what is this pattern about? If we are talking about just one kind
of object we are talking abou &lt;em&gt;Singleton Pattern&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;encapsulating-invocation&quot;&gt;Encapsulating Invocation&lt;/h3&gt;

&lt;p&gt;Command Pattern !&lt;/p&gt;

&lt;h3 id=&quot;being-adaptative&quot;&gt;Being Adaptative&lt;/h3&gt;

&lt;p&gt;The Adapter Patter is presented with a good example of wall outlet from Europe
and how to adapt this to another standards such as the wall outlet from America.
But this section is not about just one pattern in &lt;em&gt;Being Adaptative&lt;/em&gt; the book bring
to us the Facade Pattern as well, with a great analogy  of watching a movie at
home.&lt;/p&gt;

&lt;h3 id=&quot;encapsulating-algorithms&quot;&gt;Encapsulating Algorithms&lt;/h3&gt;

&lt;p&gt;Encapsulating Algorithms is all about the Template Method and how you can use
it to encapsulate your algorithms&lt;/p&gt;

&lt;h3 id=&quot;well-managed-collections&quot;&gt;Well-Managed Collections&lt;/h3&gt;

&lt;p&gt;Now we have a lot of knowledge in design patterns is time to focus on
collections in java such as ArrayList, Iterator Pattern and Composite Pattern!
But again, if you are looking for something similar in PHP visit
the &lt;a href=&quot;http://php.net/manual/en/book.spl.php&quot; target=&quot;_blank&quot;&gt;SPL page&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-state-of-things&quot;&gt;The State of Things&lt;/h3&gt;

&lt;p&gt;Have you ever wondering about ifs and elses? This section of the book explain
to us a better way, the state pattern. From now on you will not using loads
of if and else in your code to prove it the example used was a gumball
machine and its states.&lt;/p&gt;

&lt;h3 id=&quot;controlling-object-access&quot;&gt;Controlling Object Access&lt;/h3&gt;

&lt;p&gt;We are getting to the end of the book, but first the design of this time is about security and controlling access.
In our lives we present this every day in a coffee shop with our credit cards or in our work place with our credentials
and in our code there is no difference and we will look at the &lt;em&gt;Proxy Pattern&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;patterns-of-patterns&quot;&gt;Patterns of Patterns&lt;/h3&gt;

&lt;p&gt;Patterns of Patterns is much more about patterns working together instead of learning a new pattern.
Often in our daily routine as programmers we combine a lot of knowledge to make a single solution.&lt;/p&gt;

&lt;p&gt;In Patterns of Patterns is the same thing we will see how to use patterns together rather than learn through them.
Except for one single pattern called MVC (Design-View-Controller) you will see the MVC in details and build a
great application with it.&lt;/p&gt;

&lt;h3 id=&quot;patterns-in-the-real-world&quot;&gt;Patterns in the Real World&lt;/h3&gt;

&lt;p&gt;Finally we have got the end! The Patterns in the Real World is about what a
patter is in fact and how it can help us to create great solutions to the client
with a good code quality and maintenance.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://books.google.com.br/books/about/Design_Patterns.html?id=6oHuKQe3TjQC&amp;amp;redir_esc=y&quot; target=&quot;_blank&quot;&gt;The gang of four&lt;/a&gt;.
is mentioned by the author as a reference in patterns you must check it out.&lt;/p&gt;
</description>
        <pubDate>Fri, 20 Feb 2015 11:15:48 +0000</pubDate>
        <link>https://marabesi.com/review/2015/02/20/head-first-design-patterns.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/02/20/head-first-design-patterns.html</guid>
        
        <category>collections,</category>
        
        <category>decorator,</category>
        
        <category>design, patterns</category>
        
        <category>factory, method</category>
        
        <category>head, first</category>
        
        <category>java,</category>
        
        <category>o reilly,</category>
        
        <category>observer,</category>
        
        <category>oop,</category>
        
        <category>php,</category>
        
        <category>proxy,</category>
        
        <category>singleton,</category>
        
        <category>SPL,</category>
        
        <category>state,</category>
        
        <category>strategy</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>Bitwise operators - The Journey</title>
        <description>&lt;p&gt;If you are trying to search about bitwise operators on web you will find loads
of information, although, when I was learning about bitwise none of those in
the web could clarify my mind. But finally I have got a way to me is easier
and faster to understand bitwise, I hope it will help you either.&lt;/p&gt;

&lt;h2 id=&quot;the-bitwise-table&quot;&gt;The bitwise table&lt;/h2&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The table above represents the chain of bit that we have. This table will be
our guide through the bitwise word, before we continue just have look at the
table and see if we sum up all the values we will have &lt;strong&gt;255&lt;/strong&gt; -
Which means it is the highest value of a bit.&lt;/p&gt;

&lt;p&gt;Nevertheless to achieve 255 all the bits on the table must be &lt;strong&gt;true&lt;/strong&gt; ( 1 )&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;255&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A few more examples:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;10&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Is it easier with the table? What we did is really simple we caught a random
number between 0 and 255 and applied to the table to see its representation
in binary. Now we know 5 in binary is &lt;strong&gt;101&lt;/strong&gt; and 10 is &lt;strong&gt;1010&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the--and-operator&quot;&gt;The &amp;amp; (AND) operator&lt;/h2&gt;

&lt;p&gt;Here our table become a amazing tool to use. The operator &amp;amp; by definition says:
“Bits that are set in both $a and $b are set.” (&lt;a href=&quot;http://php.net/manual/en/language.operators.bitwise.php&quot; target=&quot;_blank&quot;&gt;source&lt;/a&gt;).
With that definition what will be the result of  the following expression:&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s start with the table where now we have on the leftmost the bitwise
operator and in the rightmost the result.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Operator&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;amp;&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&amp;amp;&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Using the operator AND the result of our operation (5 &amp;amp; 3) results in 1&lt;/p&gt;

&lt;h2 id=&quot;the--or-operator&quot;&gt;The | (OR) operator&lt;/h2&gt;

&lt;p&gt;To use the OR operator we will take the same example we used in the AND
operator to understand the difference. By definition we have:
“Bits that are set in either $a or $b are set.”&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Applying the documentation definition in the bitwise table, should look something
like:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Operator&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This time the result is 7&lt;/p&gt;

&lt;h2 id=&quot;the--xor-operator&quot;&gt;The ^ (XOR) operator&lt;/h2&gt;

&lt;p&gt;Finally we are in the XOR operator. It is close of OR operator but with a big
difference, let’s see what the definition says: “Bits that are set in $a or $b
but not both are set.”&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Can you guess what is the output of the operation (5 ^ 3)?&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Operator&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;128&lt;/td&gt;
      &lt;td&gt;64&lt;/td&gt;
      &lt;td&gt;32&lt;/td&gt;
      &lt;td&gt;16&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Result&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Yes, that is right! It is 6.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Feb 2015 12:04:16 +0000</pubDate>
        <link>https://marabesi.com/php/2015/02/19/bitwise-operators-journey.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/02/19/bitwise-operators-journey.html</guid>
        
        <category>operator,</category>
        
        <category>Operator,</category>
        
        <category>table,</category>
        
        <category>Result,</category>
        
        <category>Bits,</category>
        
        <category>operators,</category>
        
        <category>and,</category>
        
        <category>bitwise,</category>
        
        <category>or,</category>
        
        <category>php,</category>
        
        <category>web,</category>
        
        <category>xor,</category>
        
        <category>certification</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Converting Hexadecimal(16) to Decimal(10)</title>
        <description>&lt;p&gt;The Hexadecimal system work in base 16 which  means that we have 15 (fifteen) numbers as shown bellow.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;HEX&lt;/th&gt;
      &lt;th&gt;Value&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;6&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;7&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;9&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;B&lt;/td&gt;
      &lt;td&gt;11&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;C&lt;/td&gt;
      &lt;td&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;D&lt;/td&gt;
      &lt;td&gt;13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;E&lt;/td&gt;
      &lt;td&gt;14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;F&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;php-and-hex&quot;&gt;PHP and Hex&lt;/h2&gt;

&lt;p&gt;In the table above we have 16 numbers and its corresponding values, the highest
is 15 and the lowest is 0. Knowing this rule what will the code bellow will
output?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The right answer is &lt;strong&gt;255&lt;/strong&gt;!
When I first saw this expression I thought, it will output 1515. No doubts!
If in the content table above the F represents 15 it is easy,
with two F it will concatenate.&lt;/p&gt;

&lt;p&gt;Be careful with that! It is wrong thinking, the conversion is made as the
same way as octal conversion
(&lt;a href=&quot;/php/2015/01/27/php-basics-sure-tell-use-octal-system.html&quot;&gt;you can see the octal post conversion here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;First of all we need to convert the letters F into numbers which are 15,
if it was the letter A would be 10 and so on, just look to the hexadecimal table.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;tip: I like to think that from A to F its just 10 to 15&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now that we have the value of F we can use this in the equation:&lt;/p&gt;

&lt;p&gt;15×16¹ + 15×16° = 255&lt;sub&gt;10&lt;/sub&gt;
15×16¹ = 240
15×16° = 15
240 + 15 =&lt;strong&gt;&lt;span style=&quot;text-decoration: underline;&quot;&gt; 255 !&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Remember the sample that we use is  { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F }&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Feb 2015 01:51:27 +0000</pubDate>
        <link>https://marabesi.com/php/2015/02/17/converting-hexadecimal16-decimal10.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/02/17/converting-hexadecimal16-decimal10.html</guid>
        
        <category>conversion,</category>
        
        <category>table,</category>
        
        <category>Hexadecimal,</category>
        
        <category>numbers,</category>
        
        <category>Converting,</category>
        
        <category>Code,</category>
        
        <category>Decimal,</category>
        
        <category>development,</category>
        
        <category>hex,</category>
        
        <category>hexadecimal,</category>
        
        <category>octal,</category>
        
        <category>php,</category>
        
        <category>php basics,</category>
        
        <category>web,</category>
        
        <category>zce,</category>
        
        <category>zcpe,</category>
        
        <category>certification</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>PHP Design Patterns</title>
        <description>&lt;p&gt;If you are starting with good practices in PHP I would like to recommend the
PHP design patterns it is awesome. The book start with a short introduction in
Object Oriented Programming , UML and the concepts of Design Patterns.&lt;/p&gt;

&lt;h2 id=&quot;what-are-the-patterns-that-i-will-learn&quot;&gt;What are the patterns that I will learn?&lt;/h2&gt;

&lt;p&gt;The book divides in three sections the patterns, the creational patterns,
structural patterns and Behavioral patterns. Inside of each section is compound
of two patterns and the list bellow explain to us which are they.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Creational section
    &lt;ul&gt;
      &lt;li&gt;Factory Method&lt;/li&gt;
      &lt;li&gt;Prototype&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Structural section
    &lt;ul&gt;
      &lt;li&gt;Adapter&lt;/li&gt;
      &lt;li&gt;Decorator&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Behavioral
    &lt;ul&gt;
      &lt;li&gt;Template Method&lt;/li&gt;
      &lt;li&gt;State&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;in-the-end-&quot;&gt;In the end …&lt;/h2&gt;

&lt;p&gt;As a plus section in the book the author show to us how to use the Proxy
Pattern with MySQL, however, you can use with any database.&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Feb 2015 04:41:43 +0000</pubDate>
        <link>https://marabesi.com/review/2015/02/08/php-design-patterns.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/02/08/php-design-patterns.html</guid>
        
        <category>patterns,</category>
        
        <category>PHP,</category>
        
        <category>book,</category>
        
        <category>Design,</category>
        
        <category>Patterns,</category>
        
        <category>Code,</category>
        
        <category>Method,</category>
        
        <category>Behavioral,</category>
        
        <category>explain,</category>
        
        <category>creational,</category>
        
        <category>structural,</category>
        
        <category>adapter,</category>
        
        <category>decorator,</category>
        
        <category>design patterns,</category>
        
        <category>factory,</category>
        
        <category>oop,</category>
        
        <category>php,</category>
        
        <category>prototype,</category>
        
        <category>state,</category>
        
        <category>template,</category>
        
        <category>uml,</category>
        
        <category>gof</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>Raspberry Pi - Meeting the RPi-Cam-Web-Interface</title>
        <description>&lt;p&gt;If you are not familiar with raspberry PI please go ahead and see
&lt;a href=&quot;https://www.raspberrypi.org&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; web site, I’m not
going to be talking about what is and what it can do rather I want to go
further and focus on just the raspberry PI + camera.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-01-31-raspberry-pi-meeting-rpi-cam-web-interface/cover.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-01-31-raspberry-pi-meeting-rpi-cam-web-interface/cover.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;RPi-Cam-Web-Interface is a simple interface that enable the users to interact
with the camera module on the raspberry PI, it has a lot of documentation and
the &lt;a href=&quot;https://github.com/silvanmelchior/RPi_Cam_Web_Interface&quot; target=&quot;_blank&quot;&gt;code&lt;/a&gt;
is really easy to understand if you’re a programmer.&lt;/p&gt;

&lt;p&gt;The interface is very easy to use and it has a lot of features such as
resolution adjust, control of brightness, saturation and contrast.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-01-31-raspberry-pi-meeting-rpi-cam-web-interface/rpi-web-interface2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-01-31-raspberry-pi-meeting-rpi-cam-web-interface/rpi-web-interface2.png&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I think the main feature of the the RPi-Cam-Web-Interface is be web based.
Easy to use easy to share across multiple devices and easy to modify as well.&lt;/p&gt;

&lt;h2 id=&quot;behind-the-scenes-how-does-it-works&quot;&gt;Behind the scenes, how does it works?&lt;/h2&gt;

&lt;p&gt;The web interface was wrote in PHP and it has a interaction with the linux in
the raspberry in resume what the web interface does is, time by time the script
takes a picture and save it in a directory (you can easily change the default
folder where it is saved) and then refresh the the page with the new picture
through the javascript.&lt;/p&gt;

&lt;h2 id=&quot;would-you-like-to-try&quot;&gt;Would you like to try?&lt;/h2&gt;

&lt;p&gt;You can find the official tutorial in the
&lt;a href=&quot;https://www.raspberrypi.org/forums/viewtopic.php?t=63276&quot; target=&quot;_blank&quot;&gt;raspberry website&lt;/a&gt;
and loads more on google&lt;/p&gt;
</description>
        <pubDate>Sat, 31 Jan 2015 07:04:02 +0000</pubDate>
        <link>https://marabesi.com/iot/2015/01/31/raspberry-pi-meeting-rpi-cam-web-interface.html</link>
        <guid isPermaLink="true">https://marabesi.com/iot/2015/01/31/raspberry-pi-meeting-rpi-cam-web-interface.html</guid>
        
        <category>raspberry,</category>
        
        <category>Raspberry,</category>
        
        <category>interface,</category>
        
        <category>Interface,</category>
        
        <category>Web,</category>
        
        <category>Cam,</category>
        
        <category>RPi,</category>
        
        <category>picture,</category>
        
        <category>Code,</category>
        
        <category>Meeting,</category>
        
        <category>socket,</category>
        
        <category>text,</category>
        
        <category>message,</category>
        
        <category>changed,</category>
        
        <category>port,</category>
        
        <category>host,</category>
        
        <category>WebSocket,</category>
        
        <category>container,</category>
        
        <category>clients,</category>
        
        <category>server,</category>
        
        <category>HTML,</category>
        
        <category>camera,</category>
        
        <category>internet of things,</category>
        
        <category>iot,</category>
        
        <category>javascript,</category>
        
        <category>php,</category>
        
        <category>raspberry pi,</category>
        
        <category>streaming,</category>
        
        <category>web,</category>
        
        <category>code</category>
        
        
        <category>IoT</category>
        
      </item>
    
      <item>
        <title>PHP basics, are you sure? So tell me how to use octal system!</title>
        <description>&lt;p&gt;The program language PHP is a weak typing program language and with that comes
a few tricks. The first one is the octal format, can you guess how to write a
octal representation in PHP?&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;01234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;what-the-code-above-will-output&quot;&gt;What the code above will output?&lt;/h2&gt;

&lt;p&gt;For our surprise the code will output &lt;strong&gt;668&lt;/strong&gt;! It is because in PHP the octal
format is represented adding in the beginning of the string a simple 0 (zero).
Doing that the PHP will convert the given string in this case
&lt;strong&gt;1234&lt;/strong&gt; to &lt;strong&gt;668&lt;/strong&gt; decimal. You can find further information about that in the
PHP documentation &lt;strong&gt;[1]&lt;/strong&gt;.&lt;/p&gt;

&lt;h2 id=&quot;octal-system&quot;&gt;Octal system&lt;/h2&gt;

&lt;p&gt;The octal system works with 8 numbers starting from 0 and ending with 7
{ 0, 1, 2, 3, 4, 5, 6, 7 }.&lt;/p&gt;

&lt;h2 id=&quot;converting&quot;&gt;Converting&lt;/h2&gt;

&lt;p&gt;Converting to decimal format is really simple, let’s have a look in the same
example &lt;strong&gt;1234&lt;sub&gt;8&lt;/sub&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;1×8³ + 2×8² + 3×8¹ + 4×8⁰ = 668&lt;sub&gt;10&lt;/sub&gt;&lt;/p&gt;

&lt;p&gt;The first thing first, so if you have look in the expression above is simple to
deduce that we are splitting the numbers and then applying times 8.
So the right question is why are we using ³, ², ¹ and ⁰?
It comes from { 0, 1, 2, 3, 4, 5, 6, 7 }, do you remember that? So for each
number in the expression you’ll use these numbers &lt;strong&gt;from right to left&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;1×8&lt;strong&gt;³&lt;/strong&gt; + 2×8&lt;strong&gt;²&lt;/strong&gt; + 3×8&lt;strong&gt;¹&lt;/strong&gt; + 4×8&lt;strong&gt;⁰&lt;/strong&gt; = 668&lt;sub&gt;10&lt;/sub&gt;&lt;/p&gt;

&lt;h2 id=&quot;breaking-down-into-peaces-and-then-stick-together-again&quot;&gt;Breaking down into peaces and then stick together again&lt;/h2&gt;

&lt;p&gt;1×8³ = 512
2×8² = 128
3×8¹ = 24
4×8⁰ = 4
512 + 128 + 24 + 4 = &lt;strong&gt;668&lt;sub&gt;10&lt;/sub&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;references&quot;&gt;References&lt;/h2&gt;

&lt;p&gt;[1] &lt;a href=&quot;http://php.net/manual/en/language.types.integer.php&quot; target=&quot;_blank&quot;&gt;PHP documentation - Language types&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Jan 2015 13:25:14 +0000</pubDate>
        <link>https://marabesi.com/php/2015/01/27/php-basics-sure-tell-use-octal-system.html</link>
        <guid isPermaLink="true">https://marabesi.com/php/2015/01/27/php-basics-sure-tell-use-octal-system.html</guid>
        
        <category>PHP,</category>
        
        <category>system,</category>
        
        <category>numbers,</category>
        
        <category>format,</category>
        
        <category>program,</category>
        
        <category>expression,</category>
        
        <category>decimal,</category>
        
        <category>documentation,</category>
        
        <category>Converting,</category>
        
        <category>output,</category>
        
        <category>code,</category>
        
        <category>octal,</category>
        
        <category>php,</category>
        
        <category>php basics,</category>
        
        <category>zce,</category>
        
        <category>zcpe,</category>
        
        <category>certification,</category>
        
        <category>math</category>
        
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>TDD by example</title>
        <description>&lt;p&gt;&lt;a href=&quot;/images/posts/2015-01-26-tdd-by-example/cover.jpg&quot;&gt;&lt;img src=&quot;/images/posts/2015-01-26-tdd-by-example/cover.jpg&quot; alt=&quot;Cover of the book &amp;quot;TDD By Example&amp;quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;are-you-not-using-tdd-&quot;&gt;Are you not using TDD ?&lt;/h2&gt;

&lt;p&gt;TDD by example is a perfect book if you are looking for the first step into the
TDD world. I would say the book was divided into two main parts, the first one
is how does the TDD works and how to do your own tests using a simple abstraction,
by the way the problem presented was about currency. The second part is focus
on creating your own TDD framework.&lt;/p&gt;

&lt;p&gt;And here goes a tip for python developers, the second part of the book where
Kent Beck give us a explanation of what is suit and how it works was entirely
wrote in python. But the book is not wrote just using python is there a few
sections were wrote in Java as well.&lt;/p&gt;

&lt;h2 id=&quot;chapter-35---who-is-tdd-intended-for&quot;&gt;Chapter 35 - Who is TDD intended for?&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;*“Every programming practice encodes a value system, explicitly or implicitly. TDD is no different. If you’re happy slamming some code together that more or less works and never looking at the result again, TDD is not for you. TDD rests on a charmingly naïve geekoid assumption that if you write better code, you’ll be more successful. TDD helps you pay attention to the right issues at the right time so you can make your designs cleaner, you can refine your designs as you learn.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;small&gt;Kent Beck, Test Driven Development By Example&lt;/small&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 26 Jan 2015 11:59:40 +0000</pubDate>
        <link>https://marabesi.com/review/2015/01/26/tdd-by-example.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/01/26/tdd-by-example.html</guid>
        
        <category>TDD,</category>
        
        <category>book,</category>
        
        <category>example,</category>
        
        <category>designs,</category>
        
        <category>Beck,</category>
        
        <category>Kent,</category>
        
        <category>Code,</category>
        
        <category>development,</category>
        
        <category>driven,</category>
        
        <category>java,</category>
        
        <category>kent beck,</category>
        
        <category>tdd,</category>
        
        <category>software testing,</category>
        
        <category>pettern,</category>
        
        <category>tdd by example</category>
        
        
        <category>review</category>
        
      </item>
    
      <item>
        <title>Are we front-end/back-end developers?</title>
        <description>&lt;h2 id=&quot;how-does-the-back-end-developer-could-improve-the-front-end-development&quot;&gt;How does the back-end developer could improve the front-end development?&lt;/h2&gt;

&lt;p&gt;Being a backend developer is pretty exciting PHP, Java, ruby and loads more,
within database, algorithm with high performance and the most of the time it
is the part that the users don’t see.&lt;/p&gt;

&lt;h2 id=&quot;the-front-end-path&quot;&gt;The front-end path&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Design&lt;/li&gt;
  &lt;li&gt;Photoshop&lt;/li&gt;
  &lt;li&gt;HTML/CSS everything else&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-back-end-path&quot;&gt;The back-end path&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;algorithms  (logic programming)&lt;/li&gt;
  &lt;li&gt;design-patterns&lt;/li&gt;
  &lt;li&gt;database&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;how-does-these-path-cross&quot;&gt;How does these path cross?&lt;/h2&gt;

&lt;p&gt;The front-end community has increased a lot in the past few years with a lot
tools of automation such as grunt, gulp, sass, less etc.&lt;/p&gt;

&lt;p&gt;In the early days the front-end didn’t need to understand algorithms and it’s
logic rather than they just need to know how does the DOM works and a little
jQuery.&lt;/p&gt;

&lt;p&gt;But with the boom of the mobile it has changed. Nowadays both front-end and also
back-end developers need to combine their knowledge to create greats apps.&lt;/p&gt;

&lt;h2 id=&quot;what-is-the-point&quot;&gt;What is the point?&lt;/h2&gt;

&lt;p&gt;With the &lt;a href=&quot;https://angularjs.org&quot; target=&quot;_blank&quot;&gt;AngularJS&lt;/a&gt; and
&lt;a href=&quot;https://www.firebase.com&quot; target=&quot;_blank&quot;&gt;Firebase&lt;/a&gt; for example who is
beginning on the web world could create amazing web app based either as simple
as possible or as complex as possible. Now we can talk with front-ends about
designpatterns or even a designer could talk about design with a developer,
now we are on the same level working together to reach the highest level of
quality possible.&lt;/p&gt;

&lt;p&gt;So is that the evolution of software development? More integrated teams
back-ends,front-ends and designers?&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Jan 2015 01:39:18 +0000</pubDate>
        <link>https://marabesi.com/thoughts/2015/01/23/are-we-front-endback-end-developers.html</link>
        <guid isPermaLink="true">https://marabesi.com/thoughts/2015/01/23/are-we-front-endback-end-developers.html</guid>
        
        <category>case,</category>
        
        <category>diagram,</category>
        
        <category>Software,</category>
        
        <category>actor,</category>
        
        <category>development,</category>
        
        <category>management,</category>
        
        <category>UML,</category>
        
        <category>developer,</category>
        
        <category>code,</category>
        
        <category>flow,</category>
        
        <category>project,</category>
        
        <category>angular,</category>
        
        <category>backend,</category>
        
        <category>firebase,</category>
        
        <category>frontend,</category>
        
        <category>future,</category>
        
        <category>reflection,</category>
        
        <category>web</category>
        
        
        <category>Thoughts</category>
        
      </item>
    
      <item>
        <title>The Art of Readable Code</title>
        <description>&lt;p&gt;Have you ever wonder what was the best comment to write? Have you ever had
to read twice the same code to understand what that was about? Don’t worry
this book is for you!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/images/posts/2015-01-22-the-art-of-readable-code/cover.jpg&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/posts/2015-01-22-the-art-of-readable-code/cover.jpg&quot; alt=&quot;Cover of the book &amp;quot;The Art of Readable Code&amp;quot;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-art-of-readable-code-for-rescue&quot;&gt;The Art of Readable code for rescue&lt;/h2&gt;

&lt;p&gt;While I’m writing code some times I ask to myself if the name I gave to that
variable was the right or if was the best choice to put that
name &lt;em&gt;The art of readable&lt;/em&gt; code is about that and much more. With simple images in
the beginning of each chapter the author caught my attention to dive deep into
the subject as well as the simple vocabulary.&lt;/p&gt;

&lt;p&gt;The book is pretty much technical so I suggest if you’re not a programmer with
medium skills in any language the book will become a boring read.&lt;/p&gt;

&lt;p&gt;I would like to highlight these sections below of the book:&lt;/p&gt;

&lt;h2 id=&quot;chapter-1---what-makes-code-better&quot;&gt;Chapter 1 - What makes code “better”?&lt;/h2&gt;

&lt;p&gt;We can define as a code good or not based on our experience or knowledge,
although, it is not the right decision. Each person has your level and each team
has your own code style, particularities and so on. So while reading this book
keep it in mind it will be the base line.&lt;/p&gt;

&lt;h2 id=&quot;part-i-surface-level-improvements&quot;&gt;Part I. Surface-Level Improvements&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;“We begin our tour of readability with what we consider “surface-level” improvements:
picking good names, writing good comments, and formatting your code neatly.
These types of changes are easy to apply”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;small style=&quot;text-align: right;&quot;&gt;Dustin Boswell and Trevor Foucher, The Art of Readable Code&lt;/small&gt;&lt;/p&gt;

&lt;h2 id=&quot;part-ii-simplifying-loops-and-logic&quot;&gt;Part II. Simplifying Loops and Logic&lt;/h2&gt;

&lt;p&gt;The greatest lesson that we can learn from this session is: KEEP IT SIMPLE!
As much as you create nested loops and statement conditions the code will become
hard to read and understand.&lt;/p&gt;

&lt;h2 id=&quot;part-iii-reorganizing-your-code&quot;&gt;Part III. Reorganizing Your Code&lt;/h2&gt;

&lt;p&gt;As developers we are constantly trying to write the best code that we can but
sometimes it is not possible. The deadline was too close or the priority at the
time was other, but we can always refactor our code and reorganize.&lt;/p&gt;

&lt;h2 id=&quot;where-does-i-find-it&quot;&gt;Where does I find it?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://shop.oreilly.com/product/9780596802301.do&quot; target=&quot;_blank&quot;&gt;http://shop.oreilly.com/product/9780596802301.do&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 22 Jan 2015 12:18:46 +0000</pubDate>
        <link>https://marabesi.com/review/2015/01/22/the-art-of-readable-code.html</link>
        <guid isPermaLink="true">https://marabesi.com/review/2015/01/22/the-art-of-readable-code.html</guid>
        
        <category>Code,</category>
        
        <category>Readable,</category>
        
        <category>Art,</category>
        
        <category>read,</category>
        
        <category>good,</category>
        
        <category>writing,</category>
        
        <category>Boswell,</category>
        
        <category>write,</category>
        
        <category>art,</category>
        
        <category>book,</category>
        
        <category>code,</category>
        
        <category>oreilly,</category>
        
        <category>readable,</category>
        
        <category>review,</category>
        
        <category>technical debts,</category>
        
        <category>better code,</category>
        
        <category>Dustin Boswell,</category>
        
        <category>Trevor Foucher,</category>
        
        <category>The Art Of Readable Code</category>
        
        
        <category>review</category>
        
      </item>
    
  </channel>
</rss>
